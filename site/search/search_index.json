{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Welcome to Frank's Blog!  <p> GitHub | Twitter | WeChat </p>"},{"location":"Links/","title":"Links","text":""},{"location":"Links/#_1","title":"\u53cb\u60c5\u94fe\u63a5","text":""},{"location":"Links/#_2","title":"\ud83d\udcda \u63a8\u8350\u8d44\u6e90","text":"<ul> <li> <p> MDN Web Docs</p> <p>Web\u5f00\u53d1\u5fc5\u5907\u53c2\u8003</p> <p> MDN</p> </li> <li> <p> GitHub</p> <p>\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0</p> <p> GitHub</p> </li> <li> <p> Stack Overflow</p> <p>\u7a0b\u5e8f\u5458\u95ee\u7b54\u793e\u533a</p> <p> Stack Overflow</p> </li> </ul>"},{"location":"about/","title":"About","text":""},{"location":"about/#about-me","title":"About Me","text":""},{"location":"about/#_1","title":"\ud83d\udc4b \u4f60\u597d\uff01","text":"<p>\u6211\u662fFrank\uff0c\u4e00\u540d\u70ed\u7231\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u7f16\u7a0b\u7684\u5b66\u4e60\u8005\u3002\u8fd9\u4e2a\u535a\u5ba2\u662f\u6211\u8bb0\u5f55\u5b66\u4e60\u7b14\u8bb0\u3001\u5206\u4eab\u6280\u672f\u5fc3\u5f97\u548c\u4e2a\u4eba\u601d\u8003\u7684\u5730\u65b9\u3002</p>"},{"location":"about/#_2","title":"\ud83c\udfaf \u5173\u6ce8\u9886\u57df","text":"<ul> <li>\ud83d\udcbb \u7f16\u7a0b\u8bed\u8a00\uff1aPython, JavaScript, Java</li> <li>\ud83c\udf10 Web\u5f00\u53d1</li> <li>\ud83e\udd16 \u4eba\u5de5\u667a\u80fd\u4e0e\u673a\u5668\u5b66\u4e60</li> <li>\ud83d\udcf1 \u79fb\u52a8\u5e94\u7528\u5f00\u53d1</li> <li>\ud83d\udd27 \u5f00\u53d1\u5de5\u5177\u4e0e\u6700\u4f73\u5b9e\u8df5</li> </ul>"},{"location":"about/#_3","title":"\ud83c\udf1f \u4e2a\u4eba\u9879\u76ee","text":"<p>\u6211\u5728GitHub\u4e0a\u7ef4\u62a4\u7740\u4e00\u4e9b\u5f00\u6e90\u9879\u76ee\uff0c\u6b22\u8fce\u8bbf\u95ee\u6211\u7684GitHub\u4e3b\u9875\u3002</p>"},{"location":"about/#_4","title":"\ud83d\udceb \u8054\u7cfb\u65b9\u5f0f","text":"<ul> <li>GitHub: Frank-whw</li> <li>Twitter: @Frank</li> <li>WeChat: \u4e8c\u7ef4\u7801</li> </ul>"},{"location":"about/#_5","title":"\ud83d\udcad \u5ea7\u53f3\u94ed","text":"<p>\"Stay hungry, stay foolish.\" - Steve Jobs</p>"},{"location":"about/#2024","title":"\ud83c\udfaf 2024\u5e74\u76ee\u6807","text":"<ol> <li>\u6df1\u5165\u5b66\u4e60\u4eba\u5de5\u667a\u80fd\u548c\u673a\u5668\u5b66\u4e60</li> <li>\u53c2\u4e0e\u66f4\u591a\u5f00\u6e90\u9879\u76ee</li> <li>\u5b9a\u671f\u66f4\u65b0\u6280\u672f\u535a\u5ba2</li> <li>\u63d0\u5347\u82f1\u8bed\u6c34\u5e73</li> </ol> <p>\u611f\u8c22\u60a8\u8bbf\u95ee\u6211\u7684\u535a\u5ba2\uff01\u5982\u679c\u60a8\u6709\u4efb\u4f55\u95ee\u9898\u6216\u5efa\u8bae\uff0c\u6b22\u8fce\u4e0e\u6211\u8054\u7cfb\u3002 </p>"},{"location":"AI/","title":"Artificial Intelligence","text":""},{"location":"AI/#artificial-intelligence","title":"Artificial Intelligence","text":"<p>Abstract</p> <p>\u672c\u90e8\u5206\u5185\u5bb9\uff08\u9664\u7279\u522b\u58f0\u660e\u5916\uff09\u91c7\u7528 \u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u4fdd\u6301\u4e00\u81f4 4.0 \u56fd\u9645 (CC BY-NC-SA 4.0) \u8bb8\u53ef\u534f\u8bae\u8fdb\u884c\u8bb8\u53ef\u3002</p> <p>{{ BEGIN_TOC }} - \"\u6df1\u5ea6\u5b66\u4e60\u5165\u95e8\": \u57fa\u4e8epython\u7684\u7406\u8bba\u548c\u5b9e\u73b0</p> <p>{{ END_TOC }}</p>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/","title":"Python\u7406\u8bba\u4e0e\u5b9e\u73b0","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#1-python","title":"1. python\u5165\u95e8","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#11-numpy","title":"1.1 numpy","text":"<ul> <li>numpy\u662fpython\u7684\u4e00\u4e2a\u7b2c\u4e09\u65b9\u5e93\uff0c\u6709\u52a9\u4e8e\u6df1\u5ea6\u5b66\u4e60\u4e2d\u6570\u7ec4\u548c\u77e9\u9635\u7684\u8ba1\u7b97</li> <li><code>import numpy as np</code></li> <li>\u4e3b\u8981\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f\u5bf9\u5e94\u5143\u7d20\u505a\u8fd0\u7b97</li> <li>\u5e7f\u64ad\uff1a</li> <li> </li> <li>Python\u7b49\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u4e00\u822c\u6bd4C\u548cC++\u7b49\u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff08\u7f16\u8bd1\u578b\u8bed\u8a00\uff09 \u8fd0\u7b97\u901f\u5ea6\u6162\u3002</li> <li>\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u662f\u8fd0\u7b97\u91cf\u5927\u7684\u5904\u7406\u5bf9\u8c61\uff0c\u7528 C/C++\u5199\u7a0b\u5e8f\u66f4\u597d\u3002\u4e3a\u6b64\uff0c\u5f53 Python\u4e2d\u8ffd\u6c42\u6027\u80fd\u65f6\uff0c\u4eba\u4eec\u4f1a\u7528 C/C++\u6765\u5b9e\u73b0\u5904\u7406\u7684\u5185\u5bb9\u3002Python\u5219\u627f\u62c5\u201c\u4e2d\u95f4\u4eba\u201d\u7684\u89d2\u8272\uff0c\u8d1f\u8d23\u8c03\u7528\u90a3\u4e9b\u7528 C/ C++\u5199\u7684\u7a0b\u5e8f\u3002NumPy\u4e2d\uff0c\u4e3b\u8981\u7684\u5904\u7406\u4e5f\u90fd\u662f\u901a\u8fc7C\u6216C++\u5b9e\u73b0\u7684\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u635f\u5931\u6027\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528 Python\u4fbf\u5229\u7684\u8bed\u6cd5\u3002</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#12-matplotlib","title":"1.2 Matplotlib","text":"<ul> <li>\u7528\u4e8e\u56fe\u5f62\u7684\u53ef\u89c6\u5316</li> <li>pyplot\u7684\u529f\u80fd Python<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.arange(0, 6, 0.01)\ny1 = np.sin(x)\ny2 = np.cos(x)\n# print(x)\n# print(y)\nplt.plot(x, y1, label=\"sin\")\nplt.plot(x, y2, linestyle=\"--\", label=\"cos\")\nplt.xlabel(\"x\")\nplt.ylabel(\"y\")\nplt.title('sin &amp; cos')\nplt.legend()\nplt.show()\n</code></pre></li> <li>\u8fd0\u884c\u7ed3\u679c </li> <li>imshow()\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u8bfb\u5165\u56fe\u50cf Python<pre><code>import matplotlib.pyplot as plt\nfrom matplotlib.image import imread\nimg = imread('lena.png') # \u8bfb\u5165\u56fe\u50cf\nplt.imshow(img)\nplt.show()\n</code></pre></li> <li>\u8fd0\u884c\u7ed3\u679c</li> <li></li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#2","title":"2. \u611f\u77e5\u673a","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#21-what","title":"2.1 what","text":"<ul> <li> <p>\u63a5\u53d7\u591a\u4e2a\u4fe1\u53f7\uff0c\u8f93\u51fa\u4e00\u4e2a\u4fe1\u53f7 </p> </li> <li> <p>\u6709\u70b9\u6a21\u62df\u751f\u7269\u795e\u7ecf\u5143\u7684\u611f\u89c9</p> </li> <li>\u8f93\u5165\u4fe1\u53f7\u4e58\u4ee5\u5bf9\u5e94\u6743\u91cd\u7684\u603b\u548c\u8d85\u8fc7\u9608\u503c\u7684\u65f6\u5019 \u8f93\u51fa1\u2014\u2014\u795e\u7ecf\u5143\u88ab\u6fc0\u6d3b</li> <li></li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#22","title":"2.2 \u7b80\u5355\u903b\u8f91\u7535\u8def","text":"<ul> <li>\u4e0e\u300acode\u300b\u8fd9\u672c\u4e66\u4e0d\u540c\u7684\u5728\u4e8e\u672c\u7ae0\u4ee5\u611f\u77e5\u673a\u7684\u89d2\u5ea6\uff0c\u6216\u8005\u8bf4\u7528python\u4ee3\u7801\u7684\u5f62\u5f0f\u53bb\u5b9e\u73b0\u903b\u8f91\u95e8</li> <li>\u76f8\u540c\u6784\u9020\u7684\u611f\u77e5\u673a\uff0c\u53ea\u9700\u8981\u9002\u5f53\u5730\u8c03\u6574\u53c2\u6570\u7684\u503c\uff0c\u5c31\u53ef\u4ee5\u5728\u4e0e\u95e8\u3001\u4e0e\u975e\u95e8\u3001\u6216\u95e8\u4e4b\u95f4\u8f6c\u53d8</li> <li></li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#23","title":"2.3 \u611f\u77e5\u673a\u7684\u5b9e\u73b0","text":"<ul> <li>\u4e0e\u95e8 Python<pre><code>def AND(x1,x2):\n    x = np.array([x1, x2])\n    w = np.array([0.5, 0.5]) # w\u662f\u6743\u91cd\n    b = -0.7 # b\u79f0\u4e3a\u504f\u7f6e\n    tmp = np.sum(w * x) + b\n    return tmp &gt; 0 ? 1 : 0\n</code></pre></li> <li>\u800c\u6216\u95e8\u548c\u4e0e\u975e\u95e8\u7684\u5b9e\u73b0\uff0c\u4ec5\u9700\u6539\u53d8\u4e0a\u9762\u4ee3\u7801\u4e2dw\u548cb\u7684\u503c\u5373\u53ef</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#24","title":"2.4 \u611f\u77e5\u673a\u7684\u5c40\u9650","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#241","title":"2.4.1 \u5f02\u6216\u95e8","text":"<ul> <li>\u771f\u503c\u8868</li> <li> \u6240\u4ee5\u6211\u4eec\u80fd\u627e\u5230\u4e00\u7ec4w\u548cb\u7684\u503c\uff0c\u4f7f\u5f97\u7b80\u5355\u6539\u53d8\u4e0a\u9762\u4ee3\u7801\u5c31\u80fd\u5b9e\u73b0\u5f02\u6216\u95e8\u5417\uff1f</li> <li>\u627e\u4e0d\u5230\u3002\u4e3a\u4ec0\u4e48\u627e\u4e0d\u5230\u5462\uff1f\u901a\u8fc7\u753b\u56fe\u60f3\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u4e4b\u524d3\u4e2a\u95e8\u662f\u53ef\u4ee5\u7684\u3002</li> <li> </li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#242","title":"2.4.2 \u7ebf\u6027\u548c\u975e\u7ebf\u6027","text":"<ul> <li>\u611f\u77e5\u673a\u7684\u5c40\u9650\u5728\u4e8e\u5b83\u53ea\u80fd\u8868\u793a\u7531\u4e00\u6761\u76f4\u7ebf\u5206\u5272\u7684\u7a7a\u95f4</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#25","title":"2.5 \u591a\u91cd\u611f\u77e5\u673a","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#251","title":"2.5.1 \u5df2\u6709\u95e8\u7535\u8def\u7684\u7ec4\u5408","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#252","title":"2.5.2 \u5f02\u6216\u95e8\u7684\u5b9e\u73b0","text":"Python<pre><code>def XOR(x1, x2):\n    s1 = NAND(x1, x2)\n    s2 = OR(x1, x2)\n    y = AND(s1, s2)\n    return y\n</code></pre>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#26","title":"2.6 \u4ece\u4e0e\u975e\u95e8\u5230\u8ba1\u7b97\u673a","text":"<ul> <li>2\u5c42\u611f\u77e5\u673a\uff08\u4e25\u683c\u5730\u8bf4\u662f\u6fc0\u6d3b\u51fd\u6570\u4f7f\u7528\u4e86\u975e\u7ebf\u6027\u7684sigmoid\u51fd\u6570\u7684\u611f\u77e5\u673a\uff09\u53ef\u4ee5\u8868\u793a\u4efb\u610f\u51fd\u6570</li> <li>\u611f\u77e5\u673a\u901a\u8fc7\u53e0\u52a0\u5c42\u80fd\u591f\u8fdb\u884c\u975e\u7ebf\u6027\u7684\u8868\u793a\uff0c\u7406\u8bba\u4e0a\u8fd8\u53ef\u4ee5\u8868\u793a\u8ba1\u7b97\u673a\u8fdb\u884c\u7684\u5904\u7406</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#27","title":"2.7 \u5c0f\u7ed3","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#3","title":"3. \u795e\u7ecf\u7f51\u7edc","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#31","title":"3.1 \u4ece\u611f\u77e5\u673a\u5230\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#311","title":"3.1.1 \u795e\u7ecf\u7f51\u7edc\u7684\u4f8b\u5b50","text":"<p> - \u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u4fe1\u53f7\u5982\u4f55\u4f20\u9012\u5462\uff1f</p>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#312","title":"3.1.2 \u590d\u4e60\u611f\u77e5\u673a","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#313","title":"3.1.3 \u6fc0\u6d3b\u51fd\u6570","text":"<ul> <li>\u5c06\u8f93\u5165\u4fe1\u53f7\u7684\u603b\u548c\u8f6c\u6362\u4e3a\u8f93\u51fa\u4fe1\u53f7\u7684\u51fd\u6570\u6210\u4e3a\u6fc0\u6d3b\u51fd\u6570</li> <li>\u6bd4\u5982</li> <li> </li> <li>\u6fc0\u6d3b\u51fd\u6570\u662f\u8fde\u63a5\u611f\u77e5\u673a\u548c\u795e\u7ecf\u7f51\u7edc\u7684 \u6865\u6881\u3002</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#32","title":"3.2 \u6fc0\u6d3b\u51fd\u6570","text":"<ul> <li>\u611f\u77e5\u673a\u4f7f\u7528\u9636\u8dc3\u51fd\u6570\u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u4e0d\u540c\u4e8e\u795e\u7ecf\u7f51\u7edc\u4f7f\u7528\u7684</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#321-sigmoid","title":"3.2.1 sigmoid\u51fd\u6570","text":"<p> - \u7279\u70b9\u5728\u4e8e\u503c\u57df\u57280-1\u4e4b\u95f4\uff0c\u5173\u4e8e(0, 0.5)\u4e2d\u5fc3\u5bf9\u79f0</p>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#322","title":"3.2.2 \u9636\u8dc3\u51fd\u6570\u7684\u5b9e\u73b0","text":"Python<pre><code>def step_function(x):\n    y = x &gt; 0\n    return y.astype(np.int)\n</code></pre> - \u89e3\u91ca\uff1a<code>x &gt; 0</code> \u4f1a\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\u7684Numpy\u6570\u7ec4\uff0c\u800castype()\u53ef\u4ee5\u8f6c\u6362Numpy\u6570\u7ec4\u7684\u7c7b\u578b\u4e3a\u53c2\u6570\u6307\u5b9a\u671f\u671b\u7684\u7c7b\u578b"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#323","title":"3.2.3 \u9636\u8dc3\u51fd\u6570\u7684\u56fe\u50cf","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#324-sigmoid","title":"3.2.4 sigmoid\u51fd\u6570\u7684\u5b9e\u73b0","text":"Python<pre><code>def sigmoid(x):\n    return 1 / (1 + np.exp(-x))\n</code></pre>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#325-sigmoid","title":"3.2.5 sigmoid\u51fd\u6570\u548c\u9636\u8dc3\u51fd\u6570\u7684\u6bd4\u8f83","text":"<ul> <li>\u8fde\u7eed\u6027\u548c\u5e73\u6ed1\u6027</li> <li>sigmoid\u4f1a\u6839\u636e\u8f93\u5165\u4fe1\u53f7\u7684\u5927\u5c0f\u8c03\u6574\u8f93\u51fa\u4fe1\u53f7\u7684\u5927\u5c0f</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#326","title":"3.2.6 \u975e\u7ebf\u6027\u51fd\u6570","text":"<ul> <li>\u4e0a\u8ff0\u4e8c\u8005\u90fd\u662f\u975e\u7ebf\u6027\u51fd\u6570</li> <li>\u7ebf\u6027\u51fd\u6570\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u4e0d\u7ba1\u5982\u4f55\u52a0\u6df1\u5c42\u6570\uff0c\u603b\u662f\u5b58\u5728\u4e0e\u4e4b\u7b49\u6548\u7684\u201c\u65e0 \u9690\u85cf\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\u201d\u3002</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#327-relu","title":"3.2.7 ReLU\u51fd\u6570","text":"Python<pre><code>def relu(x):\n    return np.maximum(0, x)\n</code></pre>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#33","title":"3.3 \u591a\u7ef4\u6570\u7ec4\u7684\u8fd0\u7b97","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#331","title":"3.3.1 \u591a\u7ef4\u6570\u7ec4","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#332","title":"3.3.2 \u77e9\u9635\u4e58\u6cd5","text":"<ul> <li>np.dot(A, B) </li> </ul>"},{"location":"Archives/","title":"Archives","text":""},{"location":"Archives/#archives","title":"Archives","text":"<p>{{ blog_content }}</p>"},{"location":"Summaries/","title":"Summaries","text":""},{"location":"Summaries/#summaries","title":"Summaries","text":"<p>Abstract</p> <p>\u672c\u90e8\u5206\u5185\u5bb9\uff08\u9664\u7279\u522b\u58f0\u660e\u5916\uff09\u91c7\u7528 \u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u4fdd\u6301\u4e00\u81f4 4.0 \u56fd\u9645 (CC BY-NC-SA 4.0) \u8bb8\u53ef\u534f\u8bae\u8fdb\u884c\u8bb8\u53ef\u3002</p> <p>{{ BEGIN_TOC }} - \"\u5b66\u671f\u603b\u7ed3 &amp; \u5176\u4ed6\":</p> <ul> <li>\"2024 \u5e74\u5468\u7ed3\":</li> </ul> <p>{{ END_TOC }}</p>"},{"location":"Tools/","title":"Toolbox","text":""},{"location":"Tools/#toolbox","title":"Toolbox","text":"<p>Abstract</p> <p>\u672c\u90e8\u5206\u5185\u5bb9\uff08\u9664\u7279\u522b\u58f0\u660e\u5916\uff09\u91c7\u7528 \u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u4fdd\u6301\u4e00\u81f4 4.0 \u56fd\u9645 (CC BY-NC-SA 4.0) \u8bb8\u53ef\u534f\u8bae\u8fdb\u884c\u8bb8\u53ef\u3002</p> <p>{{ BEGIN_TOC }} - \"\u56fe\u5e8a\u642d\u5efa\": Tools/blog/\u56fe\u5e8a\u642d\u5efa {{ END_TOC }}</p>"},{"location":"Tools/blog/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/","title":"\u56fe\u5e8a\u642d\u5efa","text":""},{"location":"Tools/blog/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/#problem","title":"PROBLEM","text":"<p>\u76f4\u63a5\u590d\u5236\u9ecf\u8d34\u8fdbobsidian\u7684\u56fe\u7247\uff0c\u5f53\u6211\u5728blog\u4e0a\u53d1\u8868\u8fd9\u4e2a\u7b14\u8bb0\u65f6\u65e0\u6cd5\u663e\u793a</p>"},{"location":"Tools/blog/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/#reason","title":"REASON","text":"<p>\u672c\u5730\u4e4b\u6240\u4ee5\u80fd\u770b\u89c1\u56fe\u7247\u662f\u56e0\u4e3amd\u6587\u4ef6\u6240\u5728\u6587\u4ef6\u5939\u4f1a\u81ea\u52a8\u4fdd\u5b58\u56fe\u7247\u3002\u5982\u679c\u6211\u4eec\u60f3\u8ba9\u522b\u4eba\u4e5f\u770b\u89c1\u5b8c\u6574\u7684md\u6587\u4ef6\uff0c\u9700\u8981\u628a\u6574\u4e2a\u6587\u4ef6\u5939\u53d1\u7ed9\u5bf9\u65b9\uff0c\u4f46\u8fd9\u4e2a\u5728blog\u53d1\u5e03\u7684\u65f6\u5019\u663e\u7136\u662f\u4e0d\u884c\u7684</p>"},{"location":"Tools/blog/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/#solution","title":"SOLUTION","text":"<p>\u4f7f\u7528obsidian\u7684\u63d2\u4ef6image auto upload\u3001picgo\u8fd9\u4e2a\u5f00\u6e90\u8f6f\u4ef6\u4ee5\u53ca\u7528\u6765\u5b58\u50a8\u7167\u7247\u7684github</p> <p>\u672c\u4eba\u4e00\u5f00\u59cb\u662f\u5c1d\u8bd5\u4e03\u725b\u4e91\u6765\u5b58\u50a8\u7167\u7247\uff0c\u6709\u4ee5\u4e0b\u539f\u56e0\uff1a 1. \u4e03\u725b\u4e91\u6bcf\u4e2a\u6708\u670950G\u5185\u5b58\u7a7a\u95f4\uff0c\u5bf9\u4e8e\u4e2a\u4eba\u4f7f\u7528\u7ef0\u7ef0\u6709\u4f59 2. \u4e03\u725b\u4e91\u9700\u8981\u5907\u6848\u8fc7\u7684\u57df\u540d\uff0c\u800c\u672c\u4eba\u6b63\u597d\u6709\u4e00\u4e2a 3. \u4e03\u725b\u4e91\u5bf9\u4e8e\u56fd\u5185\u7f51\u7edc\u66f4\u52a0\u53cb\u597d \u5feb\u642d\u5efa\u5b8c\u624d\u53d1\u73b0\u4e00\u4e9b\u95ee\u9898\uff1a 1. \u6211\u7684\u57df\u540d\u662fhttps\u534f\u8bae\uff0c\u4f46\u4e03\u725b\u4e91\u53ea\u5bf9http\u514d\u8d39\uff0c\u6240\u4ee5\u6211\u653e\u5f03\u81ea\u5b9a\u4e49\u57df\u540d 2. \u4e03\u725b\u4e91\u4e5f\u63d0\u4f9b\u514d\u8d39\u7684\u6d4b\u8bd5\u57df\u540d\uff0c\u671f\u9650\u662f30\u5929\uff0c\u6bcf30\u5929\u5f97\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u7a7a\u95f4\uff0c\u4f1a\u6709\u4e00\u7cfb\u5217\u9ebb\u70e6</p> <ol> <li> <p>\u9996\u5148\u9700\u8981github\u4e0a\u521b\u5efa\u81ea\u5df1\u4e13\u95e8\u7528\u6765\u5b58\u653e\u56fe\u7247\u7684\u4ed3\u5e93 </p> </li> <li> <p>\u521b\u5efa\u540e\u53bb\u83b7\u53d6github token\u76f4\u63a5<code>generate new token</code>\u5373\u53ef\uff0cclassic -&gt; \u9009\u4e2drepo\uff0c\u63d0\u4ea4\u3002\u590d\u5236token\u5907\u7528</p> </li> <li>\u4e0b\u8f7dpicgo\uff0c\u9009\u62e9\u4e00\u4e2a\u7248\u672c\u4e0b\u8f7d\u5373\u53ef\uff0c\u6253\u5f00\u540e\u5728\u56fe\u5e8a\u8bbe\u7f6e\u4e2d\u9009\u5b9agithub\uff0c\u521b\u5efa - \u914d\u7f6e\u540d\u79f0\uff1a\u81ea\u5b9a\u4e49 - \u4ed3\u5e93\u540d\uff1agithub\u7528\u6237\u540d/\u4ed3\u5e93\u540d\uff0c\u6bd4\u5982frank-whw/image - \u5206\u652f\u540d\uff1a\u9ed8\u8ba4\u662fmain - \u8bbe\u5b9atoken\uff1a\u6b65\u9aa42\u4e2d\u590d\u5236\u5907\u7528\u7684token - \u5b58\u50a8\u8def\u5f84\uff1a\u968f\u4fbf\u5199 \u6bd4\u5982\u201cblog/\u201d \u6587\u4ef6\u5939\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u751f\u6210 - \u81ea\u5b9a\u4e49\u57df\u540d\uff1a\u5199\u4e0d\u5199\u90fd\u884c \u786e\u8ba4\u5b8c\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\uff0c\u9000\u51fa\u5373\u53ef</li> <li>\u6253\u5f00obsidian\uff0c\u5728\u7b2c\u4e09\u65b9\u63d2\u4ef6\u91cc\u641c\u7d22image auto import\uff0c\u5b89\u88c5\u542f\u7528\u5373\u53ef\u3002\u7b2c\u4e00\u6b21\u5b89\u88c5\u7684\u670b\u53cb\u53ef\u80fd\u9700\u8981\u5173\u95ed\u5b89\u5168\u6a21\u5f0f\u3002\u542f\u7528\u540e\u52fe\u9009\u4e0a\u201c\u526a\u5207\u677f\u81ea\u52a8\u4e0a\u4f20\u201d\uff0c\u5176\u5b83\u8bbe\u7f6e\u9ed8\u8ba4\u5373\u53ef </li> </ol> <p>**\u5b8c\u7ed3\u6492\u82b1\uff01\uff01</p>"},{"location":"cs61b/","title":"CS61B","text":""},{"location":"cs61b/#cs61b","title":"CS61B","text":"<p>Abstract</p> <p>\u672c\u90e8\u5206\u5185\u5bb9\uff08\u9664\u7279\u522b\u58f0\u660e\u5916\uff09\u91c7\u7528 \u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u4fdd\u6301\u4e00\u81f4 4.0 \u56fd\u9645 (CC BY-NC-SA 4.0) \u8bb8\u53ef\u534f\u8bae\u8fdb\u884c\u8bb8\u53ef\u3002</p> <p>{{ BEGIN_TOC }} - \"cs61b\": CS61B/cs61b - \"Gitlet\u4e4b\u6211\u89c1\": CS61B/gitlet\u4e4b\u6211\u89c1 {{ END_TOC }}</p>"},{"location":"cs61b/cs61b/","title":"\u8bfe\u7a0b\u7b14\u8bb0","text":""},{"location":"cs61b/cs61b/#9-disjointed-set","title":"9. Disjointed set","text":""},{"location":"cs61b/cs61b/#91-introduction","title":"9.1 introduction","text":"<ol> <li>\u4e92\u65a5</li> <li>\u67092\u79cd\u8fd0\u7b97\uff1a<ol> <li><code>connect(x, y)</code>\u6216\u8005\u8bf4\u662f<code>union</code></li> <li><code>isConnected(x, y)</code></li> </ol> </li> <li>an interface determines what behaviors a data structure should have (but not how to accomplish it)  \u63a5\u53e3</li> <li>design decisions greatly affect asymptotic runtime and code complexity. Java<pre><code>public interface DisjointSets {\n    /** connects two items P and Q */\n    void connect(int p, int q);\n\n    /** checks to see if two items are connected */\n    boolean isConnected(int p, int q); \n}\n</code></pre></li> </ol>"},{"location":"cs61b/cs61b/#92-quick-find","title":"9.2 Quick Find","text":"<ol> <li>\u540c\u4e00\u4e2aset\u7684\u5143\u7d20\u7684id\u76f8\u540c </li> <li>\u5224\u65adisConnected\uff08x, y)\u53ef\u4ee5\u76f4\u63a5\u5224\u65adid\u662f\u5426\u76f8\u540c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(1) Java<pre><code>public class QuickFindDS implements DisjointSets {\n\n    private int[] id;\n\n    /* \u0398(N) */\n    public QuickFindDS(int N){\n        id = new int[N];\n        for (int i = 0; i &lt; N; i++){\n            id[i] = i;\n        }\n    }\n\n    /* need to iterate through the array =&gt; \u0398(N) */\n    public void connect(int p, int q){\n        int pid = id[p];\n        int qid = id[q];\n        for (int i = 0; i &lt; id.length; i++){\n            if (id[i] == pid){\n                id[i] = qid;\n            }\n        }\n    }\n\n    /* \u0398(1) */\n    public boolean isConnected(int p, int q){\n        return (id[p] == id[q]);\n    }\n}\n</code></pre></li> </ol>"},{"location":"cs61b/cs61b/#93-quick-union","title":"9.3 Quick Union","text":"<ol> <li>\u8f85\u52a9\u51fd\u6570<code>find(int item)</code> \u8fd4\u56de<code>item</code>\u6240\u5728\u7684\u6839 <ul> <li>find(4) = 0   find(5) = 3 Java<pre><code>public class QuickUnionDS implements DisjointSets {\n    private int[] parent;\n    public QuickUnionDS(int num) {\n        parent = new int[num];\n        for (int i = 0; i &lt; num; i++) {\n            parent[i] = i;\n        }\n    }\n\n    private int find(int p) {\n        while (parent[p] &gt;= 0) {\n            p = parent[p];\n        }\n        return p;\n    }\n\n    @Override\n    public void connect(int p, int q) {\n        int i = find(p);\n        int j= find(q);\n        parent[i] = j;\n    }\n\n    @Override\n    public boolean isConnected(int p, int q) {\n        return find(p) == find(q);\n    }\n}\n</code></pre></li> </ul> </li> </ol>"},{"location":"cs61b/cs61b/#94-weighted-quick-unionwqu","title":"9.4 Weighted Quick Union(WQU)","text":"<ol> <li>\u4f18\u5316QU\uff0c\u9488\u5bf9<code>find</code>\u51fd\u6570\u5728\u8fd0\u884c\u662f\u8981climb to the root of a tree\uff0c\u663e\u7136\u662f\u4f4e\u6548\u7684\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u63d0\u51fa\u4e86\u4e2a\u5173\u952e\u601d\u8def\uff1a\u5728\u6bcf\u6b21connect\u65f6\uff0c\u5224\u65ad2\u4e2atrees\u7684\u9ad8\u5ea6\uff0c\u628a\u9ad8\u5ea6\u5c0f\u7684tree links to \u9ad8\u7684\u3002</li> <li>\u6811\u7684maximum height\u53ef\u4ee5\u63a7\u5236\u5728logN\u5185</li> </ol>"},{"location":"cs61b/cs61b/#95-wqu-with-path-compression","title":"9.5 WQU with Path Compression","text":"<ol> <li>\u6709\u70b9\u62bd\u8c61\uff0c\u8ba9\u6240\u6709\u7684<code>item</code>\u90fd\u8fde\u63a5\u5230\u6839</li> <li>\u7406\u89e3\u4e86</li> <li>\u6838\u5fc3\u601d\u8def\u662f\u5728find\u64cd\u4f5c\u65f6\uff0c\u5728\u7ecf\u8fc7\u6cbf\u9014\u7684<code>item</code>\u65f6\u628a\u5b83\u76f4\u63a5\u8fde\u63a5\u5230\u6839\u8282\u70b9\uff0c\u4f7f\u5f97\u540e\u7eed\u7684\u67e5\u627e\u8def\u5f84\u66f4\u77ed</li> <li>\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u589e\u52a0\u989d\u5916\u7684\u6e10\u8fdb\u590d\u6742\u5ea6\uff1a<ol> <li>\u987a\u8def</li> <li>\u644a\u8fd8\u5206\u6790\uff08Amortized Analysis\uff09</li> </ol> </li> </ol>"},{"location":"cs61b/cs61b/#10-adt","title":"10. ADT","text":""},{"location":"cs61b/cs61b/#101-intro","title":"10.1 intro","text":"<ul> <li>Abstract Data Type\u62bd\u8c61\u6570\u636e\u7c7b\u578b</li> <li>\u4ec5\u7531\u5176\u64cd\u4f5c\u5b9a\u4e49\uff0c\u800c\u4e0d\u7531\u5176\u5b9e\u73b0\u5b9a\u4e49</li> <li>\u5e38\u89c1\u7684\uff1aStacks\u3001Lists\u3001Sets\u3001Maps</li> </ul>"},{"location":"cs61b/cs61b/#102-trees","title":"10.2 trees","text":"<ul> <li>BST: Binary Search Tree</li> <li>**Hibbard deletion<ol> <li>\u627e\u5230\u8be5\u8282\u70b9\u7684\u76f4\u63a5\u540e\u7ee7\u8282\u70b9\uff08\u5373\u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u7684\u8282\u70b9\uff09\u6216\u76f4\u63a5\u524d\u9a71\u8282\u70b9\uff08\u5373\u5de6\u5b50\u6811\u4e2d\u6700\u5927\u7684\u8282\u70b9\uff09\u3002</li> <li>\u7528\u8be5\u540e\u7ee7\u8282\u70b9\u6216\u524d\u9a71\u8282\u70b9\u7684\u503c\u66ff\u6362\u5f85\u5220\u9664\u8282\u70b9\u7684\u503c\u3002</li> <li>\u7136\u540e\u5220\u9664\u8fd9\u4e2a\u540e\u7ee7\u6216\u524d\u9a71\u8282\u70b9\uff08\u6ce8\u610f\u5b83\u5fc5\u7136\u662f\u524d\u4e24\u79cd\u60c5\u51b5\u4e4b\u4e00\uff1a\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\uff09 </li> </ol> </li> </ul>"},{"location":"cs61b/cs61b/#11-balanced-trees","title":"11. Balanced Trees","text":""},{"location":"cs61b/cs61b/#111-intro","title":"11.1 Intro","text":"<ul> <li>BigO is not synonymous to the Worst-case</li> <li>depth: the number of links between a node and the root.</li> <li>height: the lowest depth of a tree.</li> <li>average depth: average of the total depths in the tree. </li> </ul>"},{"location":"cs61b/cs61b/#112-b-trees","title":"11.2 B-Trees","text":"<ul> <li>problem\uff1a\u6bcf\u6b21insert\u4e00\u4e2a\u6570\u636e\u65f6\u90fd\u4f1a\u589e\u52a0\u6811\u7684\u9ad8\u5ea6</li> <li>\u4e3a\u6539\u53d8\u8fd9\u70b9\uff0c\u5f15\u5165\u4e00\u4e2acrazy idea\uff1a**let's just never add a leaf node! **</li> <li> <p>When we insert, let's just add to a current leaf node. This way, the height will never increase. </p> </li> <li> <p>\u6211\u672c\u4eba\u662f\u4e0d\u592a\u559c\u6b22\u6216\u8005\u7406\u89e3\u8fd9\u4e00\u4e2aidea\uff0c\u539f\u56e0\u5728\u4e8e\u8fd9\u589e\u52a0\u4e86find\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u572816 17 18 19\u8fd9\u4e00\u4e2a\u53f6\u5b50\u4e2dfind\u6570\u636e\u8fd8\u662f\u9700\u8981traverse\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u53f6\u5b50\u7684\u5927\u5c0f</p> </li> </ul>"},{"location":"cs61b/cs61b/#113-b-tree-invariants","title":"11.3 B-Tree invariants","text":"<ul> <li>\u540c\u6837\u4e00\u7ec4\u6570\u636e\uff0c\u63d2\u5165\u7684\u987a\u5e8f\u4f1a\u51b3\u5b9a\u6811\u7684\u9ad8\u5ea6</li> <li>B-Trees\u7684\u7279\u70b9\uff08invarants\uff09\uff1a<ol> <li>All leaves must be the same distance from the source.</li> <li>A non-leaf node with <code>k</code>items must have exactly <code>k+1</code> children.</li> </ol> </li> </ul>"},{"location":"cs61b/cs61b/#114-rotating-trees","title":"11.4 Rotating Trees","text":"<ul> <li>\u5b58\u5728\u7684\u539f\u56e0\u5728\u4e8e\u901a\u8fc7rotating\u53bb\u7ef4\u6301\u6811\u7684invariant Java<pre><code>private Node rotateRight(Node h) {\n    // assert (h != null) &amp;&amp; isRed(h.left);\n    Node x = h.left;\n    h.left = x.right;\n    x.right = h;\n    return x;\n}\n\n// make a right-leaning link lean to the left\nprivate Node rotateLeft(Node h) {\n    // assert (h != null) &amp;&amp; isRed(h.right);\n    Node x = h.right;\n    h.right = x.left;\n    x.left = h;\n    return x;\n}\n</code></pre></li> </ul>"},{"location":"cs61b/cs61b/#115-red-black-trees","title":"11.5 Red-Black Trees","text":"<ul> <li>\u7565</li> </ul>"},{"location":"cs61b/cs61b/#12-hashing","title":"12 Hashing","text":""},{"location":"cs61b/cs61b/#121-attempt","title":"12.1 attempt","text":"<ul> <li>limitation\uff1a<ol> <li>item\u9700\u8981\u53ef\u4ee5\u88ab\u6bd4\u8f83</li> <li>\u6700\u4f18\u53ea\u6709logn\u7684\u590d\u6742\u5ea6\uff0c\u80fd\u4e0d\u80fd\u66f4\u52a0\u4f18\u79c0</li> </ol> </li> <li>\u9488\u5bf9limitation2\u63d0\u51faDataIndexedIntergerSet</li> </ul>"},{"location":"cs61b/cs61b/#122-inserting-words","title":"12.2 Inserting words","text":"<ul> <li>\u5176\u5b9e\u5c31\u662f\u5f15\u51fa\u4e86\u54c8\u5e0c\u8868\u7684\u6838\u5fc3\uff1ainput\u4e00\u4e2a\u4ec0\u4e48\u4e1c\u897f\uff0c\u628a\u5b83\u8f6c\u4e3a\u6210\u552f\u4e00\u4e14\u5bf9\u5e94\u7684hash\u503c\uff0c\u6839\u636e\u8fd9\u4e2ahash\u503c\u53ef\u4ee5\u5224\u65ad\u8fd9\u4e2a\u4e1c\u897f\u662f\u4e0d\u662f\u5b58\u5728</li> <li>\u89e3\u51b3\u4e86item\u53ef\u4ee5\u4e0d\u9700\u8981\u88ab\u6bd4\u8f83\u7684\u95ee\u9898\u4ee5\u53ca\u590d\u6742\u5ea6\u53d8\u4e3aO(1)</li> <li>\u4f46\u662f\u65b0\u95ee\u9898\uff1a\u6d6a\u8d39</li> </ul>"},{"location":"cs61b/cs61b/#123-inserting-string-and-overflow","title":"12.3 Inserting String and Overflow","text":"<ul> <li>overflow\u4f1a\u5bfc\u81f42\u79cd\u4e0d\u540c\u7684string\u6709\u76f8\u540c\u7684\u8868\u793a</li> <li>\u56e0\u4e3ajava\u4e2d\u6700\u5927\u7684\u6570\u636e\u662f2,147,483,647</li> <li>java\u4e2d\u6700\u591a\u67094,294,967,296\u4e2a\u6574\u6570\uff0c\u4f46\u662fobject\u7684\u6570\u91cf\u6bd4\u8fd9\u591a</li> <li>\u6240\u4ee5collision\u4e0d\u53ef\u907f\u514d\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u4f1a\u963b\u6b62\u6211\u4eec\u5c06string\u8f6c\u6362\u6210int</li> <li>\u4ee5\u4e0a\u8fd9\u79cd\u8f6c\u6362\u79f0\u4e4b\u4e3a\"Computing the hash code of the object\"</li> <li>java\u7684\u6bcf\u4e00\u4e2aobject\u90fd\u5185\u7f6e\u4e86\u4e00\u4e2a\u51fd\u6570<code>.hashcode()</code>\uff0c\u8fd9\u662f\u901a\u8fc7object\u7684\u5730\u5740\uff08\u5730\u5740\u663e\u7136\u662f\u552f\u4e00\u4e14\u5bf9\u5e94\u7684\uff09\u751f\u6210hash\u503c</li> <li>\u6709\u65f6\u6211\u4eec\u4e5f\u81ea\u5df1create <code>hashcode</code> method</li> <li>properties of <code>hashCodes</code>:<ol> <li>\u5fc5\u987b\u662f\u6574\u6570</li> <li>\u5bf9\u540c\u4e00\u4e2aobject\u8fd0\u884c<code>.hashCode</code>\uff0c\u8fd4\u56de\u503c\u5fc5\u987b\u76f8\u540c</li> <li>2\u4e2aObject\u88ab\u8ba4\u4e3a<code>.equal()</code>\u5fc5\u987b\u6709\u76f8\u540c\u7684hash code</li> </ol> </li> <li>pending issues\uff1a<ul> <li>a lot of space</li> <li>hash collisions</li> </ul> </li> </ul>"},{"location":"cs61b/cs61b/#124-handling-collisions","title":"12.4 handling collisions","text":"<ul> <li>\u4e3b\u8981\u7684\u60f3\u6cd5\u662f\u4e00\u4e2ahash\u503c\u5bf9\u5e94\u4e00\u4e2aLinkedList\uff0cso that\u5982\u679c\u5728\u6dfb\u52a0\u4e00\u4e2aitem\u65f6\uff0c\u5b83\u7684hash\u503c\u5df2\u7ecf\u5b58\u5728\u5728map\u4e2d\u8bf4\u660ehash collision\uff0c\u90a3\u4e48\u5c06\u8fd9\u4e2aitem\u653e\u5728hash\u503c\u5bf9\u5e94\u7684LinkedList\u4e2d\uff08\u56e0\u4e3aList\u663e\u7136\u662f\u53ef\u4ee5\u5b58\u591a\u4e2aitem\u7684\uff09</li> <li>create workflow\uff1a<ul> <li><code>add</code>item</li> <li><code>contains</code>item</li> </ul> </li> <li>\u4e8e\u662f\u53ef\u4ee5\u51cf\u5c11\u5bb9\u91cf\uff0c\u540c\u65f6\u4f7f\u7528mod\u8fd0\u7b97</li> <li>\u76ee\u524d\u7684\u60c5\u51b5\uff1a<ul> <li>space\u95ee\u9898\u89e3\u51b3\u4e86</li> <li>collision\u89e3\u51b3\u4e86</li> <li>runtime complexity\u6709\u95ee\u9898\u4e86</li> </ul> </li> </ul>"},{"location":"cs61b/cs61b/#125-hash-table-and-fixing-runtime","title":"12.5 Hash Table and Fixing Runtime","text":"<ul> <li>\u6700\u7ec8\u7684\u6570\u636e\u7ed3\u6784\uff1a<code>HashTable</code><ul> <li>Inputs are converted by a hash function (<code>hashcode</code>) into an integer. Then, they're converted to a valid index using the modulus operator. Then, they're added at that index (dealing with collisions using LinkedList).</li> <li><code>contains</code> works in a similar fashion by figuring out the valid index, and looking in the corresponding LinkedList for the item.</li> </ul> </li> <li>\u5982\u4f55\u89e3\u51b3runtime\u95ee\u9898\uff1a<ol> <li>\u52a8\u6001\u589e\u957f\u54c8\u5e0c\u8868</li> <li>\u6539\u8fdb\u54c8\u5e0c\u7801</li> </ol> </li> </ul>"},{"location":"cs61b/cs61b/#lab-7","title":"Lab 7","text":"<ul> <li>\u4ee5\u6811\u4e3a\u57fa\u7840\u521b\u5efa\u4e00\u4e2aMap</li> <li>\u521b\u5efa\u5b8c\u4e4b\u540e\u4e0eULLMap\u548cTreeMap\u6bd4\u8f83</li> <li>\u9700\u8981\u5b8c\u6210\u7684method\uff1a\u9664\u4e86<code>remove\u3001iterator\u3001keySet</code>\u90fd\u8981 + <code>printInOrder</code>()</li> <li>K\u5e94\u8be5\u7ee7\u627fComparable\uff1aassume that generic keys <code>K</code> have a <code>compareTo</code> method.</li> <li>use a private nested <code>BSTNode</code> class to help facilitate your implementation. \uff08recommend\uff09 finish at 2024\u5e7411\u670819\u65e5</li> </ul>"},{"location":"cs61b/cs61b/#13-heaps-and-priority-queues","title":"13 Heaps and Priority Queues","text":""},{"location":"cs61b/cs61b/#131-pq-interface","title":"13.1 PQ interface","text":"<ul> <li>\u5f15\u5165\uff1a\u5982\u4f55\u627e\u5230\u6700\u5927\u6216\u8005\u6700\u5c0f\u7684\u5143\u7d20\u800c\u4e0d\u53ea\u662f\u5feb\u901f\u641c\u7d22</li> <li>\u5f15\u51fa\uff1aPriority Queue\uff08\u4f18\u5148\u961f\u5217\uff09<ul> <li>\u5982\u4f55\u7406\u89e3\uff1a\u60f3\u8c61\u4e00\u4e2a\u5305\uff0c\u53ef\u4ee5\u52a0\u4e1c\u897f \u53ef\u4ee5\u51cf\u4e1c\u897f\uff0c\u4f46\u662f\u53ea\u80fd<code>interact with the smallest items of this bag</code> ```java /** (Min) Priority Queue: Allowing tracking and removal of </li> </ul> </li> <li> <p>the smallest item in a priority queue. / public interface MinPQ {     / Adds the item to the priority queue. /     public void add(Item x);     / Returns the smallest item in the priority queue. */     public Item getSmallest();     / Removes the smallest item from the priority queue. /     public Item removeSmallest();     / Returns the size of the priority queue. /     public int size(); }     ``` </p> </li> <li> <p>\u663e\u7136BST\u7684\u6548\u7387\u6700\u9ad8</p> </li> </ul>"},{"location":"cs61b/cs61b/#132-heaps","title":"13.2 Heaps","text":"<ul> <li>\u6839\u636eBST\u5f15\u51famin-heap\uff0c\u6709\u5982\u4e0b\u7279\u6027\uff1a<ul> <li>\u6bcf\u4e2a\u8282\u70b9\u90fd\u5c0f\u4e8e\u7b49\u4e8e\u5b83\u7684\u5b69\u5b50</li> <li>\u5982\u679c\u6709\u7f3a\u5931\uff0c\u53ea\u4f1a\u51fa\u73b0\u5728bottom level</li> </ul> </li> <li>\u6709\u5982\u4e0b\u64cd\u4f5c\uff1a<ol> <li><code>add</code>: Add to the end of heap temporarily. Swim up the hierarchy to the proper place</li> <li><code>getSmallest</code>: Return the root of the heap (This is guaranteed to be the minimum by our min-heap property</li> <li><code>removeSmallest</code>: Swap the last item in the heap into the root. Sink down the hierarchy to the proper place.</li> </ol> </li> </ul>"},{"location":"cs61b/cs61b/#133-the-implementation","title":"13.3 The Implementation","text":"<ul> <li>\u901a\u8fc7\u5728\u4e00\u4e2a\u6570\u7ec4\u7684\u5f00\u5934\u7559\u4e00\u4e2a\u7a7a\u4f4d\u4ee5\u7b80\u5316\u8ba1\u7b97</li> <li><code>leftChild(k)</code>=k\u22172=k\u22172</li> <li><code>rightChild(k)</code>=k\u22172+1=k\u22172+1</li> <li><code>parent(k)</code> =k/2=k/2</li> </ul> Methods Ordered Array Bushy BST Hash Table Heap <code>add</code> \u0398(N) \u0398(logN) \u0398(1) \u0398(logN) <code>getSmallest</code> \u0398(1) \u0398(logN) \u0398(N) \u0398(1) <code>removeSmallest</code> \u0398(N) \u0398(logN) \u0398(N) \u0398(logN) problem\uff1a 1. PQ\u600e\u4e48\u77e5\u9053\u5982\u4f55\u6392\u5e8f 2. \u6709\u4ec0\u4e48\u5141\u8bb8\u7075\u6d3b\u6392\u5e8f\u7684\u65b9\u6cd5\u5417 3. \u600e\u4e48\u6837\u624d\u80fd\u5c06MinPQ\u53d8\u4e3aMaxPQ"},{"location":"cs61b/cs61b/#14-data-structures-summary","title":"14 Data Structures Summary","text":"Name Store Operation(s) Primary Retrieval Operation Retrieve By List <code>add(key)</code>, <code>insert(key, index)</code> <code>get(index)</code> index Map <code>put(key, value)</code> <code>get(key)</code> key identity Set <code>add(key)</code> <code>containsKey(key)</code> key identity PQ <code>add(key)</code> <code>getSmallest()</code> key order (aka key size) Disjoint Sets <code>connect(int1, int2)</code> <code>isConnected(int1, int2)</code> two integer values <ul> <li>we can often think of an ADT by the use of another ADT. </li> <li>And that Abstract Data Types have layers of abstraction, each defining a behavior that is more specific than the idea that came before it.</li> </ul>"},{"location":"cs61b/cs61b/#17-tree-traversals-and-graphs","title":"17 Tree Traversals and Graphs","text":""},{"location":"cs61b/cs61b/#171-tree-recap","title":"17.1 Tree recap","text":"<ul> <li>\u6811\u7684\u4f5c\u7528\uff1a <code>speeding up searching for items, allowing prefixing, checking connectedness, and so on</code></li> <li>\u6811\u7684\u5e94\u7528\u5728\u751f\u6d3b\u4e2d\u5f88\u666e\u904d</li> </ul>"},{"location":"cs61b/cs61b/#172-tree-traversal","title":"17.2 Tree Traversal","text":"<ul> <li>\u5c42\u904d\u5386 + \u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff08\u524d\u5e8f\u3001\u4e2d\u5e8f\u548c\u540e\u5e8f\uff09</li> <li>\u524d\u5e8f\u904d\u5386 Java<pre><code>preOrder(BSTNode x) {\n    if (x == null) return;\n    print(x.key)\n    preOrder(x.left)\n    preOrder(x.right)\n}\n</code></pre></li> </ul>"},{"location":"cs61b/cs61b/#173-graphs","title":"17.3 Graphs","text":"<ul> <li>\u6811\u7684\u5c40\u9650\uff1a2\u4e2a\u8282\u70b9\u4e4b\u95f4\u53ea\u80fd\u6709\u4e00\u6761\u8def\u5f84</li> <li>\u56fe\u7684\u7ec4\u6210\uff1a\u70b9+\u8fb9</li> <li>\u6811 \u771f\u5305\u542b\u4e8e \u56fe</li> <li>Graphs can be divided into two categories: simple graphs and multigraphs (or complicated graphs, a term I invented, because that's how I like to think of them.)</li> <li>\u672c\u8282\u8bfe\u7814\u7a76simple graphs\uff0c\u7b80\u5355\u56fe\u53c8\u5206\u4e3a\u65e0\u5411+\u6709\u5411</li> </ul>"},{"location":"cs61b/cs61b/#174-graph-problems","title":"17.4 Graph Problems","text":"<ul> <li>s-t Path: Is there a path between vertices s and t?</li> <li>Connectivity: Is the graph connected, i.e. is there a path between all vertices?</li> <li>Biconnectivity: Is there a vertex whose removal disconnects the graph?</li> <li>Shortest s-t Path: What is the shortest path between vertices s and t?</li> <li>Cycle Detection: Does the graph contain any cycles?</li> <li>Euler Tour: Is there a cycle that uses every edge exactly once?</li> <li>Hamilton Tour: Is there a cycle that uses every vertex exactly once?</li> <li>Planarity: Can you draw the graph on paper with no crossing edges?</li> <li>Isomorphism: Are two graphs isomorphic (the same graph in disguise)?</li> </ul>"},{"location":"cs61b/cs61b/#18-bfs","title":"18. BFS","text":""},{"location":"cs61b/cs61b/#181-bfs","title":"18.1 BFS","text":"<ul> <li>Breadth First Search(also known as Level Order Traversal)</li> <li>The pseudocode for BFS is as follows: Text Only<pre><code>Initialize the fringe (a queue with the starting vertex) and mark that vertex.\nRepeat until fringe is empty:\nRemove vertex v from the fringe.\nFor each unmarked neighbor n of v:\nMark n.\nAdd n to fringe.\nSet edgeTo[n] = v.\nSet distTo[n] = distTo[v] + 1.\n</code></pre></li> </ul> <p>fringe\u5728\u8fd9\u8fb9\u6307\u4e00\u4e2a\u961f\u5217\uff0c\u5148\u5165\u5148\u51fa</p> <ul> <li>dfs\u548cbfs\u7684\u533a\u522b\uff1a<ul> <li>dfs\u662f\u4e00\u4e2a\u65b9\u5411\u53bb\u641c\uff0c\u4e0d\u5230\u9ec4\u6cb3\u4e0d\u56de\u5934\uff0c\u76f4\u5230\u9047\u5230\u7edd\u5883</li> <li>bfs\u662f\u5148\u628a\u672c\u8282\u70b9\u6240\u8fde\u63a5\u7684\u6240\u6709\u8282\u70b9\u90fd\u904d\u5386\u4e00\u904d\uff0c\u8d70\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u5019\uff0c\u518d\u628a\u8fde\u63a5\u8282\u70b9\u7684\u6240\u6709\u8282\u70b9\u904d\u5386\u4e00\u904d</li> </ul> </li> </ul>"},{"location":"cs61b/cs61b/#182-representing-graphs","title":"18.2 Representing Graphs","text":"<ul> <li>\u6709\u4e2a\u96be\u70b9\uff1a<ul> <li>\u539f\u8bdd\uff1aFor our Graph API, let's use the common convention of assigning each unique node to an integer number. This can be done by maintaining a map which can tell us the integer assigned to each original node label. Doing so allows us to define our API to work with integers specifically, rather than introducing the need for generic types.</li> <li>\u6211\u7684\u7406\u89e3\uff1a\u7528\u552f\u4e00\u5bf9\u5e94\u7684\u6574\u6570\u8868\u793a\u8282\u70b9\uff0c\u800c\u4e0d\u662f\u8282\u70b9\u7684\u539f\u59cb\u6807\u7b7e\uff0c\u6709\u70b9\u50cfHash\u7b97\u6cd5</li> </ul> </li> </ul>"},{"location":"cs61b/cs61b/#lab-8","title":"Lab 8","text":""},{"location":"cs61b/cs61b/#key-things","title":"key things","text":"<ul> <li>\u4e0elab7\u5f88\u50cf\uff0c\u4e0d\u540c\u70b9\u5728\u4e8e\u8fd9\u6b21\u5c06\u5efa\u9020\u4e00\u4e2aHash Map\u800c\u4e0d\u662fTree Map</li> <li>\u5b8c\u6210\u540e \u9700\u8981\u4e0e\u57fa\u4e8e\u5217\u8868\u7684Map \u4ee5\u53ca \u5185\u7f6e\u7684Java HashMap\u8fdb\u884c\u6bd4\u8f83\uff0c\u53e6\u5916\u8981\u548c\u57fa\u4e8e\u4e0d\u540c\u6570\u636e\u7ed3\u6784\u7684map\u5bf9\u6bd4</li> <li>\u65b0\u5efa\u4e00\u4e2aclass MyHashMap\uff0c\u5b8c\u6210Map61B\u4e2d\u6240\u6709\u7684methods\uff0c\u5176\u4e2dremove\u7528\u62a5\u9519\u4ee3\u66ff\uff0citerator\u8fd4\u56de\u8fed\u4ee3\u5668\uff0c\u5efa\u8bae\u65b0\u5efa\u4e00\u4e2aHashSet\u5b9e\u4f8b\u5c5e\u6027</li> <li>\u90a3\u4e48\u5982\u4f55\u8ba9hash table\u57fa\u4e8e\u4e0d\u540c\u7684\u6570\u636e\u7ed3\u6784\u5462\uff1f\u5982\u679c\u53ea\u662f\u4f7f\u7528 Find + Replace \u9700\u8981\u4ed8\u51fa\u5f88\u591a\u52aa\u529b\u624d\u80fd\u5c06\u5b58\u50a8\u6876\u7c7b\u578b\u66f4\u6539\u4e3a\u4e0d\u540c\u7684\u5b58\u50a8\u6876\u7c7b\u578b\u3002\u6240\u4ee5\u6211\u4eec\u8fd9\u8fb9\u8981\u4f7f\u7528polymorphism\u548cinheritance</li> <li>\u7ee7\u627f\u7ed3\u6784\u5982\u4e0b\uff1a </li> <li>In the starter code, we give the instance variable <code>private Collection&lt;Node&gt;[] buckets</code>, which is the underlying data structure of the hash table.     \u89e3\u8bfb<ul> <li>buckets\u662fMyHashMap\u7684\u4e00\u4e2aprivate\u53d8\u91cf</li> <li>\u8fd9\u662fCollection\u5bf9\u8c61\u7684\u6570\u7ec4\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2aCollection\u4ee3\u8868\u4e00\u4e2abucket</li> <li>Node\u662f\u4e2aprivate\u8f85\u52a9\u7684\u7c7b\uff0c\u7528\u6765\u5b58\u50a8\u5355\u4e2akey-value\u5bf9\u3002starter code\u5e94\u8be5\u6613\u4e8e\u7406\u89e3\u4e14\u4e0d\u9700\u8981\u4efb\u4f55\u4fee\u6539</li> <li>java.util.Collection\u662f\u5927\u591a\u6570\u636e\u7ed3\u6784\u7ee7\u627f\u81ea\u7684\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u652f\u6301\u5f88\u591amethods\uff0c\u5982add\u3001remove\u3001iterate\u3002\u6709\u4ee5\u4e0b\u6570\u636e\u7ed3\u6784\u7ee7\u627f\u4e86\u8be5\u63a5\u53e3\uff1aArrayList\u3001LinkedList\u3001TreeSet\u3001HashSet\u3001PriorityQueue\u7b49\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5assign them to a variable of static type Collection with polymorphism\uff08\u591a\u6001\uff09</li> <li>\u7531\u4e8e Java \u7684\u9650\u5236\uff0c\u4e0d\u80fd\u76f4\u63a5\u521b\u5efa\u53c2\u6570\u5316\u7c7b\u578b\uff08\u4f8b\u5982 <code>Collection&lt;Node&gt;</code>)\u7684\u6570\u7ec4\u3002\u4e3a\u4e86\u5b9e\u73b0\u7c7b\u4f3c\u529f\u80fd\uff0c\u53ef\u4ee5\u521b\u5efa\u539f\u59cb\u7c7b\u578b\u7684 <code>Collection[]</code> \u6570\u7ec4\uff0c\u5e76\u901a\u8fc7\u7f16\u7a0b\u7ea6\u5b9a\uff0c\u786e\u4fdd\u6570\u7ec4\u4e2d\u53ea\u5b58\u50a8\u7279\u5b9a\u7c7b\u578b\uff08\u5982 <code>Collection&lt;Node&gt;</code>\uff09\u7684\u5143\u7d20\u3002 \u4e0d\u592a\u7406\u89e3<ul> <li>\u4e0d\u80fd\u521b\u5efa\u53c2\u6570\u5316\u7c7b\u578b\u7684\u6570\u7ec4\uff1a     \u5728 Java \u4e2d\uff0c\u4e0d\u80fd\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u53c2\u6570\u5316\u7c7b\u578b\uff08Parameterized Type\uff0c\u4f8b\u5982 <code>Collection&lt;Node&gt;</code>\uff09\u7684\u6570\u7ec4\u3002\u6bd4\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u662f\u4e0d\u5408\u6cd5\u7684\uff1a <code>Collection&lt;Node&gt;[] buckets = new Collection&lt;Node&gt;[size];</code>     \u8fd9\u662f\u56e0\u4e3a Java \u7684\u6cdb\u578b\u662f\u901a\u8fc7\u7c7b\u578b\u64e6\u9664\uff08Type Erasure\uff09\u5b9e\u73b0\u7684\uff0c\u5728\u8fd0\u884c\u65f6\uff0c<code>Collection&lt;Node&gt;</code> \u5176\u5b9e\u53ea\u88ab\u5f53\u4f5c\u4e00\u4e2a\u666e\u901a\u7684 <code>Collection</code>\u3002\u5982\u679c\u5141\u8bb8\u76f4\u63a5\u521b\u5efa\u53c2\u6570\u5316\u7c7b\u578b\u6570\u7ec4\uff0c\u4f1a\u5bfc\u81f4\u7c7b\u578b\u5b89\u5168\u95ee\u9898\uff0c\u65e0\u6cd5\u4fdd\u8bc1\u6570\u7ec4\u4e2d\u5b58\u50a8\u7684\u5143\u7d20\u7c7b\u578b\u4e00\u81f4\u3002</li> <li>\u89e3\u51b3\u65b9\u6cd5\uff1a     \u4e3a\u4e86\u7ed5\u8fc7\u8fd9\u4e2a\u9650\u5236\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6ca1\u6709\u6307\u5b9a\u5177\u4f53\u7c7b\u578b\u7684 <code>Collection[]</code> \u6570\u7ec4\uff08\u5373\u539f\u59cb\u7c7b\u578b\u7684\u6570\u7ec4\uff09\uff0c\u7136\u540e\u5728\u4f7f\u7528\u65f6\u53ea\u5411\u6570\u7ec4\u4e2d\u6dfb\u52a0\u7c7b\u578b\u4e3a <code>Collection&lt;Node&gt;</code> \u7684\u5143\u7d20\u3002\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a<code>Collection&lt;Node&gt;[] buckets = new Collection[size];</code>     \u8fd9\u91cc\u7684 <code>new Collection[size]</code> \u521b\u5efa\u4e86\u4e00\u4e2a\u53ea\u80fd\u5b58\u50a8 <code>Collection</code> \u7684\u6570\u7ec4\uff0c\u4f46\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\u7684 <code>Collection</code>\uff08\u4f8b\u5982 <code>Collection&lt;Integer&gt;</code> \u6216 <code>Collection&lt;Node&gt;</code>\uff09\u3002\u901a\u8fc7\u7f16\u7a0b\u7ea6\u5b9a\uff0c\u6211\u4eec\u53ea\u5f80\u5176\u4e2d\u6dfb\u52a0 <code>Collection&lt;Node&gt;</code>\u3002</li> <li>\u4fdd\u8bc1\u7c7b\u578b\u5b89\u5168\uff1a     \u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0c\u5c3d\u7ba1\u6570\u7ec4\u5141\u8bb8\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u96c6\u5408\uff08<code>Collection</code>\uff09\uff0c\u4f46\u6211\u4eec\u8981\u786e\u4fdd\u53ea\u5c06 <code>Collection&lt;Node&gt;</code> \u5b58\u5165\u6570\u7ec4\uff0c\u4ee5\u4fdd\u6301\u903b\u8f91\u4e0a\u7684\u7c7b\u578b\u4e00\u81f4\u6027\u3002</li> </ul> </li> <li>\u4e3a\u4e86\u4ee3\u7801\u4fbf\u6377\u6027\uff0c\u6211\u4eec\u8981\u4f7f\u7528createBucket\u8fd9\u4e2a\u65b9\u6cd5\uff1a Java<pre><code>protected Collection&lt;Node&gt; createBucket() {\n    return new LinkedList&lt;&gt;();\n}\n</code></pre> \u8fd9\u4e2a\u65b9\u6cd5\u5141\u8bb8<code>MyHashMap*Buckets.java</code> \u8986\u76d6 <code>createBucket</code></li> </ul> </li> </ul>"},{"location":"cs61b/cs61b/#implementation-requirements","title":"implementation Requirements","text":"<ul> <li>\u4f7f\u75283\u79cdconstructors Java<pre><code>public MyHashMap();\npublic MyHashMap(int initialSize);\npublic MyHashMap(int initialSize, double loadFactor);\n</code></pre></li> <li>\u8d1f\u8f7d\u56e0\u5b50\uff08load factor\uff09= N / M\uff0cN\u662f\u5143\u7d20\u7684\u6570\u91cf\uff0cM\u662f\u5b58\u50a8\u6876\u6570</li> <li>\u5f53\u8d1f\u8f7d\u56e0\u5b50\u8d85\u8fc7loadFactor\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u589e\u52a0size\uff08\u4f7f\u7528\u4e58\u6cd5\u8c03\u6574\u5927\u5c0f\uff0c\u4e0d\u9700\u8981\u8c03\u5c0f\uff09</li> <li>\u9ed8\u8ba4\u503cinitialSize = 16\uff0c loadFactor = 0.75</li> <li>\u6bcf\u4e2abucket\u4e0d\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5bf9\u8c61\uff0c\u800c\u662f\u53ef\u4ee5\u5b58\u50a8\u591a\u4e2a\u952e\u503c\u5bf9\u7684\u6570\u636e\u7ed3\u6784</li> </ul>"},{"location":"cs61b/cs61b/#19-shortest-paths","title":"19 Shortest Paths","text":""},{"location":"cs61b/cs61b/#191-recap","title":"19.1 Recap","text":"<ul> <li>DFS\u4e0d\u9002\u7528\u7ec6\u957f\u7684\u56fe\uff0c\u56e0\u4e3a\u6bcf\u6b21\u9012\u5f52\u8c03\u7528\u4f1a\u5360\u7528\u5f88\u5927\u7684\u7a7a\u95f4</li> <li>BFS\u4e0d\u9002\u7528bushy\u7684\u56fe\uff0c\u56e0\u4e3a\u961f\u5217\u4f1a\u88ab\u5927\u91cf\u4f7f\u7528</li> <li>\u4f46\u662f\u8fd9\u4e9b\u53ea\u9002\u7528\u4e8e\u201c\u8fb9\u201d\u6ca1\u6709\u6743\u91cd\u7684\u56fe</li> </ul>"},{"location":"cs61b/cs61b/#192-dijkstras-algorithm","title":"19.2 Dijkstra's Algorithm","text":"<ul> <li>\u8fea\u6770\u65af\u7279\u62c9\u7b97\u6cd5</li> <li>\u901a\u8fc7\u4f18\u5148\u7ea7\u961f\u5217\uff0c\u5f53\u961f\u5217\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5f39\u51fa\u4e00\u4e2a\u9876\u70b9\u5e76relax\u5230\u4ece\u8fd9\u4e2a\u70b9\u51fa\u53d1\u7684\u6240\u6709\u8fb9</li> </ul>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/","title":"Gitlet\u4e4b\u6211\u89c1","text":""},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#what-is-gitlet","title":"what is Gitlet","text":"<p>A version-control system is essentially a backup system for related collections of files. Gitlet is a simple version-control system that mimics some core functionalities of Git.</p>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#the-commands","title":"the commands","text":""},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#init","title":"init","text":"<ol> <li>\u81ea\u52a8\u751f\u4ea7\u4e00\u4e2acommit\u6587\u4ef6 \u6ca1\u6709\u522b\u7684\u6587\u4ef6\u5e76\u4e14\u6709\u63d0\u4ea4\u4fe1\u606f</li> <li>\u6709\u4e2a\u5355\u4e00\u7684\u5206\u652f master \uff0cpoints to the initial commit</li> <li>timestamp?     \u8981\u5224\u65ad\u662f\u4e0d\u662f\u5df2\u7ecfinit\u8fc7\u4e86</li> </ol>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#add","title":"add","text":"<ol> <li> <p>\u628a\u6587\u4ef6\u6dfb\u52a0\u5230\u6682\u5b58\u533a\uff1a    - \u5f53\u4f60\u8c03\u7528 <code>add</code> \u547d\u4ee4\u65f6\uff0c\u5b83\u4f1a\u628a\u6587\u4ef6\u5f53\u524d\u7684\u5185\u5bb9\u590d\u5236\u5230\u6682\u5b58\u533a\uff08\u901a\u5e38\u5728 <code>.gitlet</code> \u76ee\u5f55\u4e2d\u5b58\u653e\uff09\u3002    - \u6682\u5b58\u533a\u5c31\u662f\u4e00\u4e2a\u4e34\u65f6\u5b58\u653e\u4f60\u60f3\u63d0\u4ea4\u7684\u6587\u4ef6\u4fee\u6539\u7684\u5730\u65b9\u3002</p> </li> <li> <p>\u91cd\u590d\u6dfb\u52a0\u7684\u5904\u7406\uff1a    - \u5982\u679c\u4e00\u4e2a\u6587\u4ef6\u5df2\u7ecf\u88ab\u6dfb\u52a0\uff08\u6682\u5b58\uff09\u8fc7\uff0c\u518d\u6b21\u8c03\u7528 <code>add</code> \u4f1a\u7528\u65b0\u7248\u672c\u7684\u6587\u4ef6\u5185\u5bb9\u8986\u76d6\u6682\u5b58\u533a\u4e2d\u5df2\u6709\u7684\u7248\u672c\u3002</p> </li> <li> <p>\u6587\u4ef6\u6ca1\u6709\u53d8\u5316\u65f6\u4e0d\u9700\u8981\u6dfb\u52a0\uff1a    - \u5982\u679c\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u548c\u4e0a\u4e00\u6b21\u63d0\u4ea4\u7684\u7248\u672c\u5b8c\u5168\u4e00\u6837\uff0c\u5c31\u4e0d\u9700\u8981\u518d\u6b21\u6682\u5b58\u8fd9\u4e2a\u6587\u4ef6\u3002\u56e0\u6b64\u4f60\u9700\u8981\u6bd4\u8f83\uff1a</p> <ul> <li>\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\uff08\u672a\u63d0\u4ea4\u7684\u7248\u672c\uff09\u548c</li> <li>\u5f53\u524d\u63d0\u4ea4\u4e2d\u7684\u6587\u4ef6\uff08\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u7684\u7248\u672c\uff09</li> </ul> </li> </ol> <ul> <li>\u5982\u679c\u4e24\u8005\u76f8\u540c\uff0c\u76f4\u63a5\u8df3\u8fc7\u8fd9\u4e2a\u6587\u4ef6\uff0c\u4e0d\u9700\u8981\u628a\u5b83\u52a0\u5165\u6682\u5b58\u533a\u3002</li> </ul> <ol> <li> <p>\u5904\u7406\u5df2\u7ecf\u6682\u5b58\u7684\u6587\u4ef6\uff1a    - \u5982\u679c\u6587\u4ef6\u5df2\u7ecf\u88ab\u6682\u5b58\u4e86\uff0c\u4f46\u540e\u6765\u88ab\u4fee\u6539\u56de\u4e86\u548c\u63d0\u4ea4\u4e2d\u4e00\u6837\u7684\u72b6\u6001\uff0c\u4f60\u9700\u8981\u628a\u5b83\u4ece\u6682\u5b58\u533a\u79fb\u9664\uff0c\u56e0\u4e3a\u4e0d\u518d\u9700\u8981\u63d0\u4ea4\u8fd9\u4e2a\u6587\u4ef6\u3002</p> </li> <li> <p>\u53d6\u6d88\u5220\u9664\u7684\u6682\u5b58\uff1a    - \u5982\u679c\u8fd9\u4e2a\u6587\u4ef6\u4e4b\u524d\u88ab\u6807\u8bb0\u4e3a\u201c\u5220\u9664\u201d\uff08\u7528 <code>gitlet rm</code> \u6682\u5b58\u5220\u9664\uff09\uff0c\u4f46\u73b0\u5728\u4f60\u7528 <code>add</code> \u91cd\u65b0\u6dfb\u52a0\u4e86\u6587\u4ef6\uff0c\u90a3\u4e48\u5b83\u5c06\u4e0d\u518d\u88ab\u6807\u8bb0\u4e3a\u5220\u9664\uff0c\u4f60\u9700\u8981\u53d6\u6d88\u8fd9\u4e2a\u5220\u9664\u7684\u6682\u5b58\u3002</p> </li> </ol>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#commit","title":"commit","text":"<ul> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6b21\u63d0\u4ea4\u7684\u6587\u4ef6\u5feb\u7167\u8ddf\u4e0a\u4e00\u6b21\u63d0\u4ea4\u7684\u5feb\u7167\u662f\u4e00\u6837\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6587\u4ef6\u7248\u672c\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\u3002</li> <li>\u53ea\u6709\u90a3\u4e9b\u5df2\u7ecf\u88ab\u6682\u5b58\uff08staged\u7684\u6587\u4ef6\u4f1a\u5728\u65b0\u7684\u63d0\u4ea4\u4e2d\u66f4\u65b0\u4e3a\u6682\u5b58\u7684\u7248\u672c\u3002</li> <li>\u65b0\u6587\u4ef6\uff08\u8fd8\u6ca1\u6709\u88ab\u8ffd\u8e2a\u7684\u6587\u4ef6\uff09\u5982\u679c\u6682\u5b58\u4e86\uff0c\u65b0\u7684\u63d0\u4ea4\u4f1a\u5f00\u59cb\u8ffd\u8e2a\u5b83\u4eec\u3002</li> <li>\u5982\u679c\u6709\u6587\u4ef6\u88abrm\u547d\u4ee4\u6807\u8bb0\u4e3a\u5220\u9664\uff0c\u5b83\u4eec\u5c31\u4e0d\u4f1a\u518d\u88ab\u65b0\u7684\u63d0\u4ea4\u8ffd\u8e2a\u3002</li> </ul> <p>\u5f53\u4f60\u628a\u6587\u4ef6\u6682\u5b58\uff08staging\uff09\u597d\u540e\uff0c\u63d0\u4ea4\u65f6\u53ea\u4f1a\u4fdd\u5b58\u8fd9\u4e9b\u6682\u5b58\u7684\u5185\u5bb9\uff0c\u4efb\u4f55\u5728\u6682\u5b58\u4e4b\u540e\u5bf9\u6587\u4ef6\u7684\u66f4\u6539\u90fd\u4e0d\u4f1a\u88ab\u63d0\u4ea4\u547d\u4ee4\u5305\u542b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u63d0\u4ea4\uff08commit\uff09\u64cd\u4f5c\u53ea\u8bb0\u5f55\u6682\u5b58\u533a\u4e2d\u7684\u6587\u4ef6\u72b6\u6001\uff0c\u4e0d\u4f1a\u7ba1\u4f60\u5728\u6682\u5b58\u540e\u505a\u4e86\u4ec0\u4e48\u4fee\u6539\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u7528Unix\u7cfb\u7edf\u7684<code>rm</code>\u547d\u4ee4\u5220\u9664\u4e86\u4e00\u4e2a\u6587\u4ef6\uff08\u800c\u4e0d\u662f\u4f7f\u7528Gitlet\u7684\u5220\u9664\u547d\u4ee4\uff09\uff0cGitlet\u4e0d\u4f1a\u610f\u8bc6\u5230\u8fd9\u4e2a\u5220\u9664\u64cd\u4f5c\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u53d8\u5316\u6ca1\u6709\u88ab\u6682\u5b58\uff08staged\uff09\u3002\u56e0\u6b64\uff0c\u4e0b\u4e00\u6b21\u63d0\u4ea4\u65f6\uff0c\u8fd9\u4e2a\u88ab\u5220\u9664\u7684\u6587\u4ef6\u7684\u65e7\u7248\u672c\u4ecd\u7136\u4f1a\u51fa\u73b0\u5728\u63d0\u4ea4\u8bb0\u5f55\u4e2d\uff0c\u6587\u4ef6\u4e0d\u4f1a\u88ab\u771f\u6b63\u5220\u9664\u3002</p> <p>\u7b80\u5316\u6765\u8bf4\u5c31\u662f\uff1a</p> <ul> <li>\u63d0\u4ea4\u65f6\u53ea\u770b\u6682\u5b58\u533a\u7684\u5185\u5bb9\u3002</li> <li>\u5728\u6682\u5b58\u4e4b\u540e\u5bf9\u6587\u4ef6\u505a\u7684\u4efb\u4f55\u4fee\u6539\uff0c\u4e0d\u4f1a\u5f71\u54cd\u672c\u6b21\u63d0\u4ea4\u3002</li> <li>\u5982\u679c\u4f60\u6ca1\u6709\u7528Gitlet\u7684\u547d\u4ee4\u5220\u9664\u6587\u4ef6\uff0c\u800c\u662f\u7528\u7cfb\u7edf\u547d\u4ee4\u76f4\u63a5\u5220\u9664\uff0cGitlet\u4e0d\u4f1a\u77e5\u9053\uff0c\u63d0\u4ea4\u65f6\u8fd8\u662f\u4f1a\u4fdd\u5b58\u65e7\u7684\u6587\u4ef6\u7248\u672c\u3002</li> </ul> <p>each commit should contain the date and time it was made</p>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#_1","title":"\u6838\u5fc3\u529f\u80fd","text":"<ul> <li>\u4fdd\u5b58\u6587\u4ef6\u7684\u72b6\u6001</li> <li>\u8bb0\u5f55\u63d0\u4ea4\u7684\u4fe1\u606f</li> <li>\u66f4\u65b0\u7248\u672c\u5386\u53f2</li> <li>\u5904\u7406\u6682\u5b58\u533a</li> </ul>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#rm","title":"rm","text":""},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#-add","title":"- \u8ddfadd\u53cd\u4e00\u4e0b\u5c31\u597d\uff0c\u96be\u5ea6\u4e0d\u5927","text":""},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#log","title":"log","text":"<ul> <li>\u8981\u60f3\u6e05\u695aCommit\u7684\u5b58\u50a8\u5f62\u5f0f\uff0c\u4ee5\u4fbf\u901a\u8fc7getparent()\u8fd4\u56de\u7684String\u7c7b\u578b\u627e\u5230\u4e0a\u4e00\u4e2aCommit\uff0c\u96be\u5ea6\u4e0d\u5927</li> <li>\u6211\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff1acommitId\u662f\u7531commit\u7c7b\u578b\u7684\u65f6\u95f4\u6233sha1\u540e\u7684String\uff0c\u4ee5\u6b64\u4e3a\u6587\u4ef6\u540d\uff0c\u6587\u4ef6\u5185\u5bb9\u662f\u7528writeObject\u628acommit\u7c7b\u578b\u52a0\u5bc6\u540e\u5199\u5165\u3002\u6240\u4ee5\u53ef\u4ee5\u8c03\u7528readObject\uff08\u4ee5commitId\u4e3a\u540d\u7684\u6587\u4ef6\uff0cCommit.Class)\u8fd4\u56decommit\u7c7b\u578b</li> </ul>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#global-log","title":"global-log","text":"<ul> <li>\u548clog\u903b\u8f91\u7c7b\u4f3c</li> <li>\u4e3b\u8981\u662f\u5229\u7528plainFilenamesIn()\u8fd4\u56dedir\u4e0b\u7684\u6587\u4ef6\uff0c\u4ee5List&lt;String\u7684\u5f62\u5f0f</li> </ul>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#find","title":"find","text":""},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#-messagecommit","title":"- \u7ed9\u5b9amessage\u53bb\u627eCommit\uff0c\u4e0d\u96be","text":""},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#status","title":"Status","text":"<ul> <li>\u9700\u8981\u7406\u4e00\u4e0b 1. Branches part \u5f53\u524d\u7684branch\u524d\u8981\u52a0* 2. \u6240\u6709\u7684\u8f93\u51fa\u90fd\u9700\u8981\u6309\u7167lexicographic order</li> <li>\u670d\u4e86\uff0c\u5199\u5230\u8fd9\u91cc\u53d1\u73b0\u81ea\u5df1\u5bf9head\u548cmaster\u7684\u7406\u89e3\u6709\u8bef\u3002</li> <li>\u5e94\u8be5\u662f\uff1ahead\u6307\u5411\u4e00\u4e2a\u5206\u652f\uff0c\u6bd4\u5982head\u6307\u5411master\uff0c\u7136\u540emaster\u6307\u5411\u5f53\u524d\u5206\u652f\u7684\u6700\u65b0\u63d0\u4ea4\u3002\u8fd9\u6837\u5b50\u5728\u51fa\u73b0\u591a\u5206\u652f\u7684\u65f6\u5019\uff0c\u4e00\u4e2ahead\u4ee5\u53ca\u591a\u4e2a\u5206\u652f\u540d\u5c31\u53ef\u4ee5\u5b9e\u73b0\u591a\u7ebf\u7a0b\u63a8\u8fdb</li> </ul>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#checkout","title":"checkout","text":"<ul> <li>3\u79cd\u5e94\u7528\u65b9\u5f0f<ol> <li>checkout -- [filename]     \u628ahead commit\u4e2d\u7684filename\u6587\u4ef6\u5199\u5165CWD</li> <li>checkout [commit id] -- [filename]     \u628a\u6307\u5b9acommit\u4e2d\u7684filename\u6587\u4ef6\u5199\u5165CWD<ul> <li>\u8fd9\u6837\u770b\u6765\uff0c\u6211\u5b8c\u5168\u53ef\u4ee5\u5148\u5199\u7b2c2\u949f\u60c5\u51b5\uff0c\u7b2c\u4e00\u79cd\u65e0\u975e\u5c31\u662f\u4f20\u5165\u4e00\u4e2aheadcommitID\u53c2\u6570\u5373\u53ef</li> </ul> </li> <li>checkout [branch name]<ol> <li>\u628a\u6307\u5b9a\u5206\u652f\u7684commit\u4e2d\u7684\u6587\u4ef6\u5168\u90e8\u5199\u5165\u5230CWD</li> <li>\u628aHEAD\u66f4\u65b0\u4e3a\u6307\u5b9a\u7684branch</li> <li>\u88ab\u5f53\u524dbranch\u8ddf\u8e2a\u7684\u6587\u4ef6\u5982\u679c\u4e0d\u5728\u6307\u5b9a\u7684branch\u4e2d\u5219\u5220\u9664</li> <li>staging area\u8981\u88ab\u6e05\u7a7a</li> </ol> </li> </ol> </li> <li>failure cases:<ol> <li>file\u4e0d\u5b58\u5728</li> <li>no commit with the given id</li> <li>no branch with that name; \u6307\u5b9a\u7684branch\u662fcurrent branch</li> </ol> </li> </ul> <p>problem \u5199\u5230\u8fd9\u91cc \u53c8\u53d1\u73b0\u6211\u4e00\u5904\u903b\u8f91\u9519\u8bef\uff0c\u6211\u4e00\u5f00\u59cb\u7684\u5206\u914d\u662fcommit\u7c7b\u578b\u7684\u5c5e\u6027blobs\u662fHashMap\u7c7b\u578b\u7684\uff0c\u4f1a\u6709\u4e00\u4e2akey-&gt;value\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u800c\u6211\u51fa\u4e8e\u5e8f\u5217\u548c\u53cd\u5e8f\u5217\u4e4b\u95f4\u7684\u76f8\u4e92\u8f6c\u6362\uff0c\u8ba4\u4e3a\u6211\u53ef\u4ee5\u628akey\u8bbe\u7f6e\u6210\u6587\u4ef6\u540d\uff0cvalue\u8bbe\u7f6e\u6210\u5e8f\u5217\u5316\u540e\u6587\u4ef6\u5185\u5bb9\uff0c\u6b64\u65f6\u6211\u53d1\u73b0blobs\u6587\u4ef6\u5939\u65e0\u7528\u3002\u9519\u8bef\u4e4b\u5904\u5728\u4e8e\uff0c\u6211\u8bd5\u56fe\u901a\u8fc7readObject\u53bb\u6062\u590d\u7528sha1\u5e8f\u5217\u5316\u7684\u539f\u59cb\u6587\u4ef6\u5185\u5bb9\u3002</p>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#branch","title":"branch","text":"<ul> <li>\u5728BRANCHES_DIR\u4e0b\u521b\u5efa\u4e00\u4e2a\u65b0\u7684branch\uff0c\u6587\u4ef6\u5185\u5bb9\u662f\u5f53\u524d\u7684commit</li> <li>\u4e0d\u96be</li> </ul>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#rm-branch","title":"rm-branch","text":"<ul> <li>\u53ea\u8981\u5220\u9664branches\u6587\u4ef6\u4e0b\u7684\u76f8\u5e94\u6587\u4ef6\u5373\u53ef</li> <li>\u6ce8\u610f2\u4e2a\u62a5\u9519\u60c5\u51b5</li> </ul>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#reset","title":"reset","text":"<ul> <li>\u628a\u7ed9\u5b9acommit\u8ffd\u8e2a\u7684\u6587\u4ef6\u6dfb\u52a0\u5230CWD</li> <li>\u5f53\u524dcommit\u8ffd\u8e2a\u7684\u6587\u4ef6\u5982\u679c\u4e0d\u5728\u7ed9\u5b9acommit\u91cc\uff0c\u5219\u5220\u9664</li> <li>\u901a\u8fc7HEAD\u627e\u5230\u5f53\u524dbranch\uff0c\u7136\u540e\u66f4\u65b0branch\u6307\u5411\u4e3a\u7ed9\u5b9a\u7684commit</li> </ul>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#merge","title":"merge","text":"<p>(More to come here. It's one of the more complex features, so it\u2019s still a work in progress.)</p> <p>\u4e8e2024.11.11\u7ee7\u7eed\u542f\u52a8\uff0c\u88ab\u6570\u5b66\u7ade\u8d5b\u803d\u6401\u4e862\u5468\uff0c\u8fd0\u6c14\u597d\u7684\u8bdd\u6709\u4e2a\u7701\u4e00\uff1f\u53ef\u60dc\u8fdb\u4e0d\u4e86\u51b3\u8d5b</p> <ul> <li>split point\uff1a\u5f53\u524dbranch\u548cgiven branch heads\u6700\u8fd1\u7684\u5171\u540c\u201c\u7956\u5148\u201d</li> <li>\u6240\u6709\u7684file\u90fd\u9700\u8981figure out</li> <li>\u5982\u4f55\u627e\u5230split point?</li> <li> <p>\u627e\u5230\u4e4b\u540e\u5224\u65ad\uff1a</p> <ol> <li>If the split point\u00a0is the same commit as the given branch, then we do nothing; the merge is complete, and the operation ends with the message\u00a0<code>Given branch is an ancestor of the current branch.</code> <ul> <li>\u5982\u679c\u7ed9\u5b9a\u5206\u652f\u7684commit\u5c31\u662fsplit commit\uff0c\u90a3\u4e48\u4e0d\u9700\u8981merge\uff0c\u8fd4\u56demessage\u7ed3\u675f</li> </ul> </li> <li>If the split point is the current branch, then the effect is to check out the given branch, and the operation ends after printing the message\u00a0<code>Current branch fast-forwarded.</code> <ul> <li>\u5982\u679csplit commit\u662f\u5728\u5f53\u524d\u5206\u652f\u4e0a\uff0c\u610f\u5473\u7740\u5f53\u524d\u5206\u652f\u843d\u540e\u4e8egiven branch\uff08\u4f60\u8981\u5207\u6362\u5230\u7684\u5206\u652f\uff09\uff0c\u5e76\u4e14\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5feb\u8fdb\u7684\u65b9\u5f0f\u5c06\u5176\u66f4\u65b0\u4e3a\u76ee\u6807\u5206\u652f\u7684\u6700\u65b0\u72b6\u6001\u3002\u8fd9\u79cd\u60c5\u51b5\u65e0\u9700\u4ea7\u751f\u65b0\u7684\u5408\u5e76\u63d0\u4ea4\uff0c\u53ea\u9700\u7b80\u5355\u5730\u5c06\u5f53\u524d\u5206\u652f\u6307\u9488\u79fb\u52a8\u5230\u76ee\u6807\u5206\u652f\u7684\u6700\u65b0\u63d0\u4ea4\u4f4d\u7f6e\u3002</li> </ul> </li> <li>\u5426\u5219 \u4e0b\u97627\u79cd\u60c5\u51b5\u6267\u884cmerge </li> </ol> <p>         1. \u4efb\u4f55\u5728given branch\u4e2d\u88ab\u4fee\u6539\uff0c\u5728current branch\u4e2d\u6ca1\u6709\u88ab\u4fee\u6539\u7684\u6587\u4ef6 -&gt;given branch\u3002\u7136\u540e\u8fd9\u4e9b\u6587\u4ef6\u5e94\u8be5\u88ab\u81ea\u52a8staged         2. \u4efb\u4f55\u5728current branch\u4e2d\u88ab\u4fee\u6539\uff0c\u5728given branch\u4e2d\u6ca1\u6709\u88ab\u4fee\u6539\u7684\u6587\u4ef6 -&gt;\u4fdd\u6301\u539f\u6837\uff0c\u65e2current branch         3. \u5982\u679c\u4e00\u4e2a\u6587\u4ef6\u5728current branch\u548cgiven branch\u4e2d\u88ab\u4fee\u6539\u7684\u65b9\u5f0f\u76f8\u540c\uff08\u90fd\u88ab\u5220\u9664\u6216\u6216\u8005\u5177\u6709\u76f8\u540c\u7684\u5185\u5bb9\uff09\uff0c\u90a3\u4e48\u4fdd\u6301\u4e0d\u53d8\u3002\u5982\u679c\u5df2\u7ecf\u88ab\u5220\u9664\u4e14\u5728CWD\u4e2d\u5b58\u5728\u540c\u540d\u6587\u4ef6\uff0c\u4f9d\u65e7\u662f\u4fdd\u6301\u4e0d\u53d8         4. \u4efb\u4f55\u4e0d\u5728split commit\u548cgiven branch\u4e2d\uff0c\u800c\u53ea\u5728current branch\u4e2d\u7684\u6587\u4ef6 -&gt; current branch         5. \u4efb\u4f55\u4e0d\u5728split commit\u548ccurrent branch\u4e2d\uff0c\u800c\u53ea\u5728given branch\u4e2d\u7684\u6587\u4ef6 -&gt; given branch         6. \u4efb\u4f55\u5728spilit commit\u4e2d\u4e14\u4e0d\u5728given branch\u4e2d\uff0c\u5728current branch \u4e2d\u6ca1\u6709\u88ab\u4fee\u6539\u7684\u6587\u4ef6 -&gt; \u5220\u9664         7. \u4efb\u4f55\u5728spilit commit\u4e2d\u4e14\u4e0d\u5728current branch\u4e2d\uff0c\u5728given branch \u4e2d\u6ca1\u6709\u88ab\u4fee\u6539\u7684\u6587\u4ef6 -&gt; \u5220\u9664         8. \u5982\u679c\u4e00\u4e2a\u6587\u4ef6\u5728current branch\u548cgiven branch\u4e2d\u88ab\u4fee\u6539\u7684\u65b9\u5f0f\u4e0d\u540c -&gt; CONFLICT - failure massage\uff1a     1. \u6682\u5b58\u533a\u6709\u4e1c\u897f\u7684\u8bdd\uff0c\u62a5\u9519\u5e76\u9000\u51fa     2. given branch\u4e0d\u5b58\u5728\uff0c\u62a5\u9519\u5e76\u9000\u51fa     3. given branch == current branch\uff0c\u62a5\u9519\u5e76\u9000\u51fa     4. \u5982\u679c\u5728\u6267\u884c\u5408\u5e76\uff08merge\uff09\u64cd\u4f5c\u65f6\uff0c\u7cfb\u7edf\u4f1a\u56e0\u4e3a\u5408\u5e76\u7684\u63d0\u4ea4\uff08commit\uff09\u6ca1\u6709\u5b9e\u9645\u66f4\u6539\u800c\u62a5\u9519\uff0c\u90a3\u4e48\u5c31\u8ba9\u7cfb\u7edf\u6309\u7167\u6b63\u5e38\u7684\u63d0\u4ea4\u9519\u8bef\u4fe1\u606f\u6765\u5904\u7406\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u4e00\u4e9b\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff08\u5982Git\uff09\u4e2d\uff0c\u5f53\u4f60\u5c1d\u8bd5\u5408\u5e76\u4e24\u4e2a\u5206\u652f\u65f6\uff0c\u5982\u679c\u8fd9\u6b21\u5408\u5e76\u4e0d\u4f1a\u5f15\u5165\u4efb\u4f55\u65b0\u7684\u66f4\u6539\uff08\u5373\u6ca1\u6709\u5b9e\u9645\u4ee3\u7801\u5dee\u5f02\uff09\uff0c\u7cfb\u7edf\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u65e0\u610f\u4e49\u7684\u5408\u5e76\uff0c\u5e76\u629b\u51fa\u9519\u8bef\u3002\u6b64\u53e5\u7684\u610f\u601d\u662f\uff0c\u4e0d\u9700\u8981\u4e13\u95e8\u4e3a\u8fd9\u79cd\u60c5\u51b5\u8bbe\u8ba1\u989d\u5916\u7684\u9519\u8bef\u5904\u7406\u903b\u8f91\uff0c\u800c\u662f\u8ba9\u7cfb\u7edf\u9ed8\u8ba4\u7684\u63d0\u4ea4\u9519\u8bef\u4fe1\u606f\u663e\u793a\u5373\u53ef\u3002     5. \u5982\u679c\u4e00\u4e2a\u6ca1\u6709\u88abcurrent commit\u8ffd\u8e2a\u7684\u6587\u4ef6\u5373\u5c06\u88ab\u8986\u5199\u6216\u5220\u9664\uff0c\u62a5\u9519\u5e76\u9000\u51fa\u3002\u4f18\u5148\u68c0\u67e5\u8fd9\u4e00check</p> </li> </ul>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#some-tools-in-utils","title":"Some tools in Utils","text":""},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#1-sha-1-hash","title":"1. SHA-1 HASH \u51fd\u6570","text":"<ul> <li> <p><code>static String sha1(Object... vals)</code>:</p> <ul> <li>\u4f5c\u7528: \u8ba1\u7b97\u4f20\u5165\u7684\u4efb\u610f\u5b57\u8282\u6570\u7ec4\u6216\u5b57\u7b26\u4e32\u7684 SHA-1 \u54c8\u5e0c\u503c\uff0c\u5e76\u8fd4\u56de\u5176 40 \u5b57\u7b26\u957f\u5ea6\u7684\u5341\u516d\u8fdb\u5236\u8868\u793a\u3002</li> <li>\u7528\u9014: \u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u6587\u4ef6\u6216\u6570\u636e\uff0c\u5e38\u7528\u4e8e\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4e2d\u6807\u8bc6\u6587\u4ef6\u3001\u63d0\u4ea4\u7b49\u3002</li> <li>\u539f\u7406: \u5bf9\u6bcf\u4e2a\u8f93\u5165\uff08\u5b57\u7b26\u4e32\u6216\u5b57\u8282\u6570\u7ec4\uff09\u8fdb\u884c\u66f4\u65b0\uff0c\u6700\u7ec8\u901a\u8fc7 <code>MessageDigest</code> \u751f\u6210\u54c8\u5e0c\u503c\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a 16 \u8fdb\u5236\u5b57\u7b26\u4e32\u3002</li> <li> <p><code>static String sha1(List&lt;Object&gt; vals)</code>:</p> </li> <li> <p>\u4f5c\u7528: \u8fd9\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u548c\u4e0a\u4e00\u4e2a\u76f8\u540c\uff0c\u53ea\u662f\u63a5\u6536 <code>List&lt;Object&gt;</code> \u4f5c\u4e3a\u8f93\u5165\uff0c\u5185\u90e8\u8c03\u7528\u7b2c\u4e00\u4e2a <code>sha1</code> \u51fd\u6570\u3002</p> </li> </ul> </li> </ul>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#2","title":"2. \u6587\u4ef6\u5220\u9664\u51fd\u6570","text":"<ul> <li> <p><code>static boolean restrictedDelete(File file)</code>:</p> <ul> <li>\u4f5c\u7528: \u5220\u9664\u6307\u5b9a\u7684\u6587\u4ef6\uff0c\u524d\u63d0\u662f\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u4e2d\u5305\u542b <code>.gitlet</code> \u76ee\u5f55\uff0c\u5e76\u4e14\u76ee\u6807\u6587\u4ef6\u662f\u666e\u901a\u6587\u4ef6\u800c\u4e0d\u662f\u76ee\u5f55\u3002</li> <li>\u7528\u9014: \u9632\u6b62\u5728\u975e\u7248\u672c\u63a7\u5236\u76ee\u5f55\u4e2d\u5220\u9664\u6587\u4ef6\uff0c\u786e\u4fdd\u7528\u6237\u53ea\u80fd\u5728 <code>.gitlet</code> \u76ee\u5f55\u4e0b\u8fdb\u884c\u64cd\u4f5c\uff0c\u589e\u52a0\u5b89\u5168\u6027\u3002</li> <li> <p><code>static boolean restrictedDelete(String file)</code>:</p> </li> <li> <p>\u4f5c\u7528: \u548c\u4e0a\u4e00\u4e2a\u51fd\u6570\u4f5c\u7528\u76f8\u540c\uff0c\u53ea\u662f\u63a5\u53d7 <code>String</code> \u7c7b\u578b\u7684\u6587\u4ef6\u8def\u5f84\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u901a\u8fc7\u521b\u5efa <code>File</code> \u5bf9\u8c61\u8c03\u7528\u4e0a\u4e00\u4e2a\u51fd\u6570\u3002</p> </li> </ul> </li> </ul>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#3","title":"3. \u6587\u4ef6\u5185\u5bb9\u8bfb\u53d6\u4e0e\u5199\u5165","text":"<ul> <li> <p><code>static byte[] readContents(File file)</code>:</p> <ul> <li>\u4f5c\u7528: \u8bfb\u53d6\u4e00\u4e2a\u666e\u901a\u6587\u4ef6\u7684\u6240\u6709\u5185\u5bb9\uff0c\u5e76\u8fd4\u56de\u4e3a\u5b57\u8282\u6570\u7ec4\u3002</li> <li>\u7528\u9014: \u83b7\u53d6\u6587\u4ef6\u7684\u4e8c\u8fdb\u5236\u5185\u5bb9\uff0c\u5e38\u7528\u4e8e\u8bfb\u53d6\u6587\u4ef6\u6570\u636e\uff08\u5982 blobs\uff09\u3002</li> <li>\u5f02\u5e38\u5904\u7406: \u5982\u679c\u6587\u4ef6\u4e0d\u662f\u666e\u901a\u6587\u4ef6\u6216\u8bfb\u53d6\u5931\u8d25\uff0c\u4f1a\u629b\u51fa <code>IllegalArgumentException</code>\u3002</li> </ul> </li> <li> <p><code>static String readContentsAsString(File file)</code>:</p> <ul> <li>\u4f5c\u7528: \u8bfb\u53d6\u6587\u4ef6\u7684\u5185\u5bb9\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a UTF-8 \u7f16\u7801\u7684\u5b57\u7b26\u4e32\u3002</li> <li>\u7528\u9014: \u8bfb\u53d6\u6587\u672c\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u5e38\u7528\u4e8e\u5904\u7406\u6587\u672c\u6587\u4ef6\uff08\u5982 commit \u4fe1\u606f\uff09\u3002</li> </ul> </li> <li> <p><code>static void writeContents(File file, Object... contents)</code>:</p> <ul> <li>\u4f5c\u7528: \u5c06\u4f20\u5165\u7684\u5185\u5bb9\uff08\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216\u5b57\u8282\u6570\u7ec4\uff09\u5199\u5165\u6587\u4ef6\uff0c\u652f\u6301\u521b\u5efa\u6216\u8986\u76d6\u6587\u4ef6\u3002</li> <li>\u7528\u9014: \u5199\u5165\u6587\u4ef6\u5185\u5bb9\uff0c\u786e\u4fdd\u4e0d\u4f1a\u8986\u76d6\u76ee\u5f55\u6587\u4ef6\u3002</li> <li>\u5f02\u5e38\u5904\u7406: \u5982\u679c\u64cd\u4f5c\u5931\u8d25\u6216\u8005\u8bd5\u56fe\u8986\u76d6\u76ee\u5f55\u6587\u4ef6\uff0c\u4f1a\u629b\u51fa <code>IllegalArgumentException</code>\u3002</li> </ul> </li> </ul>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#4","title":"4. \u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316","text":"<ul> <li> <p><code>static &lt;T extends Serializable&gt; T readObject(File file, Class&lt;T&gt; expectedClass)</code>:</p> <ul> <li>\u4f5c\u7528: \u53cd\u5e8f\u5217\u5316\u6587\u4ef6\u5185\u5bb9\u4e3a Java \u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u5f3a\u5236\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u7c7b\u578b\u3002</li> <li>\u7528\u9014: \u4ece\u6587\u4ef6\u4e2d\u6062\u590d\u4e4b\u524d\u4fdd\u5b58\u7684 Java \u5bf9\u8c61\uff08\u5982\u4fdd\u5b58\u7684\u9879\u76ee\u72b6\u6001\u6216\u7248\u672c\u4fe1\u606f\uff09\u3002</li> <li>\u5f02\u5e38\u5904\u7406: \u5982\u679c\u8bfb\u53d6\u6216\u7c7b\u578b\u8f6c\u6362\u5931\u8d25\uff0c\u4f1a\u629b\u51fa <code>IllegalArgumentException</code>\u3002</li> </ul> </li> <li> <p><code>static void writeObject(File file, Serializable obj)</code>:</p> <ul> <li>\u4f5c\u7528: \u5c06\u4e00\u4e2a\u53ef\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u5199\u5165\u6587\u4ef6\u3002</li> <li>\u7528\u9014: \u4fdd\u5b58\u5bf9\u8c61\u72b6\u6001\u5230\u6587\u4ef6\uff08\u5982\u63d0\u4ea4\u4fe1\u606f\u3001\u6587\u4ef6\u5feb\u7167\u7b49\uff09\u3002</li> <li>\u8c03\u7528\u5185\u90e8\u51fd\u6570: \u4f7f\u7528 <code>writeContents</code> \u51fd\u6570\u5c06\u5e8f\u5217\u5316\u540e\u7684\u5b57\u8282\u6570\u636e\u5199\u5165\u6587\u4ef6\u3002</li> </ul> </li> <li> <p><code>static byte[] serialize(Serializable obj)</code>:</p> <ul> <li>\u4f5c\u7528: \u5c06\u5bf9\u8c61\u5e8f\u5217\u5316\u4e3a\u5b57\u8282\u6570\u7ec4\u3002</li> <li>\u7528\u9014: \u7528\u4e8e\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u53ef\u5b58\u50a8\u6216\u4f20\u8f93\u7684\u5b57\u8282\u683c\u5f0f\uff08\u5982\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff09\u3002</li> </ul> </li> </ul>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#5","title":"5. \u76ee\u5f55\u4e0e\u6587\u4ef6\u64cd\u4f5c","text":"<ul> <li> <p><code>static List&lt;String&gt; plainFilenamesIn(File dir)</code>:</p> <ul> <li>\u4f5c\u7528: \u83b7\u53d6\u6307\u5b9a\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u666e\u901a\u6587\u4ef6\uff08\u975e\u76ee\u5f55\uff09\u7684\u6587\u4ef6\u540d\uff0c\u5e76\u6309\u5b57\u5178\u987a\u5e8f\u6392\u5e8f\u3002</li> <li>\u7528\u9014: \u7528\u4e8e\u83b7\u53d6\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u5217\u8868\uff0c\u6392\u9664\u5b50\u76ee\u5f55\uff0c\u5e38\u7528\u4e8e\u7248\u672c\u63a7\u5236\u64cd\u4f5c\u4e2d\u5217\u51fa\u6587\u4ef6\u3002</li> <li>\u5f02\u5e38\u5904\u7406: \u5982\u679c\u4f20\u5165\u7684\u4e0d\u662f\u76ee\u5f55\uff0c\u8fd4\u56de <code>null</code>\u3002</li> <li> <p><code>static List&lt;String&gt; plainFilenamesIn(String dir)</code>:</p> </li> <li> <p>\u4f5c\u7528: \u548c\u4e0a\u4e00\u4e2a\u51fd\u6570\u4f5c\u7528\u76f8\u540c\uff0c\u53ea\u662f\u63a5\u53d7\u5b57\u7b26\u4e32\u8def\u5f84\uff0c\u5185\u90e8\u901a\u8fc7\u521b\u5efa <code>File</code> \u5bf9\u8c61\u8c03\u7528\u4e0a\u4e00\u4e2a\u51fd\u6570\u3002</p> </li> <li> <p><code>static File join(String first, String... others)</code>:</p> </li> <li> <p>\u4f5c\u7528: \u5c06\u591a\u4e2a\u8def\u5f84\u5b57\u7b26\u4e32\u62fc\u63a5\u6210\u4e00\u4e2a <code>File</code> \u5bf9\u8c61\u3002</p> </li> <li>\u7528\u9014: \u65b9\u4fbf\u6784\u5efa\u6587\u4ef6\u8def\u5f84\uff0c\u7c7b\u4f3c <code>Paths.get()</code> \u65b9\u6cd5\u3002</li> <li> <p><code>static File join(File first, String... others)</code>:</p> </li> <li> <p>\u4f5c\u7528: \u548c\u4e0a\u4e00\u4e2a\u51fd\u6570\u76f8\u540c\uff0c\u53ea\u662f\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f <code>File</code> \u5bf9\u8c61\u3002</p> </li> </ul> </li> </ul>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#6","title":"6. \u6d88\u606f\u4e0e\u9519\u8bef\u5904\u7406","text":"<ul> <li> <p><code>static GitletException error(String msg, Object... args)</code>:</p> <ul> <li>\u4f5c\u7528: \u6839\u636e\u6307\u5b9a\u7684\u6d88\u606f\u548c\u53c2\u6570\u521b\u5efa\u4e00\u4e2a <code>GitletException</code> \u5f02\u5e38\u3002</li> <li>\u7528\u9014: \u7528\u4e8e\u62a5\u544a\u81ea\u5b9a\u4e49\u9519\u8bef\uff0c\u629b\u51fa\u9879\u76ee\u4e2d\u5e38\u89c1\u7684\u5f02\u5e38\u3002</li> <li> <p><code>static void message(String msg, Object... args)</code>:</p> </li> <li> <p>\u4f5c\u7528: \u6253\u5370\u683c\u5f0f\u5316\u7684\u6d88\u606f\uff0c\u5e76\u5728\u672b\u5c3e\u6dfb\u52a0\u6362\u884c\u7b26\u3002</p> </li> <li>\u7528\u9014: \u7528\u4e8e\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u4fe1\u606f\u6216\u63d0\u793a\uff0c\u7c7b\u4f3c\u4e8e <code>System.out.printf()</code>\u3002</li> </ul> </li> </ul>"},{"location":"cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#some-note","title":"some note","text":"<p>\u4e3a\u4e86\u4fbf\u4e8e\u8c03\u8bd5\uff0c\u81ea\u5df1\u5199\u4e86\u4e00\u4e2a\u7b80\u6613\u7684\u952e\u76d8\u8f93\u5165\u7684\u7a0b\u5e8f </p>Python<pre><code>import pyautogui\nimport time\n\ntime.sleep(1)\n\npyautogui.typewrite('javac gitlet/*.java', interval=0.001)\npyautogui.press('enter') \u00a0\ntime.sleep(0.5)\n\npyautogui.typewrite('java gitlet.Main init', interval=0.001)\npyautogui.press('enter') \u00a0\ntime.sleep(0.5)\n\npyautogui.typewrite('java gitlet.Main add \"123.txt\"', interval=0.001)\npyautogui.press('enter') \u00a0\ntime.sleep(0.5)\n\npyautogui.typewrite('java gitlet.Main commit \"123.txt\"', interval=0.001)\npyautogui.press('enter')\ntime.sleep(0.5) \u00a0\n\npyautogui.typewrite('java gitlet.Main log', interval=0.001)\npyautogui.press('enter')\ntime.sleep(0.5) \u00a0\n\npyautogui.typewrite('java gitlet.Main status', interval=0.001)\npyautogui.press('enter') \u00a0\ntime.sleep(0.5)\n</code></pre>"},{"location":"cs_base/","title":"Computer Science Basic","text":""},{"location":"cs_base/#computer-science-basic","title":"Computer Science Basic","text":"<p>Abstract</p> <p>\u672c\u90e8\u5206\u5185\u5bb9\uff08\u9664\u7279\u522b\u58f0\u660e\u5916\uff09\u91c7\u7528 \u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u4fdd\u6301\u4e00\u81f4 4.0 \u56fd\u9645 (CC BY-NC-SA 4.0) \u8bb8\u53ef\u534f\u8bae\u8fdb\u884c\u8bb8\u53ef\u3002</p> <p>{{ BEGIN_TOC }} - \"language\":     - \"SQL\": language/SQL     - \"C\": language/c {{ END_TOC }}</p>"},{"location":"cs_base/language/SQL/","title":"SQL","text":""},{"location":"cs_base/language/SQL/#1","title":"1.\u4ec0\u4e48\u662f\u6570\u636e\u5e93\uff1f","text":"<ul> <li>\u6570\u636e\u5e93\uff08Database\uff09\u662f\u6309\u7167\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u3001\u5b58\u50a8\u548c\u7ba1\u7406\u6570\u636e\u7684\u4ed3\u5e93\u3002</li> <li>\u6bcf\u4e2a\u6570\u636e\u5e93\u90fd\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u4e0d\u540c\u7684 API \u7528\u4e8e\u521b\u5efa\uff0c\u8bbf\u95ee\uff0c\u7ba1\u7406\uff0c\u641c\u7d22\u548c\u590d\u5236\u6240\u4fdd\u5b58\u7684\u6570\u636e\u3002</li> <li>\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u6570\u636e\u5b58\u50a8\u5728\u6587\u4ef6\u4e2d\uff0c\u4f46\u662f\u5728\u6587\u4ef6\u4e2d\u8bfb\u5199\u6570\u636e\u901f\u5ea6\u76f8\u5bf9\u8f83\u6162\u3002</li> </ul>"},{"location":"cs_base/language/SQL/#12rdbms","title":"1.2RDBMS","text":"<p>\u6240\u4ee5\uff0c\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff08RDBMS\uff09\u6765\u5b58\u50a8\u548c\u7ba1\u7406\u5927\u6570\u636e\u91cf\u3002\u6240\u8c13\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u662f\u5efa\u7acb\u5728\u5173\u7cfb\u6a21\u578b\u57fa\u7840\u4e0a\u7684\u6570\u636e\u5e93\uff0c\u501f\u52a9\u4e8e\u96c6\u5408\u4ee3\u6570\u7b49\u6570\u5b66\u6982\u5ff5\u548c\u65b9\u6cd5\u6765\u5904\u7406\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u3002 RDBMS \u5373\u5173\u7cfb\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf(Relational Database Management System)\u7684\u7279\u70b9\uff1a - 1.\u6570\u636e\u4ee5\u8868\u683c\u7684\u5f62\u5f0f\u51fa\u73b0 - 2.\u6bcf\u884c\u4e3a\u5404\u79cd\u8bb0\u5f55\u540d\u79f0 - 3.\u6bcf\u5217\u4e3a\u8bb0\u5f55\u540d\u79f0\u6240\u5bf9\u5e94\u7684\u6570\u636e\u57df - 4.\u8bb8\u591a\u7684\u884c\u548c\u5217\u7ec4\u6210\u4e00\u5f20\u8868\u5355 - 5.\u82e5\u5e72\u7684\u8868\u5355\u7ec4\u6210database</p>"},{"location":"cs_base/language/SQL/#13terms","title":"1.3TermS","text":"<ul> <li>\u6570\u636e\u5e93:\u00a0\u6570\u636e\u5e93\u662f\u4e00\u4e9b\u5173\u8054\u8868\u7684\u96c6\u5408\u3002</li> <li>\u6570\u636e\u8868:\u00a0\u8868\u662f\u6570\u636e\u7684\u77e9\u9635\u3002\u5728\u4e00\u4e2a\u6570\u636e\u5e93\u4e2d\u7684\u8868\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u7b80\u5355\u7684\u7535\u5b50\u8868\u683c\u3002</li> <li>\u5217:\u00a0\u4e00\u5217(\u6570\u636e\u5143\u7d20) \u5305\u542b\u4e86\u76f8\u540c\u7c7b\u578b\u7684\u6570\u636e, \u4f8b\u5982\u90ae\u653f\u7f16\u7801\u7684\u6570\u636e\u3002</li> <li>\u884c\uff1a\u4e00\u884c\uff08\u5143\u7ec4\uff0c\u6216\u8bb0\u5f55\uff09\u662f\u4e00\u7ec4\u76f8\u5173\u7684\u6570\u636e\uff0c\u4f8b\u5982\u4e00\u6761\u7528\u6237\u8ba2\u9605\u7684\u6570\u636e\u3002</li> <li>\u5197\u4f59\uff1a\u5b58\u50a8\u4e24\u500d\u6570\u636e\uff0c\u5197\u4f59\u964d\u4f4e\u4e86\u6027\u80fd\uff0c\u4f46\u63d0\u9ad8\u4e86\u6570\u636e\u7684\u5b89\u5168\u6027\u3002</li> <li>\u4e3b\u952e\uff1a\u4e3b\u952e\u662f\u552f\u4e00\u7684\u3002\u4e00\u4e2a\u6570\u636e\u8868\u4e2d\u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u4e3b\u952e\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e3b\u952e\u6765\u67e5\u8be2\u6570\u636e\u3002</li> <li>\u5916\u952e\uff1a\u5916\u952e\u7528\u4e8e\u5173\u8054\u4e24\u4e2a\u8868\u3002</li> <li>\u590d\u5408\u952e\uff1a\u590d\u5408\u952e\uff08\u7ec4\u5408\u952e\uff09\u5c06\u591a\u4e2a\u5217\u4f5c\u4e3a\u4e00\u4e2a\u7d22\u5f15\u952e\uff0c\u4e00\u822c\u7528\u4e8e\u590d\u5408\u7d22\u5f15\u3002</li> <li>\u7d22\u5f15\uff1a\u4f7f\u7528\u7d22\u5f15\u53ef\u5feb\u901f\u8bbf\u95ee\u6570\u636e\u5e93\u8868\u4e2d\u7684\u7279\u5b9a\u4fe1\u606f\u3002\u7d22\u5f15\u662f\u5bf9\u6570\u636e\u5e93\u8868\u4e2d\u4e00\u5217\u6216\u591a\u5217\u7684\u503c\u8fdb\u884c\u6392\u5e8f\u7684\u4e00\u79cd\u7ed3\u6784\u3002\u7c7b\u4f3c\u4e8e\u4e66\u7c4d\u7684\u76ee\u5f55\u3002</li> <li>\u53c2\u7167\u5b8c\u6574\u6027:\u00a0\u53c2\u7167\u7684\u5b8c\u6574\u6027\u8981\u6c42\u5173\u7cfb\u4e2d\u4e0d\u5141\u8bb8\u5f15\u7528\u4e0d\u5b58\u5728\u7684\u5b9e\u4f53\u3002\u4e0e\u5b9e\u4f53\u5b8c\u6574\u6027\u662f\u5173\u7cfb\u6a21\u578b\u5fc5\u987b\u6ee1\u8db3\u7684\u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6\uff0c\u76ee\u7684\u662f\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002</li> <li>\u8868\u5934(header): \u6bcf\u4e00\u5217\u7684\u540d\u79f0;</li> <li>\u5217(col): \u5177\u6709\u76f8\u540c\u6570\u636e\u7c7b\u578b\u7684\u6570\u636e\u7684\u96c6\u5408;</li> <li>\u884c(row): \u6bcf\u4e00\u884c\u7528\u6765\u63cf\u8ff0\u67d0\u6761\u8bb0\u5f55\u7684\u5177\u4f53\u4fe1\u606f;</li> <li>\u503c(value): \u884c\u7684\u5177\u4f53\u4fe1\u606f, \u6bcf\u4e2a\u503c\u5fc5\u987b\u4e0e\u8be5\u5217\u7684\u6570\u636e\u7c7b\u578b\u76f8\u540c;</li> <li>\u952e(key): \u952e\u7684\u503c\u5728\u5f53\u524d\u5217\u4e2d\u5177\u6709\u552f\u4e00\u6027\u3002</li> </ul> <p>MySQL \u4e3a\u5173\u7cfb\u578b\u6570\u636e\u5e93(Relational Database Management System), \u8fd9\u79cd\u6240\u8c13\u7684\"\u5173\u7cfb\u578b\"\u53ef\u4ee5\u7406\u89e3\u4e3a\"\u8868\u683c\"\u7684\u6982\u5ff5, \u4e00\u4e2a\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7531\u4e00\u4e2a\u6216\u6570\u4e2a\u8868\u683c\u7ec4\u6210\u3002</p>"},{"location":"cs_base/language/SQL/#2syntax","title":"2.Syntax","text":"<ul> <li>\u53ef\u4ee5\u5355\u884c\u6216\u591a\u884c\u4e66\u5199\uff0c\u4ee5\u5206\u53f7\u7ed3\u5c3e</li> <li>\u53ef\u4ee5\u7528\u7a7a\u683c/ \u7f29\u8fdb\u589e\u5f3a\u4ee3\u7801\u53ef\u8bfb\u6027</li> <li>\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u5173\u952e\u5b57\u5efa\u8bae\u5927\u5199</li> <li>\u6ce8\u91ca\uff1a<ul> <li>\u5355\u884c\u6ce8\u91ca\uff1a-- \u6216\u8005 #</li> <li>\u591a\u884c\uff1a<code>/*               */</code></li> </ul> </li> <li>\u5206\u7c7b  </li> </ul>"},{"location":"cs_base/language/SQL/#21","title":"2.1\u521b\u5efa\u6570\u636e","text":"SQL<pre><code>CREAT DATABASE egg;\nUSE egg;\nCREAT TABLE \"name\"(\n          \u5217\u540d1 INT AUTO_INCREAMENT\uff0c\n          \u5217\u540d2 VARCHAR() NOT NULL\uff0c\n          \u5217\u540d3 DATE NULL )\n</code></pre> 1. \u8bbe\u7f6e\u5176\u4e2d\u4e00\u4e2a\u5217\u540d\u4e3aPRIMART KEY\u4e0d\u80fd\u4e3a\u7a7a"},{"location":"cs_base/language/SQL/#22","title":"2.2\u63d2\u5165","text":"<p>INSERT INTO \u6570\u636e\u5e93\u540d.\u8868\u683c\u540d\uff08\u5217\u540d1\uff0c \u5217\u540d2\uff09 VALUES\uff08\u6570\u503c1\uff0c \u6570\u503c2\uff09</p>"},{"location":"cs_base/language/SQL/#23","title":"2.3\u6539\u53d8\u8868\u683c","text":"SQL<pre><code>ALTER TABLE egg.eggs_record\nADD stock INT NULL;\n</code></pre>"},{"location":"cs_base/language/SQL/#24","title":"2.4\u66f4\u65b0\u8868\u683c","text":"SQL<pre><code>UPDATE \u8868\u683c\u540d.\u5217\u540d\nSET \u503c\nWHERE \u6761\u4ef6\n</code></pre>"},{"location":"cs_base/language/SQL/#25","title":"2.5\u5220\u9664\u6570\u636e","text":"SQL<pre><code>DELETE FROM \u6570\u636e\u5e93\u540d.\u8868\u683c\u540d\nWHERE \u6761\u4ef6\n</code></pre>"},{"location":"cs_base/language/SQL/#26","title":"2.6\u5220\u9664\u8868\u683c","text":"SQL<pre><code>DROP TABLE \u6570\u636e\u5e93\u540d.\u8868\u683c\u540d\n</code></pre>"},{"location":"cs_base/language/SQL/#27","title":"2.7\u67e5\u627e\u6570\u636e","text":"SQL<pre><code>SELECT ____\nFROM ____\nORDER BY \u5217\u540d ASC/DESC\uff1b\n</code></pre> - 2\u4e2a\u6a2a\u7ebf\u8868\u6ce8\u91ca"},{"location":"cs_base/language/c/","title":"C","text":""},{"location":"cs_base/language/c/#1","title":"1.\u6307\u9488","text":""},{"location":"cs_base/language/c/#11","title":"1.1 \u57fa\u672c\u77e5\u8bc6","text":"<ul> <li>pointer\u662f\u7528\u6765\u5b58\u50a8\u5185\u5b58\u5730\u5740\u7684\u53d8\u91cf</li> <li>\u5185\u5b58\u5730\u5740\u76f4\u63a5\u6307\u5411\u5b58\u5728\u8be5\u5730\u5740\u7684\u5bf9\u8c61\u7684\u503c</li> <li>\u5b9a\u4e49\u6307\u9488\u53d8\u91cf\u65f6\u5fc5\u987b\u5e26<code>*</code>\uff0c\u7ed9\u6307\u9488\u53d8\u91cf\u8d4b\u503c\u65f6\u4e0d\u80fd\u5e26<code>*</code> C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    int a = 15;\n    int *p = &amp;a;\n    printf(\"%d, %d\\n\", a, *p);  //\u4e24\u79cd\u65b9\u5f0f\u90fd\u53ef\u4ee5\u8f93\u51faa\u7684\u503c\n    return 0;\n}\n</code></pre></li> </ul>"},{"location":"cs_base/language/c/#12","title":"1.2\u6570\u7ec4\u6307\u9488","text":"C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    int arr[] = { 99, 15, 100, 888, 252 };\n    int len = sizeof(arr) / sizeof(int);  //\u6c42\u6570\u7ec4\u957f\u5ea6\n    int i;\n    for(i=0; i&lt;len; i++){\n        printf(\"%d  \", *(arr+i) );  //*(arr+i)\u7b49\u4ef7\u4e8earr[i]\n    }\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre>"},{"location":"cs_base/language/c/#13","title":"1.3\u5b57\u7b26\u4e32\u6307\u9488","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main(){\n    char *str = \"http://c.biancheng.net\";\n    int len = strlen(str), i;\n    //\u76f4\u63a5\u8f93\u51fa\u5b57\u7b26\u4e32\n    printf(\"%s\\n\", str);\n    //\u4f7f\u7528*(str+i)\n    for(i=0; i&lt;len; i++){\n        printf(\"%c\", *(str+i));\n    }\n    printf(\"\\n\");\n    //\u4f7f\u7528str[i]\n    for(i=0; i&lt;len; i++){\n        printf(\"%c\", str[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre> - \u533a\u522b\u662f\uff1a\u5b57\u7b26\u6570\u7ec4\u548c\u5b57\u7b26\u4e32\u6307\u9488(\u4e5f\u53eb\u5b57\u7b26\u4e32\u5e38\u91cf\uff09\u5728\u5185\u5b58\u4e2d\u7684\u5b58\u50a8\u533a\u57df\u4e0d\u540c\uff0c\u524d\u8005\u5728\u5168\u5c40\u6570\u636e\u533a\u6216\u6808\u533a\uff0c\u540e\u8005\u5728\u5e38\u91cf\u533a\u3002\u524d\u8005\u6709\u8bfb\u53d6\u548c\u5199\u5165\u7684\u6743\u9650\uff0c\u800c\u540e\u8005\u53ea\u6709\u8bfb\u53d6\u6743\u9650\uff0c\u6ca1\u6709\u5199\u5165\u6743\u9650 C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    char *str = \"Hello World!\";\n    str = \"I love C!\";  //\u6b63\u786e\n    str[3] = 'P';  //\u9519\u8bef\n\n    return 0;\n}\n</code></pre>"},{"location":"cs_base/language/c/#14","title":"1.4\u6307\u9488\u53d8\u91cf\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nvoid swap(int *p1, int *p2){ //\u4f20\u5165\u7684\u662f\u6307\u9488\u53d8\u91cf\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u4fee\u6539\u8fd9\u4e2a\u5185\u5b58\u4e0a\u7684\u503c\n    int temp;  //\u4e34\u65f6\u53d8\u91cf\n    temp = *p1;\n    *p1 = *p2;\n    *p2 = temp;\n}\n\nint main(){\n    int a = 66, b = 99;\n    swap(&amp;a, &amp;b);\n    printf(\"a = %d, b = %d\\n\", a, b);\n    return 0;\n}\n</code></pre> - \u6570\u7ec4\u662f\u4e00\u7cfb\u5217\u6570\u636e\u7684\u96c6\u5408\uff0c\u65e0\u6cd5\u901a\u8fc7\u53c2\u6570\u5c06\u5b83\u4eec\u4e00\u6b21\u6027\u4f20\u9012\u5230\u51fd\u6570\u5185\u90e8\uff0c\u5982\u679c\u5e0c\u671b\u5728\u51fd\u6570\u5185\u90e8\u64cd\u4f5c\u6570\u7ec4\uff0c\u5fc5\u987b\u4f20\u9012\u6570\u7ec4\u6307\u9488 C<pre><code>#include &lt;stdio.h&gt;\n\n//\u53c2\u6570 intArr \u4ec5\u4ec5\u662f\u4e00\u4e2a\u6570\u7ec4\u6307\u9488\uff0c\u5728\u51fd\u6570\u5185\u90e8\u65e0\u6cd5\u901a\u8fc7\u8fd9\u4e2a\u6307\u9488\u83b7\u5f97\u6570\u7ec4\u957f\u5ea6\uff0c\u5fc5\u987b\u5c06\u6570\u7ec4\u957f\u5ea6\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4f20\u9012\u5230\u51fd\u6570\u5185\u90e8\u3002\nint max(int *intArr, int len){\n    int i, maxValue = intArr[0];  //\u5047\u8bbe\u7b2c0\u4e2a\u5143\u7d20\u662f\u6700\u5927\u503c\n    for(i=1; i&lt;len; i++){\n        if(maxValue &lt; intArr[i]){\n            maxValue = intArr[i];\n        }\n    }\n\n    return maxValue;\n}\n\nint main(){\n    int nums[6], i;\n    int len = sizeof(nums)/sizeof(int);\n    //\u8bfb\u53d6\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\u5e76\u8d4b\u503c\u7ed9\u6570\u7ec4\u5143\u7d20\n    for(i=0; i&lt;len; i++){\n        scanf(\"%d\", nums+i);\n    }\n    printf(\"Max value is %d!\\n\", max(nums, len));\n\n    return 0;\n}\n</code></pre> - C\u8bed\u8a00\u4e3a\u4ec0\u4e48\u4e0d\u5141\u8bb8\u76f4\u63a5\u4f20\u9012\u6570\u7ec4\u7684\u6240\u6709\u5143\u7d20\uff0c\u800c\u5fc5\u987b\u4f20\u9012\u6570\u7ec4\u6307\u9488\u5462\uff1f  \u53c2\u6570\u7684\u4f20\u9012\u672c\u8d28\u4e0a\u662f\u4e00\u6b21\u8d4b\u503c\u7684\u8fc7\u7a0b\uff0c\u8d4b\u503c\u5c31\u662f\u5bf9\u5185\u5b58\u8fdb\u884c\u62f7\u8d1d\u3002\u6240\u8c13\u5185\u5b58\u62f7\u8d1d\uff0c\u662f\u6307\u5c06\u4e00\u5757\u5185\u5b58\u4e0a\u7684\u6570\u636e\u590d\u5236\u5230\u53e6\u4e00\u5757\u5185\u5b58\u4e0a\u3002\u6570\u636e\u7684\u6570\u91cf\u6ca1\u6709\u9650\u5236\uff0c\u53ef\u80fd\u5f88\u5c11\uff0c\u4e5f\u53ef\u80fd\u6210\u5343\u4e0a\u4e07\uff0c\u5bf9\u5b83\u4eec\u8fdb\u884c\u5185\u5b58\u62f7\u8d1d\u6709\u53ef\u80fd\u662f\u4e00\u4e2a\u6f2b\u957f\u7684\u8fc7\u7a0b\uff0c\u4f1a\u4e25\u91cd\u62d6\u6162\u7a0b\u5e8f\u7684\u6548\u7387\uff0c\u4e3a\u4e86\u9632\u6b62\u6280\u827a\u4e0d\u4f73\u7684\u7a0b\u5e8f\u5458\u5199\u51fa\u4f4e\u6548\u7684\u4ee3\u7801\uff0cC\u8bed\u8a00\u6ca1\u6709\u4ece\u8bed\u6cd5\u4e0a\u652f\u6301\u6570\u636e\u96c6\u5408\u7684\u76f4\u63a5\u8d4b\u503c\u3002"},{"location":"cs_base/language/c/#15","title":"1.5\u6307\u9488\u51fd\u6570","text":"<ul> <li>\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u6307\u9488\uff08\u5730\u5740\uff09 C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nchar *strlong(char *str1, char *str2){\n    if(strlen(str1) &gt;= strlen(str2)){\n        return str1;\n    }else{\n        return str2;\n    }\n}\n\nint main(){\n    char str1[30], str2[30], *str;\n    gets(str1);\n    gets(str2);\n    str = strlong(str1, str2);\n    printf(\"Longer string: %s\\n\", str);\n\n    return 0;\n}\n</code></pre></li> <li>\u7528\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u65f6\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u51fd\u6570\u8fd0\u884c\u7ed3\u675f\u540e\u4f1a\u9500\u6bc1\u5728\u5b83\u5185\u90e8\u5b9a\u4e49\u7684\u6240\u6709\u5c40\u90e8\u6570\u636e\uff0c\u5305\u62ec\u5c40\u90e8\u53d8\u91cf\u3001\u5c40\u90e8\u6570\u7ec4\u548c\u5f62\u5f0f\u53c2\u6570\uff0c\u51fd\u6570\u8fd4\u56de\u7684\u6307\u9488\u8bf7\u5c3d\u91cf\u4e0d\u8981\u6307\u5411\u8fd9\u4e9b\u6570\u636e\uff0cC\u8bed\u8a00\u6ca1\u6709\u4efb\u4f55\u673a\u5236\u6765\u4fdd\u8bc1\u8fd9\u4e9b\u6570\u636e\u4f1a\u4e00\u76f4\u6709\u6548\uff0c\u5b83\u4eec\u5728\u540e\u7eed\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u5f15\u53d1\u8fd0\u884c\u65f6\u9519\u8bef\u3002</li> <li>\u8fd9\u91cc\u6240\u8c13\u7684\u9500\u6bc1\u5e76\u4e0d\u662f\u5c06\u5c40\u90e8\u6570\u636e\u6240\u5360\u7528\u7684\u5185\u5b58\u5168\u90e8\u62b9\u6389\uff0c\u800c\u662f\u7a0b\u5e8f\u653e\u5f03\u5bf9\u5b83\u7684\u4f7f\u7528\u6743\u9650\uff0c\u5f03\u4e4b\u4e0d\u7406\uff0c\u540e\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u968f\u610f\u4f7f\u7528\u8fd9\u5757\u5185\u5b58\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684\u4e24\u4e2a\u4f8b\u5b50\uff0cfunc() \u8fd0\u884c\u7ed3\u675f\u540e n \u7684\u5185\u5b58\u4f9d\u7136\u4fdd\u6301\u539f\u6837\uff0c\u503c\u8fd8\u662f 100\uff0c\u5982\u679c\u4f7f\u7528\u53ca\u65f6\u4e5f\u80fd\u591f\u5f97\u5230\u6b63\u786e\u7684\u6570\u636e\uff0c\u5982\u679c\u6709\u5176\u5b83\u51fd\u6570\u88ab\u8c03\u7528\u5c31\u4f1a\u8986\u76d6\u8fd9\u5757\u5185\u5b58\uff0c\u5f97\u5230\u7684\u6570\u636e\u5c31\u5931\u53bb\u4e86\u610f\u4e49\u3002</li> </ul>"},{"location":"cs_base/language/c/#16","title":"1.6\u4e8c\u7ea7\u6307\u9488","text":"<ul> <li>\u6307\u5411\u6307\u9488\u7684\u6307\u9488</li> <li>\u6307\u9488\u53d8\u91cf\u4e5f\u662f\u4e00\u79cd\u53d8\u91cf\uff0c\u4e5f\u4f1a\u5360\u7528\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>&amp;</code>\u83b7\u53d6\u5b83\u7684\u5730\u5740\u3002C\u8bed\u8a00\u4e0d\u9650\u5236\u6307\u9488\u7684\u7ea7\u6570\uff0c\u6bcf\u589e\u52a0\u4e00\u7ea7\u6307\u9488\uff0c\u5728\u5b9a\u4e49\u6307\u9488\u53d8\u91cf\u65f6\u5c31\u5f97\u589e\u52a0\u4e00\u4e2a\u661f\u53f7<code>*</code>\u3002p1 \u662f\u4e00\u7ea7\u6307\u9488\uff0c\u6307\u5411\u666e\u901a\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5b9a\u4e49\u65f6\u6709\u4e00\u4e2a<code>*</code>\uff1bp2 \u662f\u4e8c\u7ea7\u6307\u9488\uff0c\u6307\u5411\u4e00\u7ea7\u6307\u9488 p1\uff0c\u5b9a\u4e49\u65f6\u6709\u4e24\u4e2a<code>*</code>\u3002 C<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    int a =100;\n    int *p1 = &amp;a;\n    int **p2 = &amp;p1;\n    int ***p3 = &amp;p2;\n\n    printf(\"%d, %d, %d, %d\\n\", a, *p1, **p2, ***p3);\n    printf(\"&amp;p2 = %#X, p3 = %#X\\n\", &amp;p2, p3);\n    printf(\"&amp;p1 = %#X, p2 = %#X, *p3 = %#X\\n\", &amp;p1, p2, *p3);\n    printf(\" &amp;a = %#X, p1 = %#X, *p2 = %#X, **p3 = %#X\\n\", &amp;a, p1, *p2, **p3);\n    return 0;\n}\n</code></pre></li> </ul>"},{"location":"cs_base/language/c/#17","title":"1.7\u6307\u9488\u6570\u7ec4","text":"<ul> <li>\u5982\u679c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u4fdd\u5b58\u7684\u90fd\u662f\u6307\u9488\uff0c\u5373\u79f0\u4e4b\u4e3a\u6307\u9488\u6570\u7ec4\u3002 C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    int a = 16, b = 932, c = 100;\n    //\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\n    int *arr[3] = {&amp;a, &amp;b, &amp;c};//\u4e5f\u53ef\u4ee5\u4e0d\u6307\u5b9a\u957f\u5ea6\uff0c\u76f4\u63a5\u5199\u4f5c int *arr[]\n    //\u5b9a\u4e49\u4e00\u4e2a\u6307\u5411\u6307\u9488\u6570\u7ec4\u7684\u6307\u9488\n    int **parr = arr;\n    printf(\"%d, %d, %d\\n\", *arr[0], *arr[1], *arr[2]);\n    printf(\"%d, %d, %d\\n\", **(parr+0), **(parr+1), **(parr+2));\n\n    return 0;\n}\n</code></pre></li> </ul>"},{"location":"cs_base/language/c/#18","title":"1.8\u4e8c\u7ef4\u6570\u7ec4\u6307\u9488","text":"<p>\u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3\u6307\u9488\u548c\u4e8c\u7ef4\u6570\u7ec4\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u5148\u6765\u5b9a\u4e49\u4e00\u4e2a\u6307\u5411 a \u7684\u6307\u9488\u53d8\u91cf p\uff1a <code>int (*p)[4] = a;</code> \u62ec\u53f7\u4e2d\u7684<code>*</code>\u8868\u660e p \u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5b83\u6307\u5411\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u7c7b\u578b\u4e3a<code>int [4]</code>\uff0c\u8fd9\u6b63\u662f a \u6240\u5305\u542b\u7684\u6bcf\u4e2a\u4e00\u7ef4\u6570\u7ec4\u7684\u7c7b\u578b\u3002 <code>[ ]</code>\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e<code>*</code>\uff0c<code>( )</code>\u662f\u5fc5\u987b\u8981\u52a0\u7684\uff0c\u5982\u679c\u8d64\u88f8\u88f8\u5730\u5199\u4f5c<code>int *p[4]</code>\uff0c\u90a3\u4e48\u5e94\u8be5\u7406\u89e3\u4e3a<code>int *(p[4])</code>\uff0cp \u5c31\u6210\u4e86\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u4e8c\u7ef4\u6570\u7ec4\u6307\u9488\u3002 - \u6570\u7ec4\u540d a \u5728\u8868\u8fbe\u5f0f\u4e2d\u4e5f\u4f1a\u88ab\u8f6c\u6362\u4e3a\u548c p \u7b49\u4ef7\u7684\u6307\u9488\uff01 </p>C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    int a[3][4] = { {0, 1, 2, 3}, {4, 5, 6, 7}, {8, 9, 10, 11} };\n    int (*p)[4] = a;\n    printf(\"%d\\n\", sizeof(*(p+1)));\n    //\u8fd0\u884c\u7ed3\u679c\uff1a16\n    return 0;\n}\n</code></pre> - \u8bf4\u660e<code>*(p+1)</code>\u8868\u793a\u6574\u4e2a\u7b2c\u4e00\u884c\u7684\u6570\u636e\uff0c4 * 4=16 - <code>*(*(p+1)+1)</code>\u8868\u793a\u7b2c 1 \u884c\u7b2c 1 \u4e2a\u5143\u7d20\u7684\u503c\u3002\u5f88\u660e\u663e\uff0c\u589e\u52a0\u4e00\u4e2a * \u8868\u793a\u53d6\u5730\u5740\u4e0a\u7684\u6570\u636e\u3002 - \u6240\u4ee5\u6709\u4ee5\u4e0b\u7b49\u4ef7\u5173\u7cfb\uff1a Text Only<pre><code>a+i == p+i  \na[i] == p[i] == *(a+i) == *(p+i)  \na[i][j] == p[i][j] == *(a[i]+j) == *(p[i]+j) == *(*(a+i)+j) ==\u00a0*(*(p+i)+j)\n</code></pre> - \u4f7f\u7528\u6307\u9488\u904d\u5386\u4e8c\u7ef4\u6570\u7ec4 C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    int a[3][4]={0,1,2,3,4,5,6,7,8,9,10,11};\n    int(*p)[4];\n    int i,j;\n    p=a;\n    for(i=0; i&lt;3; i++){\n        for(j=0; j&lt;4; j++) printf(\"%2d  \",*(*(p+i)+j));\n        printf(\"\\n\");\n    }\n    return 0;\n}\n</code></pre> - \u6307\u9488\u6570\u7ec4\u548c\u4e8c\u7ef4\u6570\u7ec4\u6307\u9488\u7684\u533a\u522b\uff1a <code>1. int *(p1[5]); //\u6307\u9488\u6570\u7ec4\uff0c\u53ef\u4ee5\u53bb\u6389\u62ec\u53f7\u76f4\u63a5\u5199\u4f5c int *p1[5];</code> <code>2. int (*p2)[5]; //\u4e8c\u7ef4\u6570\u7ec4\u6307\u9488\uff0c\u4e0d\u80fd\u53bb\u6389\u62ec\u53f7</code>"},{"location":"cs_base/language/c/#19","title":"1.9\u51fd\u6570\u6307\u9488","text":"<ul> <li>\u4e00\u4e2a\u51fd\u6570\u603b\u662f\u5360\u7528\u4e00\u6bb5\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\uff0c\u51fd\u6570\u540d\u5728\u8868\u8fbe\u5f0f\u4e2d\u6709\u65f6\u4e5f\u4f1a\u88ab\u8f6c\u6362\u4e3a\u8be5\u51fd\u6570\u6240\u5728\u5185\u5b58\u533a\u57df\u7684\u9996\u5730\u5740\uff0c\u8fd9\u548c\u6570\u7ec4\u540d\u975e\u5e38\u7c7b\u4f3c\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u51fd\u6570\u7684\u8fd9\u4e2a\u9996\u5730\u5740\uff08\u6216\u79f0\u5165\u53e3\u5730\u5740\uff09\u8d4b\u4e88\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\uff0c\u4f7f\u6307\u9488\u53d8\u91cf\u6307\u5411\u51fd\u6570\u6240\u5728\u7684\u5185\u5b58\u533a\u57df\uff0c\u7136\u540e\u901a\u8fc7\u6307\u9488\u53d8\u91cf\u5c31\u53ef\u4ee5\u627e\u5230\u5e76\u8c03\u7528\u8be5\u51fd\u6570\u3002\u8fd9\u79cd\u6307\u9488\u5c31\u662f\u51fd\u6570\u6307\u9488\u3002</li> <li>\u5b9a\u4e49\u5f62\u5f0f\u4e3a<code>returnType (*pointerName)(param list)</code><ul> <li><code>( )</code>\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e<code>*</code>\uff0c\u7b2c\u4e00\u4e2a\u62ec\u53f7\u4e0d\u80fd\u7701\u7565\uff0c\u5982\u679c\u5199\u4f5c<code>returnType *pointerName(param list);</code>\u5c31\u6210\u4e86\u51fd\u6570\u539f\u578b\uff0c\u5b83\u8868\u660e\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b<code>returnType *</code>\u3002</li> <li>\u3010\u5b9e\u4f8b\u3011\u7528\u6307\u9488\u6765\u5b9e\u73b0\u5bf9\u51fd\u6570\u7684\u8c03\u7528 C<pre><code>#include &lt;stdio.h&gt;\n//\u8fd4\u56de\u4e24\u4e2a\u6570\u4e2d\u8f83\u5927\u7684\u4e00\u4e2a\nint max(int a, int b){\n    return a&gt;b ? a : b;\n}\nint main(){\n    int x, y, maxval;\n    //\u5b9a\u4e49\u51fd\u6570\u6307\u9488\n    int (*pmax)(int, int) = max;  //\u4e5f\u53ef\u4ee5\u5199\u4f5cint (*pmax)(int a, int b)\n    printf(\"Input two numbers:\");\n    scanf(\"%d %d\", &amp;x, &amp;y);\n    maxval = (*pmax)(x, y);\n    printf(\"Max value: %d\\n\", maxval);\n\n    return 0;\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs_base/language/c/#110","title":"1.10\u6307\u9488\u603b\u7ed3","text":"<ul> <li>\u6307\u9488\uff08Pointer\uff09\u5c31\u662f\u5185\u5b58\u7684\u5730\u5740\uff0cC\u8bed\u8a00\u5141\u8bb8\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u5b58\u653e\u6307\u9488\uff0c\u8fd9\u79cd\u53d8\u91cf\u79f0\u4e3a\u6307\u9488\u53d8\u91cf\u3002\u6307\u9488\u53d8\u91cf\u53ef\u4ee5\u5b58\u653e\u57fa\u672c\u7c7b\u578b\u6570\u636e\u7684\u5730\u5740\uff0c\u4e5f\u53ef\u4ee5\u5b58\u653e\u6570\u7ec4\u3001\u51fd\u6570\u4ee5\u53ca\u5176\u4ed6\u6307\u9488\u53d8\u91cf\u7684\u5730\u5740\u3002  </li> <li> <p>\u7a0b\u5e8f\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u9700\u8981\u7684\u662f\u6570\u636e\u548c\u6307\u4ee4\u7684\u5730\u5740\uff0c\u53d8\u91cf\u540d\u3001\u51fd\u6570\u540d\u3001\u5b57\u7b26\u4e32\u540d\u548c\u6570\u7ec4\u540d\u5728\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u5b83\u4eec\u90fd\u662f\u5730\u5740\u7684\u52a9\u8bb0\u7b26\uff1a\u5728\u7f16\u5199\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u8ba4\u4e3a\u53d8\u91cf\u540d\u8868\u793a\u7684\u662f\u6570\u636e\u672c\u8eab\uff0c\u800c\u51fd\u6570\u540d\u3001\u5b57\u7b26\u4e32\u540d\u548c\u6570\u7ec4\u540d\u8868\u793a\u7684\u662f\u4ee3\u7801\u5757\u6216\u6570\u636e\u5757\u7684\u9996\u5730\u5740\uff1b\u7a0b\u5e8f\u88ab\u7f16\u8bd1\u548c\u94fe\u63a5\u540e\uff0c\u8fd9\u4e9b\u540d\u5b57\u90fd\u4f1a\u6d88\u5931\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u5b83\u4eec\u5bf9\u5e94\u7684\u5730\u5740\u3002</p> </li> <li> <p>\u5e38\u89c1\u6307\u9488\u53d8\u91cf\u7684\u5b9a\u4e49</p> </li> </ul> \u5b9a \u00a0\u4e49 \u542b \u00a0\u4e49 int *p; p \u53ef\u4ee5\u6307\u5411 int \u7c7b\u578b\u7684\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u6307\u5411\u7c7b\u4f3c int arr[n] \u7684\u6570\u7ec4\u3002 int **p; p \u4e3a\u4e8c\u7ea7\u6307\u9488\uff0c\u6307\u5411 int * \u7c7b\u578b\u7684\u6570\u636e\u3002 int *p[n]; p \u4e3a\u6307\u9488\u6570\u7ec4\u3002[ ] \u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e \uff0c\u6240\u4ee5\u5e94\u8be5\u7406\u89e3\u4e3a int (p[n]); int (*p)[n]; p \u4e3a\u4e8c\u7ef4\u6570\u7ec4\u6307\u9488\u3002 int *p(); p \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a int *\u3002 int (*p)(); p \u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u539f\u578b\u4e3a int func() \u7684\u51fd\u6570\u3002 1. \u6307\u9488\u53d8\u91cf\u53ef\u4ee5\u8fdb\u884c\u52a0\u51cf\u8fd0\u7b97\uff0c\u4f8b\u5982<code>p++</code>\u3001<code>p+i</code>\u3001<code>p-=i</code>\u3002\u6307\u9488\u53d8\u91cf\u7684\u52a0\u51cf\u8fd0\u7b97\u5e76\u4e0d\u662f\u7b80\u5355\u7684\u52a0\u4e0a\u6216\u51cf\u53bb\u4e00\u4e2a\u6574\u6570\uff0c\u800c\u662f\u8ddf\u6307\u9488\u6307\u5411\u7684\u6570\u636e\u7c7b\u578b\u6709\u5173\u3002 2. \u7ed9\u6307\u9488\u53d8\u91cf\u8d4b\u503c\u65f6\uff0c\u8981\u5c06\u4e00\u4efd\u6570\u636e\u7684\u5730\u5740\u8d4b\u7ed9\u5b83\uff0c\u4e0d\u80fd\u76f4\u63a5\u8d4b\u7ed9\u4e00\u4e2a\u6574\u6570\uff0c\u4f8b\u5982<code>int *p = 1000;</code>\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u4e00\u822c\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002 3. \u4f7f\u7528\u6307\u9488\u53d8\u91cf\u4e4b\u524d\u4e00\u5b9a\u8981\u521d\u59cb\u5316\uff0c\u5426\u5219\u5c31\u4e0d\u80fd\u786e\u5b9a\u6307\u9488\u6307\u5411\u54ea\u91cc\uff0c\u5982\u679c\u5b83\u6307\u5411\u7684\u5185\u5b58\u6ca1\u6709\u4f7f\u7528\u6743\u9650\uff0c\u7a0b\u5e8f\u5c31\u5d29\u6e83\u4e86\u3002\u5bf9\u4e8e\u6682\u65f6\u6ca1\u6709\u6307\u5411\u7684\u6307\u9488\uff0c\u5efa\u8bae\u8d4b\u503c<code>NULL</code>\u3002 4. \u4e24\u4e2a\u6307\u9488\u53d8\u91cf\u53ef\u4ee5\u76f8\u51cf\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u53d8\u91cf\u6307\u5411\u540c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u76f8\u51cf\u7684\u7ed3\u679c\u5c31\u662f\u4e24\u4e2a\u6307\u9488\u4e4b\u95f4\u76f8\u5dee\u7684\u5143\u7d20\u4e2a\u6570\u3002 5. \u6570\u7ec4\u4e5f\u662f\u6709\u7c7b\u578b\u7684\uff0c\u6570\u7ec4\u540d\u7684\u672c\u610f\u662f\u8868\u793a\u4e00\u7ec4\u7c7b\u578b\u76f8\u540c\u7684\u6570\u636e\u3002\u5728\u5b9a\u4e49\u6570\u7ec4\u65f6\uff0c\u6216\u8005\u548c sizeof\u3001&amp; \u8fd0\u7b97\u7b26\u4e00\u8d77\u4f7f\u7528\u65f6\u6570\u7ec4\u540d\u624d\u8868\u793a\u6574\u4e2a\u6570\u7ec4\uff0c\u8868\u8fbe\u5f0f\u4e2d\u7684\u6570\u7ec4\u540d\u4f1a\u88ab\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\u3002"},{"location":"cs_base/language/c/#2","title":"2.\u7ed3\u6784\u4f53","text":""},{"location":"cs_base/language/c/#21","title":"2.1\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49","text":"<p>\u5728C\u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ed3\u6784\u4f53\uff08Struct)\u6765\u5b58\u653e\u4e00\u7ec4\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u3002\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5f62\u5f0f\u4e3a\uff1a </p>C<pre><code>struct \u7ed3\u6784\u4f53\u540d{  \n\u00a0 \u00a0 \u7ed3\u6784\u4f53\u6240\u5305\u542b\u7684\u53d8\u91cf\u6216\u6570\u7ec4  \n};\n</code></pre> C<pre><code>struct stu{\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5b66\u4e60\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n};\n</code></pre>"},{"location":"cs_base/language/c/#22","title":"2.2\u6210\u5458\u7684\u83b7\u53d6\u548c\u8d4b\u503c","text":"<ul> <li>\u6570\u7ec4\u4f7f\u7528\u4e0b\u6807<code>[ ]</code>\u83b7\u53d6\u5355\u4e2a\u5143\u7d20\uff0c\u7ed3\u6784\u4f53\u4f7f\u7528\u70b9\u53f7<code>.</code>\u83b7\u53d6\u5355\u4e2a\u6210\u5458\u3002<code>\u7ed3\u6784\u4f53\u53d8\u91cf\u540d.\u6210\u5458\u540d;</code> C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    struct{\n        char *name;  //\u59d3\u540d\n        int num;  //\u5b66\u53f7\n        int age;  //\u5e74\u9f84\n        char group;  //\u6240\u5728\u5c0f\u7ec4\n        float score;  //\u6210\u7ee9\n    } stu1;\n\n    //\u7ed9\u7ed3\u6784\u4f53\u6210\u5458\u8d4b\u503c\n    stu1.name = \"Tom\";\n    stu1.num = 12;\n    stu1.age = 18;\n    stu1.group = 'A';\n    stu1.score = 136.5;\n\n    //\u8bfb\u53d6\u7ed3\u6784\u4f53\u6210\u5458\u7684\u503c\n    printf(\"%s\u7684\u5b66\u53f7\u662f%d\uff0c\u5e74\u9f84\u662f%d\uff0c\u5728%c\u7ec4\uff0c\u4eca\u5e74\u7684\u6210\u7ee9\u662f%.1f\uff01\\n\", stu1.name, stu1.num, stu1.age, stu1.group, stu1.score);\n    //\u8fd0\u884c\u7ed3\u679c\uff1a  \n    //Tom\u7684\u5b66\u53f7\u662f12\uff0c\u5e74\u9f84\u662f18\uff0c\u5728A\u7ec4\uff0c\u4eca\u5e74\u7684\u6210\u7ee9\u662f136.5\uff01\n    return 0;\n}\n</code></pre></li> <li>\u7ed3\u6784\u4f53\u662f\u4e00\u79cd\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b\uff0c\u662f\u521b\u5efa\u53d8\u91cf\u7684\u6a21\u677f\uff0c\u4e0d\u5360\u7528\u5185\u5b58\u7a7a\u95f4\uff1b\u7ed3\u6784\u4f53\u53d8\u91cf\u624d\u5305\u542b\u4e86\u5b9e\u5b9e\u5728\u5728\u7684\u6570\u636e\uff0c\u9700\u8981\u5185\u5b58\u7a7a\u95f4\u6765\u5b58\u50a8\u3002</li> </ul>"},{"location":"cs_base/language/c/#23","title":"2.3\u7ed3\u6784\u4f53\u6570\u7ec4","text":"C<pre><code>struct stu{\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5c0f\u7ec4 \n    float score;  //\u6210\u7ee9\n}class[5] = {\n    {\"Li ping\", 5, 18, 'C', 145.0},\n    {\"Zhang ping\", 4, 19, 'A', 130.5},\n    {\"He fang\", 1, 18, 'A', 148.5},\n    {\"Cheng ling\", 2, 17, 'F', 139.0},\n    {\"Wang ming\", 3, 17, 'B', 144.5}\n};\n</code></pre> \u6216\u8005 C<pre><code>struct stu{\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5c0f\u7ec4 \n    float score;  //\u6210\u7ee9\n}class[5];\n</code></pre> \u6216\u8005 C<pre><code>struct stu{\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5c0f\u7ec4 \n    float score;  //\u6210\u7ee9\n}class[] = {                   //\u4e0d\u7ed9\u51fa\u6570\u7ec4\u7684\u957f\u5ea6\n    {\"Li ping\", 5, 18, 'C', 145.0},\n    {\"Zhang ping\", 4, 19, 'A', 130.5},\n    {\"He fang\", 1, 18, 'A', 148.5},\n    {\"Cheng ling\", 2, 17, 'F', 139.0},\n    {\"Wang ming\", 3, 17, 'B', 144.5}\n};\n</code></pre>"},{"location":"cs_base/language/c/#24","title":"2.4\u7ed3\u6784\u4f53\u6307\u9488","text":""},{"location":"cs_base/language/c/#241","title":"2.4.1\u57fa\u672c\u77e5\u8bc6","text":"<ul> <li>\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u6307\u5411\u7ed3\u6784\u4f53 C<pre><code>//\u7ed3\u6784\u4f53\nstruct stu{\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n} stu1 = { \"Tom\", 12, 18, 'A', 136.5 };\n//\u7ed3\u6784\u4f53\u6307\u9488\nstruct stu *pstu = &amp;stu1;\n</code></pre></li> <li>\u7ed3\u6784\u4f53\u53d8\u91cf\u540d\u548c\u6570\u7ec4\u540d\u4e0d\u540c\uff0c\u6570\u7ec4\u540d\u5728\u8868\u8fbe\u5f0f\u4e2d\u4f1a\u88ab\u8f6c\u6362\u4e3a\u6570\u7ec4\u6307\u9488\uff0c\u800c\u7ed3\u6784\u4f53\u53d8\u91cf\u540d\u4e0d\u4f1a\uff0c\u65e0\u8bba\u5728\u4efb\u4f55\u8868\u8fbe\u5f0f\u4e2d\u5b83\u8868\u793a\u7684\u90fd\u662f\u6574\u4e2a\u96c6\u5408\u672c\u8eab\uff0c\u8981\u60f3\u53d6\u5f97\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u5730\u5740\uff0c\u5fc5\u987b\u5728\u524d\u9762\u52a0<code>&amp;</code>\uff0c\u6240\u4ee5\u7ed9 pstu \u8d4b\u503c\u53ea\u80fd\u5199\u4f5c\uff1a<code>struct stu *pstu = &amp;stu1;</code></li> <li>\u7ed3\u6784\u4f53\u548c\u7ed3\u6784\u4f53\u53d8\u91cf\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u6982\u5ff5\uff1a\u7ed3\u6784\u4f53\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u662f\u4e00\u79cd\u521b\u5efa\u53d8\u91cf\u7684\u6a21\u677f\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u4e3a\u5b83\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5c31\u50cf int\u3001float\u3001char \u8fd9\u4e9b\u5173\u952e\u5b57\u672c\u8eab\u4e0d\u5360\u7528\u5185\u5b58\u4e00\u6837\uff1b\u7ed3\u6784\u4f53\u53d8\u91cf\u624d\u5305\u542b\u5b9e\u5b9e\u5728\u5728\u7684\u6570\u636e\uff0c\u624d\u9700\u8981\u5185\u5b58\u6765\u5b58\u50a8\u3002\u4e0b\u9762\u7684\u5199\u6cd5\u662f\u9519\u8bef\u7684\uff0c\u4e0d\u53ef\u80fd\u53bb\u53d6\u4e00\u4e2a\u7ed3\u6784\u4f53\u540d\u7684\u5730\u5740\uff0c\u4e5f\u4e0d\u80fd\u5c06\u5b83\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf\uff1a<code>struct stu *pstu = &amp;stu;</code>or<code>struct stu *pstu = stu;</code></li> </ul>"},{"location":"cs_base/language/c/#242","title":"2.4.2\u83b7\u53d6\u7ed3\u6784\u4f53\u6210\u5458","text":"<ul> <li>\u901a\u8fc7\u7ed3\u6784\u4f53\u6307\u9488\u53ef\u4ee5\u83b7\u53d6\u7ed3\u6784\u4f53\u6210\u5458\uff0c\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a<code>(*pointer).memberName</code>\u6216\u8005\uff1a<code>pointer-&gt;memberName</code></li> <li>\u7b2c\u4e00\u79cd\u5199\u6cd5\u4e2d\uff0c<code>.</code>\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e<code>*</code>\uff0c<code>(*pointer)</code>\u4e24\u8fb9\u7684\u62ec\u53f7\u4e0d\u80fd\u5c11\u3002\u5982\u679c\u53bb\u6389\u62ec\u53f7\u5199\u4f5c<code>*pointer.memberName</code>\uff0c\u90a3\u4e48\u5c31\u7b49\u6548\u4e8e<code>*(pointer.memberName)</code>\uff0c\u8fd9\u6837\u610f\u4e49\u5c31\u5b8c\u5168\u4e0d\u5bf9\u4e86\u3002  </li> <li>\u7b2c\u4e8c\u79cd\u5199\u6cd5\u4e2d\uff0c<code>-&gt;</code>\u662f\u4e00\u4e2a\u65b0\u7684\u8fd0\u7b97\u7b26\uff0c\u4e60\u60ef\u79f0\u5b83\u4e3a\u201c\u7bad\u5934\u201d\uff0c\u6709\u4e86\u5b83\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ed3\u6784\u4f53\u6307\u9488\u76f4\u63a5\u53d6\u5f97\u7ed3\u6784\u4f53\u6210\u5458\uff1b\u8fd9\u4e5f\u662f<code>-&gt;</code>\u5728C\u8bed\u8a00\u4e2d\u7684\u552f\u4e00\u7528\u9014\u3002 C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    struct{\n        char *name;  //\u59d3\u540d\n        int num;  //\u5b66\u53f7\n        int age;  //\u5e74\u9f84\n        char group;  //\u6240\u5728\u5c0f\u7ec4\n        float score;  //\u6210\u7ee9\n    } stu1 = { \"Tom\", 12, 18, 'A', 136.5 }, *pstu = &amp;stu1;\n\n    //\u8bfb\u53d6\u7ed3\u6784\u4f53\u6210\u5458\u7684\u503c\n    printf(\"%s\u7684\u5b66\u53f7\u662f%d\uff0c\u5e74\u9f84\u662f%d\uff0c\u5728%c\u7ec4\uff0c\u4eca\u5e74\u7684\u6210\u7ee9\u662f%.1f\uff01\\n\", (*pstu).name, (*pstu).num, (*pstu).age, (*pstu).group, (*pstu).score);\n    printf(\"%s\u7684\u5b66\u53f7\u662f%d\uff0c\u5e74\u9f84\u662f%d\uff0c\u5728%c\u7ec4\uff0c\u4eca\u5e74\u7684\u6210\u7ee9\u662f%.1f\uff01\\n\", pstu-&gt;name, pstu-&gt;num, pstu-&gt;age, pstu-&gt;group, pstu-&gt;score);\n\n    return 0;\n}\n</code></pre></li> </ul>"},{"location":"cs_base/language/c/#243","title":"2.4.3\u7ed3\u6784\u4f53\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570","text":"<ul> <li>\u7ed3\u6784\u4f53\u53d8\u91cf\u540d\u4ee3\u8868\u7684\u662f\u6574\u4e2a\u96c6\u5408\u672c\u8eab\uff0c\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u65f6\u4f20\u9012\u7684\u6574\u4e2a\u96c6\u5408\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u6210\u5458\uff0c\u800c\u4e0d\u662f\u50cf\u6570\u7ec4\u4e00\u6837\u88ab\u7f16\u8bd1\u5668\u8f6c\u6362\u6210\u4e00\u4e2a\u6307\u9488\u3002\u5982\u679c\u7ed3\u6784\u4f53\u6210\u5458\u8f83\u591a\uff0c\u5c24\u5176\u662f\u6210\u5458\u4e3a\u6570\u7ec4\u65f6\uff0c\u4f20\u9001\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u5f00\u9500\u4f1a\u5f88\u5927\uff0c\u5f71\u54cd\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\u3002\u6240\u4ee5\u6700\u597d\u7684\u529e\u6cd5\u5c31\u662f\u4f7f\u7528\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u8fd9\u65f6\u7531\u5b9e\u53c2\u4f20\u5411\u5f62\u53c2\u7684\u53ea\u662f\u4e00\u4e2a\u5730\u5740\uff0c\u975e\u5e38\u5feb\u901f\u3002 C<pre><code>#include &lt;stdio.h&gt;\n\nstruct stu{\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n}stus[] = {\n    {\"Li ping\", 5, 18, 'C', 145.0},\n    {\"Zhang ping\", 4, 19, 'A', 130.5},\n    {\"He fang\", 1, 18, 'A', 148.5},\n    {\"Cheng ling\", 2, 17, 'F', 139.0},\n    {\"Wang ming\", 3, 17, 'B', 144.5}\n};\n\nvoid average(struct stu *ps, int len);\n\nint main(){\n    int len = sizeof(stus) / sizeof(struct stu);\n    average(stus, len);\n    return 0;\n}\n\nvoid average(struct stu *ps, int len){\n    int i, num_140 = 0;\n    float average, sum = 0;\n    for(i=0; i&lt;len; i++){\n        sum += (ps + i) -&gt; score;\n        if((ps + i)-&gt;score &lt; 140) num_140++;\n    }\n    printf(\"sum=%.2f\\naverage=%.2f\\nnum_140=%d\\n\", sum, sum/5, num_140);\n}\n</code></pre></li> </ul>"},{"location":"cs_base/language/c/#25","title":"2.5\u679a\u4e3e\u7c7b\u578b","text":"<ul> <li>\u5b9a\u4e49\u5f62\u5f0f<code>enum typeName{valueName1, valueName2, .....};</code> \u4f8b\u5982\uff0c\u5217\u51fa\u4e00\u4e2a\u661f\u671f\u6709\u51e0\u5929\uff1a<ol> <li><code>enum week{ Mon, Tues, Wed, Thurs, Fri, Sat, Sun };</code></li> <li><code>enum week{ Mon = 1, Tues = 2, Wed = 3, Thurs = 4, Fri = 5, Sat = 6, Sun = 7 };</code></li> <li><code>enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun };</code> - \u7b2c3\u79cd\u6700\u4e3a\u7b80\u5355\uff0c\u679a\u4e3e\u503c\u4ece1\u5f00\u59cb\u9012\u589e</li> </ol> </li> <li>\u4e5f\u53ef\u4ee5\u5728\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\u7684\u540c\u65f6\u5b9a\u4e49\u53d8\u91cf\uff1a <code>enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun } a, b, c;</code></li> <li>\u6709\u4e86\u679a\u4e3e\u53d8\u91cf\uff0c\u5c31\u53ef\u4ee5\u628a\u5217\u8868\u4e2d\u7684\u503c\u8d4b\u7ed9\u5b83\uff1a<ol> <li>`enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun };</li> <li><code>enum week a = Mon, b = Wed, c = Sat; \u6216\u8005\uff1a</code>enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun } a = Mon, b = Wed, c = Sat;</li> </ol> </li> <li>\u793a\u4f8b\uff1a C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun } day;\n    scanf(\"%d\", &amp;day);\n    switch(day){\n        case Mon: puts(\"Monday\"); break;\n        case Tues: puts(\"Tuesday\"); break;\n        case Wed: puts(\"Wednesday\"); break;\n        case Thurs: puts(\"Thursday\"); break;\n        case Fri: puts(\"Friday\"); break;\n        case Sat: puts(\"Saturday\"); break;\n        case Sun: puts(\"Sunday\"); break;\n        default: puts(\"Error!\");\n    }\n    return 0;\n}\n</code></pre></li> <li>case \u5173\u952e\u5b57\u540e\u9762\u5fc5\u987b\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u6216\u8005\u662f\u7ed3\u679c\u4e3a\u6574\u6570\u7684\u8868\u8fbe\u5f0f\uff0c\u4f46\u4e0d\u80fd\u5305\u542b\u4efb\u4f55\u53d8\u91cf\uff0c\u6b63\u662f\u7531\u4e8e <code>Mon\u3001Tues\u3001Wed</code>\u8fd9\u4e9b\u540d\u5b57\u6700\u7ec8\u4f1a\u88ab\u66ff\u6362\u6210\u4e00\u4e2a\u6574\u6570\uff0c\u6240\u4ee5\u5b83\u4eec\u624d\u80fd\u653e\u5728 <code>case</code> \u540e\u9762\u3002</li> <li><code>Mon\u3001Tues\u3001Wed</code> \u7b49\u90fd\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u5bf9\u5b83\u4eec\u8d4b\u503c\uff0c\u53ea\u80fd\u5c06\u5b83\u4eec\u7684\u503c\u8d4b\u7ed9\u5176\u4ed6\u7684\u53d8\u91cf\u3002  </li> <li>\u679a\u4e3e\u548c\u5b8f\u5176\u5b9e\u975e\u5e38\u7c7b\u4f3c\uff1a\u5b8f\u5728\u9884\u5904\u7406\u9636\u6bb5\u5c06\u540d\u5b57\u66ff\u6362\u6210\u5bf9\u5e94\u7684\u503c\uff0c\u679a\u4e3e\u5728\u7f16\u8bd1\u9636\u6bb5\u5c06\u540d\u5b57\u66ff\u6362\u6210\u5bf9\u5e94\u7684\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u679a\u4e3e\u7406\u89e3\u4e3a\u7f16\u8bd1\u9636\u6bb5\u7684\u5b8f\u3002</li> </ul>"},{"location":"cs_base/language/c/#3","title":"3.\u6587\u4ef6","text":""},{"location":"cs_base/language/c/#31","title":"3.1 \u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u901a\u5e38\u628a\u663e\u793a\u5668\u79f0\u4e3a\u6807\u51c6\u8f93\u51fa\u6587\u4ef6\uff0cprintf \u5c31\u662f\u5411\u8fd9\u4e2a\u6587\u4ef6\u8f93\u51fa\u6570\u636e\uff1b</li> <li>\u901a\u5e38\u628a\u952e\u76d8\u79f0\u4e3a\u6807\u51c6\u8f93\u5165\u6587\u4ef6\uff0cscanf \u5c31\u662f\u4ece\u8fd9\u4e2a\u6587\u4ef6\u8bfb\u53d6\u6570\u636e\u3002</li> </ul> \u6587\u4ef6 \u786c\u4ef6\u8bbe\u5907 stdin \u6807\u51c6\u8f93\u5165\u6587\u4ef6\uff0c\u4e00\u822c\u6307\u952e\u76d8\uff1bscanf()\u3001getchar() \u7b49\u51fd\u6570\u9ed8\u8ba4\u4ece stdin \u83b7\u53d6\u8f93\u5165\u3002 stdout \u6807\u51c6\u8f93\u51fa\u6587\u4ef6\uff0c\u4e00\u822c\u6307\u663e\u793a\u5668\uff1bprintf()\u3001putchar() \u7b49\u51fd\u6570\u9ed8\u8ba4\u5411 stdout \u8f93\u51fa\u6570\u636e\u3002 stderr \u6807\u51c6\u9519\u8bef\u6587\u4ef6\uff0c\u4e00\u822c\u6307\u663e\u793a\u5668\uff1bperror() \u7b49\u51fd\u6570\u9ed8\u8ba4\u5411 stderr\u00a0\u8f93\u51fa\u6570\u636e\uff08\u540e\u7eed\u4f1a\u8bb2\u5230\uff09\u3002 stdprn \u6807\u51c6\u6253\u5370\u6587\u4ef6\uff0c\u4e00\u822c\u6307\u6253\u5370\u673a\u3002 ## 3.2 \u6587\u4ef6\u6d41 - \u6240\u6709\u7684\u6587\u4ef6\uff08\u4fdd\u5b58\u5728\u78c1\u76d8\uff09\u90fd\u8981\u8f7d\u5165\u5185\u5b58\u624d\u80fd\u5904\u7406\uff0c\u6240\u6709\u7684\u6570\u636e\u5fc5\u987b\u5199\u5165\u6587\u4ef6\uff08\u78c1\u76d8\uff09\u624d\u4e0d\u4f1a\u4e22\u5931\u3002 - \u6570\u636e\u5728\u6587\u4ef6\u548c\u5185\u5b58\u4e4b\u95f4\u4f20\u9012\u7684\u8fc7\u7a0b\u53eb\u505a\u6587\u4ef6\u6d41\uff0c\u7c7b\u4f3c\u6c34\u4ece\u4e00\u4e2a\u5730\u65b9\u6d41\u52a8\u5230\u53e6\u4e00\u4e2a\u5730\u65b9\u3002 - \u6570\u636e\u4ece\u6587\u4ef6\u590d\u5236\u5230\u5185\u5b58\u7684\u8fc7\u7a0b\u53eb\u505a\u8f93\u5165\u6d41\uff0c\u4ece\u5185\u5b58\u4fdd\u5b58\u5230\u6587\u4ef6\u7684\u8fc7\u7a0b\u53eb\u505a\u8f93\u51fa\u6d41\u3002 - \u6211\u4eec\u628a\u6570\u636e\u5728\u6570\u636e\u6e90\u548c\u7a0b\u5e8f\uff08\u5185\u5b58\uff09\u4e4b\u95f4\u4f20\u9012\u7684\u8fc7\u7a0b\u53eb\u505a\u6570\u636e\u6d41(Data Stream)\u3002\u76f8\u5e94\u7684\uff0c\u6570\u636e\u4ece\u6570\u636e\u6e90\u5230\u7a0b\u5e8f\uff08\u5185\u5b58\uff09\u7684\u8fc7\u7a0b\u53eb\u505a\u8f93\u5165\u6d41(Input Stream)\uff0c\u4ece\u7a0b\u5e8f\uff08\u5185\u5b58\uff09\u5230\u6570\u636e\u6e90\u7684\u8fc7\u7a0b\u53eb\u505a\u8f93\u51fa\u6d41(Output Stream)\u3002 - \u6253\u5f00\u6587\u4ef6\u5c31\u662f\u6253\u5f00\u4e86\u4e00\u4e2a\u6d41\u3002 ## 3.3 \u6253\u5f00\u6587\u4ef6 ### 3.3.1 \u57fa\u672c\u77e5\u8bc6 - \u4f7f\u7528 <code>&lt;stdio.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\u7684<code>fopen()</code>\u51fd\u6570\u5373\u53ef\u6253\u5f00\u6587\u4ef6\uff0c\u5b83\u7684\u7528\u6cd5\u4e3a\uff1a <code>FILE *fopen(char *filename, char *mode);</code> - <code>filename</code>\u4e3a\u6587\u4ef6\u540d\uff08\u5305\u62ec\u6587\u4ef6\u8def\u5f84\uff09\uff0c<code>mode</code>\u4e3a\u6253\u5f00\u65b9\u5f0f\uff0c\u5b83\u4eec\u90fd\u662f\u5b57\u7b26\u4e32\u3002 ### 3.3.2<code>fopen()</code>\u51fd\u6570\u7684\u8fd4\u56de\u503c - <code>fopen()</code>\u4f1a\u83b7\u53d6\u6587\u4ef6\u4fe1\u606f\uff0c\u5305\u62ec\u6587\u4ef6\u540d\u3001\u6587\u4ef6\u72b6\u6001\u3001\u5f53\u524d\u8bfb\u5199\u4f4d\u7f6e\u7b49\uff0c\u5e76\u5c06\u8fd9\u4e9b\u4fe1\u606f\u4fdd\u5b58\u5230\u4e00\u4e2a FILE \u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u53d8\u91cf\u4e2d\uff0c\u7136\u540e\u5c06\u8be5\u53d8\u91cf\u7684\u5730\u5740\u8fd4\u56de\u3002 - <code>FILE</code>\u662f <code>&lt;stdio.h&gt;</code>\u5934\u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5b83\u4e13\u95e8\u7528\u6765\u4fdd\u5b58\u6587\u4ef6\u4fe1\u606f\u3002\u6211\u4eec\u4e0d\u7528\u5173\u5fc3 FILE \u7684\u5177\u4f53\u7ed3\u6784\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5b83\u7684\u7528\u6cd5\u5c31\u884c\u3002 - \u5982\u679c\u5e0c\u671b\u63a5\u6536 <code>fopen()</code>\u7684\u8fd4\u56de\u503c\uff0c\u5c31\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a FILE \u7c7b\u578b\u7684\u6307\u9488\u3002 \u4f8b\u5982\uff1a <code>FILE *fp = fopen(\"demo.txt\", \"r\");</code> - \u8868\u793a\u4ee5\u201c\u53ea\u8bfb\u201d\u65b9\u5f0f\u6253\u5f00\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 demo.txt \u6587\u4ef6\uff0c\u5e76\u4f7f<code>fp</code>\u6307\u5411\u8be5\u6587\u4ef6\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7<code>fp</code>\u6765\u64cd\u4f5c <code>demo.txt</code>\u4e86\u3002<code>fp</code>\u901a\u5e38\u88ab\u79f0\u4e3a\u6587\u4ef6\u6307\u9488\u3002 #### \u5224\u65ad\u6587\u4ef6\u662f\u5426\u6253\u5f00\u6210\u529f - \u6253\u5f00\u6587\u4ef6\u51fa\u9519\u65f6\uff0c<code>fopen()</code> \u5c06\u8fd4\u56de\u4e00\u4e2a\u7a7a\u6307\u9488\uff0c\u4e5f\u5c31\u662f NULL\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u6765\u5224\u65ad\u6587\u4ef6\u662f\u5426\u6253\u5f00\u6210\u529f\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a C<pre><code>FILE *fp;\nif( (fp=fopen(\"D:\\\\demo.txt\",\"rb\")) == NULL ){\n    printf(\"Fail to open file!\\n\");\n    exit(0);  //\u9000\u51fa\u7a0b\u5e8f\uff08\u7ed3\u675f\u7a0b\u5e8f\uff09\n}\n</code></pre> - \u6211\u4eec\u901a\u8fc7\u5224\u65ad<code>fopen()</code>\u7684\u8fd4\u56de\u503c\u662f\u5426\u548c NULL \u76f8\u7b49\u6765\u5224\u65ad\u662f\u5426\u6253\u5f00\u5931\u8d25\uff1a\u5982\u679c <code>fopen()</code>\u7684\u8fd4\u56de\u503c\u4e3a NULL\uff0c\u90a3\u4e48 <code>fp</code>\u7684\u503c\u4e5f\u4e3a\u00a0 NULL\uff0c\u6b64\u65f6 if \u7684\u5224\u65ad\u6761\u4ef6\u6210\u7acb\uff0c\u8868\u793a\u6587\u4ef6\u6253\u5f00\u5931\u8d25\u3002 ### 3.3.3fopen() \u51fd\u6570\u7684\u6253\u5f00\u65b9\u5f0f - \u4e0d\u540c\u7684\u64cd\u4f5c\u9700\u8981\u4e0d\u540c\u7684\u6587\u4ef6\u6743\u9650\u3002\u4f8b\u5982\uff0c\u53ea\u60f3\u8bfb\u53d6\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u7684\u8bdd\uff0c\u201c\u53ea\u8bfb\u201d\u6743\u9650\u5c31\u591f\u4e86\uff1b\u65e2\u60f3\u8bfb\u53d6\u53c8\u60f3\u5199\u5165\u6570\u636e\u7684\u8bdd\uff0c\u201c\u8bfb\u5199\u201d\u6743\u9650\u5c31\u662f\u5fc5\u987b\u7684\u4e86\u3002 - \u53e6\u5916\uff0c\u6587\u4ef6\u4e5f\u6709\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u6309\u7167\u6570\u636e\u7684\u5b58\u50a8\u65b9\u5f0f\u53ef\u4ee5\u5206\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6587\u672c\u6587\u4ef6\uff0c\u5b83\u4eec\u7684\u64cd\u4f5c\u7ec6\u8282\u662f\u4e0d\u540c\u7684\u3002 - \u5728\u8c03\u7528 <code>fopen()</code> \u51fd\u6570\u65f6\uff0c\u8fd9\u4e9b\u4fe1\u606f\u90fd\u5fc5\u987b\u63d0\u4f9b\uff0c\u79f0\u4e3a\u201c\u6587\u4ef6\u6253\u5f00\u65b9\u5f0f\u201d\u3002\u6700\u57fa\u672c\u7684\u6587\u4ef6\u6253\u5f00\u65b9\u5f0f\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a \u6253\u5f00\u65b9\u5f0f \u8bf4\u660e \"r\" \u4ee5\u201c\u53ea\u8bfb\u201d\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u53ea\u5141\u8bb8\u8bfb\u53d6\uff0c\u4e0d\u5141\u8bb8\u5199\u5165\u3002\u6587\u4ef6\u5fc5\u987b\u5b58\u5728\uff0c\u5426\u5219\u6253\u5f00\u5931\u8d25\u3002 \"w\" \u4ee5\u201c\u5199\u5165\u201d\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff1b\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u90a3\u4e48\u6e05\u7a7a\u6587\u4ef6\u5185\u5bb9\uff08\u76f8\u5f53\u4e8e\u5220\u9664\u539f\u6587\u4ef6\uff0c\u518d\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff09\u3002 \"a\" \u4ee5\u201c\u8ffd\u52a0\u201d\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff1b\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u90a3\u4e48\u5c06\u5199\u5165\u7684\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\uff08\u6587\u4ef6\u539f\u6709\u7684\u5185\u5bb9\u4fdd\u7559\uff09\u3002 \"r+\" \u4ee5\u201c\u8bfb\u5199\u201d\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u65e2\u53ef\u4ee5\u8bfb\u53d6\u4e5f\u53ef\u4ee5\u5199\u5165\uff0c\u4e5f\u5c31\u662f\u968f\u610f\u66f4\u65b0\u6587\u4ef6\u3002\u6587\u4ef6\u5fc5\u987b\u5b58\u5728\uff0c\u5426\u5219\u6253\u5f00\u5931\u8d25\u3002 \"w+\" \u4ee5\u201c\u5199\u5165/\u66f4\u65b0\u201d\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u76f8\u5f53\u4e8e<code>w</code>\u548c<code>r+</code>\u53e0\u52a0\u7684\u6548\u679c\u3002\u65e2\u53ef\u4ee5\u8bfb\u53d6\u4e5f\u53ef\u4ee5\u5199\u5165\uff0c\u4e5f\u5c31\u662f\u968f\u610f\u66f4\u65b0\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff1b\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u90a3\u4e48\u6e05\u7a7a\u6587\u4ef6\u5185\u5bb9\uff08\u76f8\u5f53\u4e8e\u5220\u9664\u539f\u6587\u4ef6\uff0c\u518d\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff09\u3002 \"a+\" \u4ee5\u201c\u8ffd\u52a0/\u66f4\u65b0\u201d\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u76f8\u5f53\u4e8ea\u548cr+\u53e0\u52a0\u7684\u6548\u679c\u3002\u65e2\u53ef\u4ee5\u8bfb\u53d6\u4e5f\u53ef\u4ee5\u5199\u5165\uff0c\u4e5f\u5c31\u662f\u968f\u610f\u66f4\u65b0\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff1b\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u90a3\u4e48\u5c06\u5199\u5165\u7684\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\uff08\u6587\u4ef6\u539f\u6709\u7684\u5185\u5bb9\u4fdd\u7559\uff09\u3002 <ul> <li>\u8c03\u7528 <code>fopen()</code>\u51fd\u6570\u65f6\u5fc5\u987b\u6307\u660e\u8bfb\u5199\u6743\u9650\uff0c\u4f46\u662f\u53ef\u4ee5\u4e0d\u6307\u660e\u8bfb\u5199\u65b9\u5f0f\uff08\u6b64\u65f6\u9ed8\u8ba4\u4e3a<code>\"t\"</code>\uff09\u3002  </li> <li>\u8bfb\u5199\u6743\u9650\u548c\u8bfb\u5199\u65b9\u5f0f\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\uff0c\u4f46\u662f\u5fc5\u987b\u5c06\u8bfb\u5199\u65b9\u5f0f\u653e\u5728\u8bfb\u5199\u6743\u9650\u7684\u4e2d\u95f4\u6216\u8005\u5c3e\u90e8\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e0d\u80fd\u5c06\u8bfb\u5199\u65b9\u5f0f\u653e\u5728\u8bfb\u5199\u6743\u9650\u7684\u5f00\u5934\uff09\u3002\u4f8b\u5982\uff1a<ul> <li>\u5c06\u8bfb\u5199\u65b9\u5f0f\u653e\u5728\u8bfb\u5199\u6743\u9650\u7684\u672b\u5c3e\uff1a\"rb\"\u3001\"wt\"\u3001\"ab\"\u3001\"r+b\"\u3001\"w+t\"\u3001\"a+t\"</li> <li>\u5c06\u8bfb\u5199\u65b9\u5f0f\u653e\u5728\u8bfb\u5199\u6743\u9650\u7684\u4e2d\u95f4\uff1a\"rb+\"\u3001\"wt+\"\u3001\"ab+\"</li> </ul> </li> </ul> <p>\u6574\u4f53\u6765\u8bf4\uff0c\u6587\u4ef6\u6253\u5f00\u65b9\u5f0f\u7531 <code>r\u3001w\u3001a\u3001t\u3001b\u3001+</code>\u516d\u4e2a\u5b57\u7b26\u62fc\u6210\uff0c\u5404\u5b57\u7b26\u7684\u542b\u4e49\u662f\uff1a - r(read)\uff1a\u8bfb - w(write)\uff1a\u5199 - a(append)\uff1a\u8ffd\u52a0 - t(text)\uff1a\u6587\u672c\u6587\u4ef6 - b(binary)\uff1a\u4e8c\u8fdb\u5236\u6587\u4ef6 - +\uff1a\u8bfb\u548c\u5199</p>"},{"location":"cs_base/language/c/#34","title":"3.4\u5173\u95ed\u6587\u4ef6","text":"<ul> <li>\u6587\u4ef6\u4e00\u65e6\u4f7f\u7528\u5b8c\u6bd5\uff0c\u5e94\u8be5\u7528 <code>fclose()</code>\u51fd\u6570\u628a\u6587\u4ef6\u5173\u95ed\uff0c\u4ee5\u91ca\u653e\u76f8\u5173\u8d44\u6e90\uff0c\u907f\u514d\u6570\u636e\u4e22\u5931\u3002<code>fclose()</code>\u7684\u7528\u6cd5\u4e3a\uff1a <code>int fclose(FILE *fp);</code><ul> <li><code>fp</code> \u4e3a\u6587\u4ef6\u6307\u9488\u3002</li> </ul> </li> <li>`fclose(fp);</li> <li>\u6587\u4ef6\u6b63\u5e38\u5173\u95ed\u65f6\uff0cfclose() \u7684\u8fd4\u56de\u503c\u4e3a0\uff0c\u5982\u679c\u8fd4\u56de\u975e\u96f6\u503c\u5219\u8868\u793a\u6709\u9519\u8bef\u53d1\u751f\u3002  </li> </ul>"},{"location":"cs_base/language/c/#35","title":"3.5\u5b9e\u4f8b\u6f14\u793a","text":"<p>\u6700\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u4e00\u6bb5\u5b8c\u6574\u7684\u4ee3\u7801\u6765\u6f14\u793a fopen \u51fd\u6570\u7684\u7528\u6cd5\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u4f1a\u4e00\u884c\u4e00\u884c\u5730\u8bfb\u53d6\u6587\u672c\u6587\u4ef6\u7684\u6240\u6709\u5185\u5bb9\uff1a </p>C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdib.h&gt;\n#define N 100\nint main(){\n    FILE *fp;\n    char str[N + 1];\n    //\u5224\u65ad\u6587\u4ef6\u662f\u5426\u6253\u5f00\u5931\u8d25\n    if ((fp = fopen(\"d:\\\\demo.txt\", \"rt\")) == NULL) {\n        puts(\"Fail to open file!\");\n        exit(0);\n    }\n    //\u5faa\u73af\u8bfb\u53d6\u6587\u4ef6\u7684\u6bcf\u4e00\u884c\u6570\u636e\n    while( fgets(str, N, fp) != NULL ) {\n        printf(\"%s\", str);\n    }\n\n    //\u64cd\u4f5c\u7ed3\u675f\u540e\u5173\u95ed\u6587\u4ef6\n    fclose(fp);\n    return 0;\n}\n</code></pre>"},{"location":"csapp/","title":"CSAPP","text":""},{"location":"csapp/#csapp","title":"CSAPP","text":"<p>Abstract</p> <p>\u672c\u90e8\u5206\u5185\u5bb9\uff08\u9664\u7279\u522b\u58f0\u660e\u5916\uff09\u91c7\u7528 \u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u4fdd\u6301\u4e00\u81f4 4.0 \u56fd\u9645 (CC BY-NC-SA 4.0) \u8bb8\u53ef\u534f\u8bae\u8fdb\u884c\u8bb8\u53ef\u3002</p> <p>{{ BEGIN_TOC }} - \"lecture\":     - \"01\": lecture/01     - \"02\": lecture/02 {{ END_TOC }}</p>"},{"location":"csapp/lecture/01/","title":"Lecture 01","text":""},{"location":"csapp/lecture/01/#great-reality","title":"Great Reality","text":""},{"location":"csapp/lecture/01/#1-ints-are-not-integers-floats-are-not-reals","title":"1. Ints are not Integers, Floats are not Reals","text":""},{"location":"csapp/lecture/01/#int","title":"\u6574\u6570\uff08Int\uff09\u8303\u56f4\u6709\u9650","text":"<ul> <li>\u6709\u9650\u8303\u56f4\uff1a\u6574\u6570\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u8868\u793a\u662f\u6709\u8303\u56f4\u7684\uff0c\u8fd9\u4e2a\u8303\u56f4\u53d6\u51b3\u4e8e\u6570\u636e\u7c7b\u578b\u7684\u4f4d\u6570\uff08\u5982 <code>int</code> \u901a\u5e38\u662f 32 \u4f4d\u6216 16 \u4f4d\uff09\u3002\u8d85\u51fa\u8303\u56f4\u65f6\u4f1a\u5bfc\u81f4 \u6ea2\u51fa\uff0c\u51fa\u73b0\u610f\u60f3\u4e0d\u5230\u7684\u7ed3\u679c\u3002<ul> <li>\u8865\u7801\u7684\u4f5c\u7528\uff1a\u6ea2\u51fa\u540e\u6570\u503c\u4f1a\u6309\u7167\u8865\u7801\u89c4\u5219\u53d8\u6210\u8d1f\u6570\u3002\u4f8b\u5982\uff1a\u5bf9\u4e8e 16 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\uff0c<code>32767 + 1</code> \u4f1a\u53d8\u6210 <code>-32768</code>\u3002</li> <li>\u6ce8\u610f\u4e8b\u9879\uff1a\u5728\u8fdb\u884c\u6574\u6570\u8fd0\u7b97\u65f6\u9700\u8003\u8651\u6ea2\u51fa\u7684\u53ef\u80fd\u6027\uff0c\u7279\u522b\u662f\u5faa\u73af\u8ba1\u6570\u5668\u6216\u6d89\u53ca\u6781\u5927\u6570\u503c\u7684\u64cd\u4f5c\u3002</li> </ul> </li> </ul>"},{"location":"csapp/lecture/01/#float","title":"\u6d6e\u70b9\u6570\uff08Float\uff09\u4e0d\u7b49\u4e8e\u5b9e\u6570","text":"<ul> <li>\u820d\u5165\u8bef\u5dee\uff1a\u6d6e\u70b9\u6570\u91c7\u7528\u4e8c\u8fdb\u5236\u8fd1\u4f3c\u8868\u793a\uff0c\u5bfc\u81f4\u65e0\u6cd5\u7cbe\u786e\u8868\u793a\u67d0\u4e9b\u5b9e\u6570\u3002\u4f8b\u5982\uff0c<code>0.1</code> \u5728\u6d6e\u70b9\u6570\u4e2d\u4e0d\u80fd\u88ab\u7cbe\u786e\u5b58\u50a8\uff0c\u4f1a\u4ea7\u751f\u5fae\u5c0f\u8bef\u5dee\u3002</li> <li>\u6ce8\u610f\u4e8b\u9879\uff1a\u8ba1\u7b97\u65f6\u907f\u514d\u76f4\u63a5\u6bd4\u8f83\u4e24\u4e2a\u6d6e\u70b9\u6570\uff0c\u4f7f\u7528\u8bef\u5dee\u8303\u56f4\u8fdb\u884c\u6bd4\u8f83\u66f4\u53ef\u9760\u3002</li> </ul>"},{"location":"csapp/lecture/01/#2-assembly","title":"2. \u4f60\u5fc5\u987b\u4e86\u89e3\u6c47\u7f16\u8bed\u8a00\uff08Assembly\uff09","text":"<ul> <li>\u91cd\u8981\u6027\uff1a<ul> <li>\u5373\u4f7f\u4e0d\u76f4\u63a5\u7f16\u5199\u6c47\u7f16\u8bed\u8a00\uff0c\u7406\u89e3\u5176\u539f\u7406\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u5730\u7406\u89e3\u7a0b\u5e8f\u7684\u5e95\u5c42\u8fd0\u884c\u673a\u5236\u3002</li> <li>\u7f16\u8bd1\u5668\u751f\u6210\u7684\u673a\u5668\u7801\u548c CPU \u6307\u4ee4\u4f18\u5316\u90fd\u4e0e\u6c47\u7f16\u8bed\u8a00\u5bc6\u5207\u76f8\u5173\u3002</li> </ul> </li> <li>\u7528\u9014\uff1a<ul> <li>\u5206\u6790\u6027\u80fd\u74f6\u9888\uff1a\u901a\u8fc7\u53cd\u6c47\u7f16\u4ee3\u7801\u53ef\u4ee5\u4e86\u89e3\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u3002</li> <li>\u8c03\u8bd5\u590d\u6742\u95ee\u9898\uff1a\u6709\u65f6\u9700\u8981\u901a\u8fc7\u6c47\u7f16\u7ea7\u522b\u5206\u6790\u7a0b\u5e8f\u884c\u4e3a\u3002</li> <li>\u7406\u89e3\u5185\u5b58\u5e03\u5c40\u548c\u6307\u9488\u64cd\u4f5c\uff1a\u8fd9\u4e9b\u90fd\u5728\u6c47\u7f16\u7ea7\u522b\u4f53\u73b0\u5f97\u66f4\u76f4\u89c2\u3002</li> </ul> </li> </ul>"},{"location":"csapp/lecture/01/#3-memory","title":"3. Memory \u5f88\u91cd\u8981","text":"<ul> <li>\u5185\u5b58\u7ba1\u7406\u4e0e\u4fdd\u62a4\uff1a<ul> <li>C \u548c C++ \u7f3a\u4e4f\u5185\u7f6e\u7684\u5185\u5b58\u4fdd\u62a4\u673a\u5236\uff0c\u5bb9\u6613\u51fa\u73b0 \u7f13\u51b2\u533a\u6ea2\u51fa\uff08Buffer Overflow\uff09 \u6216 \u60ac\u6302\u6307\u9488\uff08Dangling Pointer\uff09 \u7b49\u95ee\u9898\u3002</li> <li>\u7f16\u5199 C/C++ \u7a0b\u5e8f\u65f6\u9700\u7279\u522b\u5c0f\u5fc3\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\u3002</li> </ul> </li> <li>\u73b0\u4ee3\u8bed\u8a00\u7684\u6539\u8fdb\uff1a\u8bb8\u591a\u73b0\u4ee3\u8bed\u8a00\uff08\u5982 Java \u548c Python\uff09\u901a\u8fc7\u5783\u573e\u56de\u6536\uff08Garbage Collection\uff09\u548c\u5185\u5b58\u5b89\u5168\u68c0\u67e5\u907f\u514d\u4e86\u8fd9\u4e9b\u95ee\u9898\uff0c\u4f46\u4e86\u89e3\u5e95\u5c42\u5185\u5b58\u539f\u7406\u4f9d\u7136\u975e\u5e38\u91cd\u8981\u3002</li> </ul>"},{"location":"csapp/lecture/01/#4","title":"4. \u6027\u80fd\u4e0d\u4ec5\u4ec5\u662f\u6e10\u8fd1\u590d\u6742\u6027","text":""},{"location":"csapp/lecture/01/#asymptotic-complexity","title":"\u6e10\u8fd1\u590d\u6742\u6027\uff08Asymptotic Complexity\uff09\uff1a","text":"<ul> <li>\u5e38\u7528\u5927 O \u8868\u793a\u6cd5\u8bc4\u4f30\u7b97\u6cd5\u7684\u6027\u80fd\uff0c\u4f46\u5728\u5b9e\u9645\u573a\u666f\u4e2d\uff0c\u6027\u80fd\u4e0d\u4ec5\u4ec5\u7531\u6e10\u8fd1\u590d\u6742\u6027\u51b3\u5b9a\u3002</li> </ul>"},{"location":"csapp/lecture/01/#_1","title":"\u793a\u4f8b\uff1a\u6570\u7ec4\u7684\u8bbf\u95ee\u6a21\u5f0f","text":"<p>\u4ee5\u4e0b\u4e24\u6bb5\u4ee3\u7801\u529f\u80fd\u76f8\u540c\uff0c\u4f46\u6027\u80fd\u5dee\u5f02\u663e\u8457\uff1a</p> C<pre><code>for(int i = 0; i &lt; 1000; i++) {\n    for (int j = 0; j &lt; 1000; j++) {\n        arr[i][j] = 1;\n    }\n}\n</code></pre> C<pre><code>for(int j = 0; j &lt; 1000; j++) {\n    for (int i = 0; i &lt; 1000; i++) {\n        arr[i][j] = 1;\n    }\n}\n</code></pre> <ul> <li>\u524d\u8005\u7684\u6548\u7387\u66f4\u9ad8\uff1a\u56e0\u4e3a\u524d\u8005\u6309\u7167\u5185\u5b58\u7684\u8fde\u7eed\u5730\u5740\u8bbf\u95ee\uff08\u884c\u4f18\u5148\uff09\uff0c\u7b26\u5408 CPU \u7f13\u5b58\u7684\u8bfb\u53d6\u7279\u6027\u3002</li> <li>\u540e\u8005\u6548\u7387\u4f4e\u4e0b\uff1a\u5217\u4f18\u5148\u8bbf\u95ee\u4f1a\u5bfc\u81f4\u9891\u7e41\u7684\u7f13\u5b58\u672a\u547d\u4e2d\uff08Cache Miss\uff09\u3002</li> </ul>"},{"location":"csapp/lecture/01/#_2","title":"\u6027\u80fd\u4f18\u5316\u6ce8\u610f\u70b9\uff1a","text":"<ul> <li>\u6570\u636e\u7684\u5c40\u90e8\u6027\uff08Locality\uff09\u5bf9\u6027\u80fd\u7684\u5f71\u54cd\u5f88\u5927\u3002</li> <li>\u9664\u4e86\u7b97\u6cd5\u672c\u8eab\uff0c\u786c\u4ef6\u7279\u6027\uff08\u5982\u7f13\u5b58\u5c42\u6b21\u7ed3\u6784\u548c\u5185\u5b58\u5bf9\u9f50\uff09\u4e5f\u9700\u8981\u5173\u6ce8\u3002</li> </ul>"},{"location":"csapp/lecture/01/#5","title":"5. \u8ba1\u7b97\u673a\u4e0d\u4ec5\u4ec5\u6267\u884c\u7a0b\u5e8f","text":"<ul> <li> <p>\u591a\u529f\u80fd\u6027\uff1a\u8ba1\u7b97\u673a\u4e0d\u4ec5\u4ec5\u662f\u6267\u884c\u7a0b\u5e8f\u7684\u673a\u5668\uff0c\u5b83\u4eec\u8fd8\u652f\u6301\uff1a</p> <ul> <li>\u5e76\u884c\u5904\u7406\uff1a\u540c\u65f6\u5904\u7406\u591a\u4e2a\u4efb\u52a1\u6216\u7a0b\u5e8f\uff0c\u5145\u5206\u5229\u7528\u591a\u6838\u67b6\u6784\u3002</li> <li>\u865a\u62df\u5316\uff1a\u901a\u8fc7\u865a\u62df\u673a\u5b9e\u73b0\u8d44\u6e90\u9694\u79bb\u548c\u591a\u64cd\u4f5c\u7cfb\u7edf\u5171\u5b58\u3002</li> <li>\u786c\u4ef6\u52a0\u901f\uff1a\u5229\u7528 GPU\u3001FPGA \u7b49\u786c\u4ef6\u5355\u5143\u63d0\u5347\u7279\u5b9a\u4efb\u52a1\u7684\u6548\u7387\u3002</li> <li>\u7f51\u7edc\u4ea4\u4e92\uff1a\u5904\u7406\u5927\u91cf\u6570\u636e\u4ea4\u4e92\u548c\u901a\u4fe1\u4efb\u52a1\uff0c\u4f8b\u5982\u670d\u52a1\u5668\u8fd0\u884c HTTP \u8bf7\u6c42\u3002</li> <li> <p>\u542f\u53d1\uff1a</p> </li> <li> <p>\u7f16\u7a0b\u65f6\u4e0d\u4ec5\u8981\u5173\u6ce8\u4ee3\u7801\u903b\u8f91\uff0c\u8fd8\u9700\u8003\u8651\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u7279\u6027\u3002</p> </li> <li>\u5b66\u4e60\u4e86\u89e3\u786c\u4ef6\u548c\u7cfb\u7edf\u5c42\u9762\u77e5\u8bc6\uff0c\u6709\u52a9\u4e8e\u8bbe\u8ba1\u66f4\u9ad8\u6548\u7684\u7a0b\u5e8f\u3002</li> </ul> </li> </ul>"},{"location":"csapp/lecture/02/","title":"Lecture 02","text":"<ul> <li> <p>\u95ee\u9898\uff1a</p> <ol> <li>\u5f53\u4ed6\u4eec\u8bf4\u8fd9\u662f\u4e00\u4e2a64\u4e3a\u673a\u5668\u65f6\uff0c\u4ed6\u4eec\u771f\u6b63\u7684\u542b\u4e49\u662f\u8fd9\u4e9b\u5730\u5740\u662f64\u4f4d\u503c</li> <li>\u7528\u96c6\u5408\u7406\u89e3\u4f4d\u64cd\u4f5c\u662f\u4ec0\u4e48\u610f\u601d</li> </ol> </li> <li> <p>boolean algebra</p> <ul> <li>and or not exclusive-or</li> <li>p &amp;&amp; *p</li> <li>\u77ed\u8def\uff0c\u63d0\u524d\u7ec8\u6b62</li> </ul> </li> <li>Shift operations<ul> <li>\u5de6\u79fb\u4e0d\u7528\u7ba1</li> <li>log. \u548c arith.\u7684\u533a\u522b\u662f\u4ec0\u4e48</li> <li>x &lt;&lt; 8\u4e3a\u4ec0\u4e48\u662fx\u672c\u8eab\u800c\u4e0d\u662f0\uff0c\u4e3a\u4ec0\u4e48\u662fmod 8</li> </ul> </li> <li>Numeric Ranges<ul> <li>encoding integers<ul> <li>B2U(X)</li> <li>B2T(X)</li> </ul> </li> </ul> </li> </ul>"}]}