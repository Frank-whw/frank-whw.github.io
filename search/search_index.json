{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Welcome to Frank's Blog!  <p> GitHub | WeChat </p>"},{"location":"AI/","title":"AI","text":""},{"location":"AI/#ai","title":"AI","text":"<p>Abstract</p> <p>\u4eba\u5de5\u667a\u80fd\u5b66\u4e60\u7b14\u8bb0\u548c\u5b9e\u8df5\u7ecf\u9a8c\u3002</p> <p>.BEGIN_TOC at 0x7f9508f06de0&gt; - \"AI\":     - \"\u6df1\u5ea6\u5b66\u4e60\uff1a\u57fa\u4e8epython\u7684\u7406\u8bba\u548c\u5b9e\u73b0\": \u57fa\u4e8epython\u7684\u7406\u8bba\u548c\u5b9e\u73b0 .END_TOC at 0x7f9508f06e80&gt;</p>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/","title":"\u6df1\u5ea6\u5b66\u4e60\u5165\u95e8\uff1a\u57fa\u4e8epython\u7684\u7406\u8bba\u548c\u5b9e\u73b0","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#python","title":"\u6df1\u5ea6\u5b66\u4e60\u5165\u95e8\uff1a\u57fa\u4e8epython\u7684\u7406\u8bba\u548c\u5b9e\u73b0","text":"<p> \u7ea6 940 \u4e2a\u5b57  38 \u884c\u4ee3\u7801  20 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#1-python","title":"1. python\u5165\u95e8","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#11-numpy","title":"1.1 numpy","text":"<ul> <li>numpy\u662fpython\u7684\u4e00\u4e2a\u7b2c\u4e09\u65b9\u5e93\uff0c\u6709\u52a9\u4e8e\u6df1\u5ea6\u5b66\u4e60\u4e2d\u6570\u7ec4\u548c\u77e9\u9635\u7684\u8ba1\u7b97</li> <li><code>import numpy as np</code></li> <li>\u4e3b\u8981\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f\u5bf9\u5e94\u5143\u7d20\u505a\u8fd0\u7b97</li> <li>\u5e7f\u64ad\uff1a</li> <li> </li> <li>Python\u7b49\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u4e00\u822c\u6bd4C\u548cC++\u7b49\u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff08\u7f16\u8bd1\u578b\u8bed\u8a00\uff09 \u8fd0\u7b97\u901f\u5ea6\u6162\u3002</li> <li>\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u662f\u8fd0\u7b97\u91cf\u5927\u7684\u5904\u7406\u5bf9\u8c61\uff0c\u7528 C/C++\u5199\u7a0b\u5e8f\u66f4\u597d\u3002\u4e3a\u6b64\uff0c\u5f53 Python\u4e2d\u8ffd\u6c42\u6027\u80fd\u65f6\uff0c\u4eba\u4eec\u4f1a\u7528 C/C++\u6765\u5b9e\u73b0\u5904\u7406\u7684\u5185\u5bb9\u3002Python\u5219\u627f\u62c5\u201c\u4e2d\u95f4\u4eba\u201d\u7684\u89d2\u8272\uff0c\u8d1f\u8d23\u8c03\u7528\u90a3\u4e9b\u7528 C/ C++\u5199\u7684\u7a0b\u5e8f\u3002NumPy\u4e2d\uff0c\u4e3b\u8981\u7684\u5904\u7406\u4e5f\u90fd\u662f\u901a\u8fc7C\u6216C++\u5b9e\u73b0\u7684\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u635f\u5931\u6027\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528 Python\u4fbf\u5229\u7684\u8bed\u6cd5\u3002</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#12-matplotlib","title":"1.2 Matplotlib","text":"<ul> <li>\u7528\u4e8e\u56fe\u5f62\u7684\u53ef\u89c6\u5316</li> <li>pyplot\u7684\u529f\u80fd Python<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.arange(0, 6, 0.01)\ny1 = np.sin(x)\ny2 = np.cos(x)\n# print(x)\n# print(y)\nplt.plot(x, y1, label=\"sin\")\nplt.plot(x, y2, linestyle=\"--\", label=\"cos\")\nplt.xlabel(\"x\")\nplt.ylabel(\"y\")\nplt.title('sin &amp; cos')\nplt.legend()\nplt.show()\n</code></pre></li> <li>\u8fd0\u884c\u7ed3\u679c </li> <li>imshow()\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u8bfb\u5165\u56fe\u50cf Python<pre><code>import matplotlib.pyplot as plt\nfrom matplotlib.image import imread\nimg = imread('lena.png') # \u8bfb\u5165\u56fe\u50cf\nplt.imshow(img)\nplt.show()\n</code></pre></li> <li>\u8fd0\u884c\u7ed3\u679c</li> <li></li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#2","title":"2. \u611f\u77e5\u673a","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#21-what","title":"2.1 what","text":"<ul> <li> <p>\u63a5\u53d7\u591a\u4e2a\u4fe1\u53f7\uff0c\u8f93\u51fa\u4e00\u4e2a\u4fe1\u53f7 </p> </li> <li> <p>\u6709\u70b9\u6a21\u62df\u751f\u7269\u795e\u7ecf\u5143\u7684\u611f\u89c9</p> </li> <li>\u8f93\u5165\u4fe1\u53f7\u4e58\u4ee5\u5bf9\u5e94\u6743\u91cd\u7684\u603b\u548c\u8d85\u8fc7\u9608\u503c\u7684\u65f6\u5019 \u8f93\u51fa1\u2014\u2014\u795e\u7ecf\u5143\u88ab\u6fc0\u6d3b</li> <li></li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#22","title":"2.2 \u7b80\u5355\u903b\u8f91\u7535\u8def","text":"<ul> <li>\u4e0e\u300acode\u300b\u8fd9\u672c\u4e66\u4e0d\u540c\u7684\u5728\u4e8e\u672c\u7ae0\u4ee5\u611f\u77e5\u673a\u7684\u89d2\u5ea6\uff0c\u6216\u8005\u8bf4\u7528python\u4ee3\u7801\u7684\u5f62\u5f0f\u53bb\u5b9e\u73b0\u903b\u8f91\u95e8</li> <li>\u76f8\u540c\u6784\u9020\u7684\u611f\u77e5\u673a\uff0c\u53ea\u9700\u8981\u9002\u5f53\u5730\u8c03\u6574\u53c2\u6570\u7684\u503c\uff0c\u5c31\u53ef\u4ee5\u5728\u4e0e\u95e8\u3001\u4e0e\u975e\u95e8\u3001\u6216\u95e8\u4e4b\u95f4\u8f6c\u53d8</li> <li></li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#23","title":"2.3 \u611f\u77e5\u673a\u7684\u5b9e\u73b0","text":"<ul> <li>\u4e0e\u95e8 Python<pre><code>def AND(x1,x2):\n    x = np.array([x1, x2])\n    w = np.array([0.5, 0.5]) # w\u662f\u6743\u91cd\n    b = -0.7 # b\u79f0\u4e3a\u504f\u7f6e\n    tmp = np.sum(w * x) + b\n    return tmp &gt; 0 ? 1 : 0\n</code></pre></li> <li>\u800c\u6216\u95e8\u548c\u4e0e\u975e\u95e8\u7684\u5b9e\u73b0\uff0c\u4ec5\u9700\u6539\u53d8\u4e0a\u9762\u4ee3\u7801\u4e2dw\u548cb\u7684\u503c\u5373\u53ef</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#24","title":"2.4 \u611f\u77e5\u673a\u7684\u5c40\u9650","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#241","title":"2.4.1 \u5f02\u6216\u95e8","text":"<ul> <li>\u771f\u503c\u8868</li> <li> \u6240\u4ee5\u6211\u4eec\u80fd\u627e\u5230\u4e00\u7ec4w\u548cb\u7684\u503c\uff0c\u4f7f\u5f97\u7b80\u5355\u6539\u53d8\u4e0a\u9762\u4ee3\u7801\u5c31\u80fd\u5b9e\u73b0\u5f02\u6216\u95e8\u5417\uff1f</li> <li>\u627e\u4e0d\u5230\u3002\u4e3a\u4ec0\u4e48\u627e\u4e0d\u5230\u5462\uff1f\u901a\u8fc7\u753b\u56fe\u60f3\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u4e4b\u524d3\u4e2a\u95e8\u662f\u53ef\u4ee5\u7684\u3002</li> <li> </li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#242","title":"2.4.2 \u7ebf\u6027\u548c\u975e\u7ebf\u6027","text":"<ul> <li>\u611f\u77e5\u673a\u7684\u5c40\u9650\u5728\u4e8e\u5b83\u53ea\u80fd\u8868\u793a\u7531\u4e00\u6761\u76f4\u7ebf\u5206\u5272\u7684\u7a7a\u95f4</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#25","title":"2.5 \u591a\u91cd\u611f\u77e5\u673a","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#251","title":"2.5.1 \u5df2\u6709\u95e8\u7535\u8def\u7684\u7ec4\u5408","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#252","title":"2.5.2 \u5f02\u6216\u95e8\u7684\u5b9e\u73b0","text":"Python<pre><code>def XOR(x1, x2):\n    s1 = NAND(x1, x2)\n    s2 = OR(x1, x2)\n    y = AND(s1, s2)\n    return y\n</code></pre>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#26","title":"2.6 \u4ece\u4e0e\u975e\u95e8\u5230\u8ba1\u7b97\u673a","text":"<ul> <li>2\u5c42\u611f\u77e5\u673a\uff08\u4e25\u683c\u5730\u8bf4\u662f\u6fc0\u6d3b\u51fd\u6570\u4f7f\u7528\u4e86\u975e\u7ebf\u6027\u7684sigmoid\u51fd\u6570\u7684\u611f\u77e5\u673a\uff09\u53ef\u4ee5\u8868\u793a\u4efb\u610f\u51fd\u6570</li> <li>\u611f\u77e5\u673a\u901a\u8fc7\u53e0\u52a0\u5c42\u80fd\u591f\u8fdb\u884c\u975e\u7ebf\u6027\u7684\u8868\u793a\uff0c\u7406\u8bba\u4e0a\u8fd8\u53ef\u4ee5\u8868\u793a\u8ba1\u7b97\u673a\u8fdb\u884c\u7684\u5904\u7406</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#27","title":"2.7 \u5c0f\u7ed3","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#3","title":"3. \u795e\u7ecf\u7f51\u7edc","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#31","title":"3.1 \u4ece\u611f\u77e5\u673a\u5230\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#311","title":"3.1.1 \u795e\u7ecf\u7f51\u7edc\u7684\u4f8b\u5b50","text":"<p> - \u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u4fe1\u53f7\u5982\u4f55\u4f20\u9012\u5462\uff1f</p>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#312","title":"3.1.2 \u590d\u4e60\u611f\u77e5\u673a","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#313","title":"3.1.3 \u6fc0\u6d3b\u51fd\u6570","text":"<ul> <li>\u5c06\u8f93\u5165\u4fe1\u53f7\u7684\u603b\u548c\u8f6c\u6362\u4e3a\u8f93\u51fa\u4fe1\u53f7\u7684\u51fd\u6570\u6210\u4e3a\u6fc0\u6d3b\u51fd\u6570</li> <li>\u6bd4\u5982</li> <li> </li> <li>\u6fc0\u6d3b\u51fd\u6570\u662f\u8fde\u63a5\u611f\u77e5\u673a\u548c\u795e\u7ecf\u7f51\u7edc\u7684 \u6865\u6881\u3002</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#32","title":"3.2 \u6fc0\u6d3b\u51fd\u6570","text":"<ul> <li>\u611f\u77e5\u673a\u4f7f\u7528\u9636\u8dc3\u51fd\u6570\u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u4e0d\u540c\u4e8e\u795e\u7ecf\u7f51\u7edc\u4f7f\u7528\u7684</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#321-sigmoid","title":"3.2.1 sigmoid\u51fd\u6570","text":"<p> - \u7279\u70b9\u5728\u4e8e\u503c\u57df\u57280-1\u4e4b\u95f4\uff0c\u5173\u4e8e(0, 0.5)\u4e2d\u5fc3\u5bf9\u79f0</p>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#322","title":"3.2.2 \u9636\u8dc3\u51fd\u6570\u7684\u5b9e\u73b0","text":"Python<pre><code>def step_function(x):\n    y = x &gt; 0\n    return y.astype(np.int)\n</code></pre> - \u89e3\u91ca\uff1a<code>x &gt; 0</code> \u4f1a\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\u7684Numpy\u6570\u7ec4\uff0c\u800castype()\u53ef\u4ee5\u8f6c\u6362Numpy\u6570\u7ec4\u7684\u7c7b\u578b\u4e3a\u53c2\u6570\u6307\u5b9a\u671f\u671b\u7684\u7c7b\u578b"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#323","title":"3.2.3 \u9636\u8dc3\u51fd\u6570\u7684\u56fe\u50cf","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#324-sigmoid","title":"3.2.4 sigmoid\u51fd\u6570\u7684\u5b9e\u73b0","text":"Python<pre><code>def sigmoid(x):\n    return 1 / (1 + np.exp(-x))\n</code></pre>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#325-sigmoid","title":"3.2.5 sigmoid\u51fd\u6570\u548c\u9636\u8dc3\u51fd\u6570\u7684\u6bd4\u8f83","text":"<ul> <li>\u8fde\u7eed\u6027\u548c\u5e73\u6ed1\u6027</li> <li>sigmoid\u4f1a\u6839\u636e\u8f93\u5165\u4fe1\u53f7\u7684\u5927\u5c0f\u8c03\u6574\u8f93\u51fa\u4fe1\u53f7\u7684\u5927\u5c0f</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#326","title":"3.2.6 \u975e\u7ebf\u6027\u51fd\u6570","text":"<ul> <li>\u4e0a\u8ff0\u4e8c\u8005\u90fd\u662f\u975e\u7ebf\u6027\u51fd\u6570</li> <li>\u7ebf\u6027\u51fd\u6570\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u4e0d\u7ba1\u5982\u4f55\u52a0\u6df1\u5c42\u6570\uff0c\u603b\u662f\u5b58\u5728\u4e0e\u4e4b\u7b49\u6548\u7684\u201c\u65e0 \u9690\u85cf\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\u201d\u3002</li> </ul>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#327-relu","title":"3.2.7 ReLU\u51fd\u6570","text":"Python<pre><code>def relu(x):\n    return np.maximum(0, x)\n</code></pre>"},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#33","title":"3.3 \u591a\u7ef4\u6570\u7ec4\u7684\u8fd0\u7b97","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#331","title":"3.3.1 \u591a\u7ef4\u6570\u7ec4","text":""},{"location":"AI/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E7%90%86%E8%AE%BA%E5%92%8C%E5%AE%9E%E7%8E%B0/#332","title":"3.3.2 \u77e9\u9635\u4e58\u6cd5","text":"<ul> <li>np.dot(A, B) </li> </ul>"},{"location":"About/","title":"About","text":""},{"location":"About/#welcome","title":"Welcome\uff01","text":"<p> \u7ea6 17 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p> <p>\u4e00\u540d\u70ed\u7231\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u7f16\u7a0b\u7684\u5b66\u4e60\u8005\u3002</p>"},{"location":"Archives/","title":"\u535a\u5ba2\u5f52\u6863","text":""},{"location":"Archives/#_1","title":"\u535a\u5ba2\u5f52\u6863","text":"<p>{{ blog_content }}</p>"},{"location":"BlockChain/","title":"BlockChain","text":""},{"location":"BlockChain/#_1","title":"\u533a\u5757\u94fe","text":"<p>Abstract</p> <p>\u533a\u5757\u94fe\u6280\u672f\u5b66\u4e60\u7b14\u8bb0\u3002</p> <p>.BEGIN_TOC at 0x7f9508f06de0&gt; - \"BTC\":     - \"1.\u5bc6\u7801\u5b66\u539f\u7406\": \u533a\u5757\u94fe\u6280\u672f\u4e0e\u8fd0\u7528/BTC/1.\u5bc6\u7801\u5b66\u539f\u7406     - \"2.\u6570\u636e\u7ed3\u6784\": \u533a\u5757\u94fe\u6280\u672f\u4e0e\u8fd0\u7528/BTC/2.\u6570\u636e\u7ed3\u6784     - \"3.\u534f\u8bae\": \u533a\u5757\u94fe\u6280\u672f\u4e0e\u8fd0\u7528/BTC/3.\u534f\u8bae     - \"4.\u5b9e\u73b0\": \u533a\u5757\u94fe\u6280\u672f\u4e0e\u8fd0\u7528/BTC/4.\u5b9e\u73b0     - \"5.\u7f51\u7edc\": \u533a\u5757\u94fe\u6280\u672f\u4e0e\u8fd0\u7528/BTC/5.\u7f51\u7edc     - \"6.\u6316\u77ff\u96be\u5ea6\": \u533a\u5757\u94fe\u6280\u672f\u4e0e\u8fd0\u7528/BTC/6.\u6316\u77ff\u96be\u5ea6     - \"7.\u6316\u77ff\": \u533a\u5757\u94fe\u6280\u672f\u4e0e\u8fd0\u7528/BTC/7.\u6316\u77ff     - \"8.\u6bd4\u7279\u5e01\u811a\u672c\": \u533a\u5757\u94fe\u6280\u672f\u4e0e\u8fd0\u7528/BTC/8.\u6bd4\u7279\u5e01\u811a\u672c     - \"9.\u5206\u53c9\": \u533a\u5757\u94fe\u6280\u672f\u4e0e\u8fd0\u7528/BTC/9.\u5206\u53c9 .END_TOC at 0x7f9508f06e80&gt;</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/1.%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8E%9F%E7%90%86/","title":"1. \u5bc6\u7801\u5b66\u539f\u7406","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/1.%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8E%9F%E7%90%86/#1","title":"1. \u5bc6\u7801\u5b66\u539f\u7406","text":"<p> \u7ea6 1501 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>crypto - currency\uff08\u52a0\u5bc6\u8d27\u5e01\uff09\uff0c\u4f5c\u4e3a\u4e00\u79cd\u57fa\u4e8e\u5bc6\u7801\u5b66\u6280\u672f\u7684\u6570\u5b57\u8d27\u5e01\u5f62\u5f0f\uff0c\u5176\u80cc\u540e\u4f9d\u6258\u4e86\u591a\u79cd\u590d\u6742\u4e14\u7cbe\u5999\u7684\u5bc6\u7801\u5b66\u539f\u7406\uff0c\u786e\u4fdd\u4e86\u4ea4\u6613\u7684\u5b89\u5168\u6027\u3001\u4e0d\u53ef\u7be1\u6539\u6027\u4ee5\u53ca\u53bb\u4e2d\u5fc3\u5316\u7279\u6027\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/1.%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8E%9F%E7%90%86/#cryptographic-hash-function","title":"cryptographic hash function\uff08\u52a0\u5bc6\u54c8\u5e0c\u51fd\u6570\uff09","text":"<p>\u52a0\u5bc6\u54c8\u5e0c\u51fd\u6570\u5728\u533a\u5757\u94fe\u9886\u57df\u6709\u7740\u4e3e\u8db3\u8f7b\u91cd\u7684\u5730\u4f4d\uff0c\u5b83\u5177\u5907\u4ee5\u4e0b\u5173\u952e\u7279\u6027\uff1a</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/1.%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8E%9F%E7%90%86/#1-collision-resistance","title":"1. collision resistance\uff08\u6297\u78b0\u649e\u6027\uff09\uff1a","text":"<ul> <li>\u542b\u4e49\uff1a\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684\u8f93\u5165\u6570\u636e\uff0c\u54c8\u5e0c\u51fd\u6570\u5e94\u4ea7\u751f\u4e0d\u540c\u7684\u54c8\u5e0c\u503c\u3002\u5f88\u96be\u627e\u5230\u4e24\u4e2a\u4e0d\u540c\u7684\u8f93\u5165 x \u548c y\uff0c\u4f7f\u5f97 H (x) = H (y)\u3002\u4f8b\u5982\uff0cmd5 \u66fe\u662f\u5e7f\u6cdb\u4f7f\u7528\u7684\u54c8\u5e0c\u7b97\u6cd5\uff0c\u4f46\u540e\u6765\u88ab\u53d1\u73b0\u5b58\u5728\u78b0\u649e\u6f0f\u6d1e\uff0c\u5373\u80fd\u627e\u5230\u4e0d\u540c\u6570\u636e\u4ea7\u751f\u76f8\u540c md5 \u503c\u7684\u60c5\u51b5\uff0c\u8fd9\u5728\u5bf9\u5b89\u5168\u6027\u8981\u6c42\u6781\u9ad8\u7684\u533a\u5757\u94fe\u7b49\u573a\u666f\u4e2d\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002\u5c3d\u7ba1\u5b83\u66fe\u56e0\u8ba1\u7b97\u6548\u7387\u9ad8\u800c\u88ab\u5927\u91cf\u4f7f\u7528\uff0c\u4f46\u56e0\u5176\u6297\u78b0\u649e\u6027\u4e0d\u8db3\uff0c\u9010\u6e10\u88ab\u5f03\u7528\u3002</li> </ul>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/1.%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8E%9F%E7%90%86/#2-hiding","title":"2. hiding\uff08\u9690\u533f\u6027\uff0c\u5355\u5411\u4e0d\u53ef\u9006\uff09\uff1a","text":"<ul> <li> <p>\u539f\u7406\uff1a\u4ece\u54c8\u5e0c\u503c\u51e0\u4e4e\u65e0\u6cd5\u53cd\u5411\u63a8\u5bfc\u51fa\u539f\u59cb\u8f93\u5165\u6570\u636e\u3002\u5e76\u4e14\u8981\u6c42\u8f93\u5165\u7a7a\u95f4\u8db3\u591f\u5927\uff0c\u6570\u636e\u5206\u5e03\u5747\u5300\u3002\u5982\u679c\u8f93\u5165\u7a7a\u95f4\u5c0f\u6216\u5206\u5e03\u4e0d\u5747\u5300\uff0c\u653b\u51fb\u8005\u5c31\u6709\u53ef\u80fd\u901a\u8fc7\u86ee\u529b\u6c42\u5f97\u80fd\u4ea7\u751f\u7279\u5b9a\u54c8\u5e0c\u503c\u7684\u8f93\u5165\u3002</p> </li> <li> <p>\u5e94\u7528\uff1a</p> </li> <li> <p>digital commitment/digital equivalent of a sealed envelop\uff08\u6570\u5b57\u627f\u8bfa / \u5bc6\u5c01\u4fe1\u5c01\u7684\u6570\u5b57\u7b49\u4ef7\u7269\uff09\uff1a\u4f8b\u5982\u5728\u9884\u6d4b\u7c7b\u573a\u666f\u4e2d\uff0c\u9884\u6d4b\u7ed3\u679c\u4e0d\u80fd\u63d0\u524d\u516c\u5f00\u3002\u53ef\u4ee5\u5148\u5bf9\u9884\u6d4b\u7ed3\u679c\u8fdb\u884c\u54c8\u5e0c\u8fd0\u7b97\uff0c\u5c06\u54c8\u5e0c\u503c\u516c\u5f00\uff0c\u4e4b\u540e\u518d\u516c\u5f00\u539f\u59cb\u9884\u6d4b\u7ed3\u679c\uff0c\u5176\u4ed6\u4eba\u901a\u8fc7\u5bf9\u539f\u59cb\u7ed3\u679c\u8fdb\u884c\u54c8\u5e0c\u8ba1\u7b97\u5e76\u4e0e\u4e4b\u524d\u516c\u5f00\u7684\u54c8\u5e0c\u503c\u5bf9\u6bd4\uff0c\u5c31\u80fd\u9a8c\u8bc1\u7ed3\u679c\u7684\u4e00\u81f4\u6027\u548c\u672a\u88ab\u7be1\u6539\u3002</p> </li> <li> <p>\u6570\u5b57\u7b7e\u540d\uff1a\u628a\u9884\u6d4b\u7ed3\u679c\u4f5c\u4e3a\u8f93\u5165\uff0c\u901a\u8fc7\u7279\u5b9a\u7684\u54c8\u5e0c\u8fd0\u7b97\u5f97\u5230\u54c8\u5e0c\u503c\uff0c\u518d\u7528\u79c1\u94a5\u5bf9\u8be5\u54c8\u5e0c\u503c\u8fdb\u884c\u7b7e\u540d\u3002\u7b7e\u540d\u540e\u7684\u4fe1\u606f\u53ef\u7528\u4e8e\u9a8c\u8bc1\u6570\u636e\u6765\u6e90\u53ca\u5b8c\u6574\u6027\u3002</p> </li> <li> <p>H(x||nonce)\uff1a\u5728\u7ed3\u679c\u540e\u62fc\u63a5\u4e00\u4e2a\u968f\u673a\u503c nonce\u3002\u8fd9\u5e38\u7528\u4e8e\u533a\u5757\u94fe\u6316\u77ff\u7b49\u573a\u666f\uff0c\u901a\u8fc7\u6539\u53d8 nonce \u503c\uff0c\u4f7f\u54c8\u5e0c\u8fd0\u7b97\u7ed3\u679c\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u3002\u4f8b\u5982\u5728\u6bd4\u7279\u5e01\u6316\u77ff\u4e2d\uff0c\u901a\u8fc7\u4e0d\u65ad\u8c03\u6574 nonce \u6765\u4f7f\u533a\u5757\u5934\u7684\u54c8\u5e0c\u503c\u6ee1\u8db3\u4e00\u5b9a\u96be\u5ea6\u8981\u6c42\u3002</p> </li> </ul>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/1.%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8E%9F%E7%90%86/#3-puzzle-friendly","title":"3. puzzle friendly\uff08\u8c1c\u9898\u53cb\u597d\u6027\uff09\uff1a","text":"<ul> <li> <p>\u7279\u6027\uff1a\u54c8\u5e0c\u503c\u4e8b\u5148\u4e0d\u53ef\u9884\u6d4b\u3002\u5bf9\u4e8e\u4efb\u610f\u7ed9\u5b9a\u7684\u54c8\u5e0c\u503c\uff0c\u5728\u4e0d\u77e5\u9053\u8f93\u5165\u7684\u60c5\u51b5\u4e0b\uff0c\u65e0\u6cd5\u901a\u8fc7\u7279\u5b9a\u65b9\u6cd5\u5feb\u901f\u627e\u5230\u80fd\u4ea7\u751f\u8be5\u54c8\u5e0c\u503c\u7684\u8f93\u5165\u6570\u636e\u3002</p> </li> <li> <p>\u5e94\u7528\uff1a</p> </li> <li> <p>\u6316\u77ff\uff1a\u4ee5\u6bd4\u7279\u5e01\u6316\u77ff\u4e3a\u4f8b\uff0c\u77ff\u5de5\u9700\u8981\u627e nonce\uff0c\u4f7f\u5f97 H (block header) &lt;= target\uff08\u76ee\u6807\u503c\uff09\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6ca1\u6709\u6377\u5f84\uff0c\u53ea\u80fd\u5927\u91cf\u5730\u53bb\u5c1d\u8bd5\u4e0d\u540c\u7684 nonce \u503c\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684 proof of work\uff08\u5de5\u4f5c\u91cf\u8bc1\u660e\uff09\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4fdd\u8bc1\u4e86\u533a\u5757\u94fe\u7cfb\u7edf\u4e2d\u65b0\u533a\u5757\u751f\u6210\u7684\u516c\u5e73\u6027\u548c\u5b89\u5168\u6027\u3002</p> </li> <li> <p>difficult to solve, but easy to vertify\uff08\u6c42\u89e3\u56f0\u96be\uff0c\u4f46\u9a8c\u8bc1\u5bb9\u6613\uff09\uff1a\u77ff\u5de5\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684 nonce \u548c\u54c8\u5e0c\u503c\u540e\uff0c\u5176\u4ed6\u8282\u70b9\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u901a\u8fc7\u91cd\u65b0\u8ba1\u7b97\u54c8\u5e0c\u503c\u5e76\u4e0e\u76ee\u6807\u503c\u5bf9\u6bd4\u6765\u9a8c\u8bc1\u5176\u6b63\u786e\u6027\u3002</p> </li> <li> <p>SHA - 256\u2014\u2014secure hash algorithm\uff08\u5b89\u5168\u54c8\u5e0c\u7b97\u6cd5\uff09\uff1a\u662f\u6bd4\u7279\u5e01\u7b49\u533a\u5757\u94fe\u9879\u76ee\u5e7f\u6cdb\u4f7f\u7528\u7684\u54c8\u5e0c\u7b97\u6cd5\uff0c\u5177\u6709\u8f83\u9ad8\u7684\u5b89\u5168\u6027\u548c\u8ba1\u7b97\u6548\u7387\uff0c\u80fd\u6709\u6548\u4fdd\u8bc1\u533a\u5757\u94fe\u4e2d\u6570\u636e\u7684\u5b8c\u6574\u6027\u548c\u54c8\u5e0c\u8ba1\u7b97\u7684\u5b89\u5168\u6027\u3002</p> </li> </ul>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/1.%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8E%9F%E7%90%86/#_1","title":"\u7b7e\u540d","text":"<p>\u5728\u533a\u5757\u94fe\u7684\u53bb\u4e2d\u5fc3\u5316\u73af\u5883\u4e2d\uff0c\u7b7e\u540d\u673a\u5236\u662f\u786e\u4fdd\u4ea4\u6613\u5b89\u5168\u548c\u8eab\u4efd\u8ba4\u8bc1\u7684\u5173\u952e\u73af\u8282\uff1a</p> <ul> <li> <p>\u53bb\u4e2d\u5fc3\u5316\u7279\u6027\uff1a\u7b7e\u540d\u673a\u5236\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u4e2d\u5fc3\u5316\u7684\u673a\u6784\u6765\u9a8c\u8bc1\u8eab\u4efd\u6216\u6388\u6743\u4ea4\u6613\uff0c\u800c\u662f\u901a\u8fc7\u5bc6\u7801\u5b66\u539f\u7406\u5728\u7f51\u7edc\u8282\u70b9\u95f4\u5b9e\u73b0\u81ea\u6211\u9a8c\u8bc1\u3002</p> </li> <li> <p>\uff08public key\uff0cprivate key\uff09\uff08\u516c\u94a5\uff0c\u79c1\u94a5\uff09\uff1a\u8fd9\u662f\u57fa\u4e8e\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u4ea7\u751f\u7684\u4e00\u5bf9\u5bc6\u94a5\u3002</p> </li> <li> <p>asymmetric encryption algorithm\uff08\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff09\uff1a\u4f7f\u7528\u4e00\u5bf9\u5bc6\u94a5\uff0c\u5373\u516c\u94a5\u548c\u79c1\u94a5\u3002\u4e0e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u4e0d\u540c\uff0c\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u52a0\u5bc6\u548c\u89e3\u5bc6\u4f7f\u7528\u76f8\u540c\u7684\u5bc6\u94a5\uff0c\u800c\u5728\u975e\u5bf9\u79f0\u52a0\u5bc6\u4e2d\uff0c\u52a0\u5bc6\u7528\u516c\u94a5\uff0c\u89e3\u5bc6\u7528\u79c1\u94a5\u3002</p> </li> <li> <p>\u4f18\u52bf\uff1a\u516c\u94a5\u4e0d\u7528\u4fdd\u5bc6\uff0c\u53ef\u4ee5\u5e7f\u6cdb\u516c\u5f00\u4f20\u64ad\uff0c\u79c1\u94a5\u53ea\u8981\u4fdd\u5b58\u5728\u672c\u5730\uff0c\u6781\u5927\u5730\u89e3\u51b3\u4e86\u5bc6\u94a5\u5206\u53d1\u4e0d\u65b9\u4fbf\u7684\u95ee\u9898\u3002\u4f8b\u5982\u5728\u533a\u5757\u94fe\u7f51\u7edc\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u5c06\u81ea\u5df1\u7684\u516c\u94a5\u516c\u5f00\u7ed9\u5176\u4ed6\u8282\u70b9\uff0c\u7528\u4e8e\u63a5\u6536\u52a0\u5bc6\u4fe1\u606f\u6216\u9a8c\u8bc1\u7b7e\u540d\u3002</p> </li> <li> <p>\u7c7b\u6bd4\uff1a\u516c\u94a5\u76f8\u5f53\u4e8e\u94f6\u884c\u5361\u8d26\u53f7\uff0c\u53ef\u516c\u5f00\u793a\u4eba\u7528\u4e8e\u63a5\u6536\u8d44\u91d1\u7b49\u64cd\u4f5c\uff1b\u79c1\u94a5\u76f8\u5f53\u4e8e\u5bc6\u7801\uff0c\u5fc5\u987b\u4e25\u683c\u4fdd\u5bc6\uff0c\u53ea\u6709\u62e5\u6709\u79c1\u94a5\u7684\u4eba\u624d\u80fd\u5bf9\u76f8\u5173\u8d44\u4ea7\u8fdb\u884c\u64cd\u4f5c\u3002</p> </li> <li> <p>\u7b7e\u540d\u4e0e\u9a8c\u8bc1\uff1a\u7b7e\u540d\u662f\u7528\u79c1\u94a5\u5bf9\u6570\u636e\uff08\u901a\u5e38\u662f\u6570\u636e\u7684\u54c8\u5e0c\u503c\uff09\u8fdb\u884c\u5904\u7406\uff0c\u751f\u6210\u4e00\u4e2a\u7b7e\u540d\u4fe1\u606f\u3002\u9a8c\u8bc1\u65f6\u5219\u662f\u7528\u516c\u94a5\u5bf9\u7b7e\u540d\u4fe1\u606f\u8fdb\u884c\u9a8c\u8bc1\uff0c\u4ee5\u786e\u8ba4\u6570\u636e\u662f\u5426\u7531\u5bf9\u5e94\u7684\u79c1\u94a5\u6301\u6709\u8005\u53d1\u51fa\u4e14\u672a\u88ab\u7be1\u6539\u3002\u4f8b\u5982\u5728\u6bd4\u7279\u5e01\u4ea4\u6613\u4e2d\uff0c\u4ea4\u6613\u53d1\u8d77\u8005\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u4ea4\u6613\u4fe1\u606f\u8fdb\u884c\u7b7e\u540d\uff0c\u5176\u4ed6\u8282\u70b9\u6536\u5230\u4ea4\u6613\u540e\uff0c\u7528\u53d1\u8d77\u8005\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u4ece\u800c\u786e\u5b9a\u4ea4\u6613\u7684\u771f\u5b9e\u6027\u548c\u6709\u6548\u6027\u3002</p> </li> <li> <p>a good source of randomness\uff08\u826f\u597d\u7684\u968f\u673a\u6570\u6765\u6e90\uff09\uff1a\u79c1\u94a5\u7684\u751f\u6210\u901a\u5e38\u57fa\u4e8e\u968f\u673a\u6570\uff0c\u8fd9\u4e9b\u968f\u673a\u6570\u4e3a\u7b7e\u540d\u8fc7\u7a0b\u63d0\u4f9b\u4e86\u4e0d\u53ef\u9884\u6d4b\u6027\uff0c\u8fdb\u4e00\u6b65\u589e\u5f3a\u4e86\u7b7e\u540d\u7684\u5b89\u5168\u6027\u3002</p> </li> </ul> <p>\u6bd4\u7279\u5e01\u4e00\u822c\u662f\u5bf9 message \u5148\u54c8\u5e0c\uff0c\u7136\u540e\u518d\u7b7e\u540d\u3002\u8fd9\u662f\u56e0\u4e3a\u54c8\u5e0c\u503c\u5177\u6709\u56fa\u5b9a\u957f\u5ea6\u4e14\u80fd\u552f\u4e00\u4ee3\u8868\u539f\u59cb\u6d88\u606f\u7684\u7279\u5f81\uff0c\u5bf9\u54c8\u5e0c\u503c\u7b7e\u540d\u6bd4\u5bf9\u539f\u59cb\u6d88\u606f\u76f4\u63a5\u7b7e\u540d\u66f4\u9ad8\u6548\u4e14\u80fd\u4fdd\u8bc1\u6d88\u606f\u5b8c\u6574\u6027\u3002\u5982\u679c\u539f\u59cb\u6d88\u606f\u88ab\u7be1\u6539\uff0c\u5176\u54c8\u5e0c\u503c\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u800c\u57fa\u4e8e\u539f\u54c8\u5e0c\u503c\u7684\u7b7e\u540d\u5c06\u65e0\u6cd5\u901a\u8fc7\u9a8c\u8bc1\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","title":"2. \u6570\u636e\u7ed3\u6784","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#2","title":"2. \u6570\u636e\u7ed3\u6784","text":"<p> \u7ea6 1585 \u4e2a\u5b57  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#1-hash-pointers","title":"1. Hash Pointers\uff08\u54c8\u5e0c\u6307\u9488\uff09","text":"<p>\u54c8\u5e0c\u6307\u9488\u662f\u533a\u5757\u94fe\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u6982\u5ff5\uff0c\u5b83\u4e0d\u4ec5\u4fdd\u5b58\u4e86\u7ed3\u6784\u4f53\u7684\u5730\u5740\uff0c\u8fd8\u4fdd\u5b58\u4e86\u8be5\u7ed3\u6784\u4f53\u7684\u54c8\u5e0c\u503c\u3002\u8fd9\u4e00\u7279\u6027\u4f7f\u5f97\u54c8\u5e0c\u6307\u9488\u80fd\u591f\u68c0\u6d4b\u6570\u636e\u662f\u5426\u88ab\u7be1\u6539\u3002</p> <p>\u5728\u533a\u5757\u94fe\u4e2d\uff0c\u4e00\u4e2a\u4e2a\u7684\u533a\u5757\u901a\u8fc7\u54c8\u5e0c\u6307\u9488\u8fde\u63a5\u5f62\u6210\u94fe\u8868\u7ed3\u6784\u3002\u5176\u72ec\u7279\u4e4b\u5904\u5728\u4e8e\uff1a\u201cblock chain is a linked list using hash pointer\u201d\uff08\u533a\u5757\u94fe\u662f\u4f7f\u7528\u54c8\u5e0c\u6307\u9488\u7684\u94fe\u8868\uff09\uff0c\u4ece\u521b\u4e16\u533a\u5757\uff08genesis block\uff09\u5f00\u59cb\uff0c\u4e00\u76f4\u8fde\u63a5\u5230\u6700\u65b0\u7684\u533a\u5757\uff08most recent block\uff09\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#-tamper-evident-log","title":"\u597d\u5904 - Tamper - Evident Log\uff08\u9632\u7be1\u6539\u65e5\u5fd7\uff09","text":"<p>\u8fd9\u79cd\u57fa\u4e8e\u54c8\u5e0c\u6307\u9488\u7684\u94fe\u8868\u7ed3\u6784\u5f62\u6210\u4e86\u4e00\u79cd\u9632\u7be1\u6539\u65e5\u5fd7\u3002\u56e0\u4e3a\u6bcf\u4e2a\u533a\u5757\u7684\u54c8\u5e0c\u6307\u9488\u4e0d\u4ec5\u6307\u5411\u4e86\u524d\u4e00\u4e2a\u533a\u5757\u7684\u5730\u5740\uff0c\u8fd8\u5305\u542b\u524d\u4e00\u4e2a\u533a\u5757\u5185\u5bb9\u7684\u54c8\u5e0c\u503c\u3002\u5982\u679c\u5bf9\u524d\u9762\u4efb\u4f55\u4e00\u4e2a\u533a\u5757\u7684\u5185\u5bb9\u8fdb\u884c\u7be1\u6539\uff0c\u8be5\u533a\u5757\u7684\u54c8\u5e0c\u503c\u5c31\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u7531\u4e8e\u540e\u7eed\u533a\u5757\u7684\u54c8\u5e0c\u6307\u9488\u4f9d\u8d56\u4e8e\u524d\u5e8f\u533a\u5757\u7684\u54c8\u5e0c\u503c\uff0c\u6240\u4ee5\u524d\u9762\u533a\u5757\u7684\u4efb\u4f55\u6539\u52a8\u90fd\u4f1a\u5bfc\u81f4\u540e\u9762\u6240\u6709\u533a\u5757\u7684\u54c8\u5e0c\u6307\u9488\u53d1\u751f\u53d8\u5316\uff0c\u6b63\u6240\u8c13 \u201c\u7275\u4e00\u53d1\u800c\u52a8\u5168\u8eab\u201d\u3002\u8fd9\u6837\uff0c\u533a\u5757\u94fe\u4e2d\u7684\u6570\u636e\u4e00\u65e6\u88ab\u8bb0\u5f55\uff0c\u5c31\u5f88\u96be\u88ab\u7be1\u6539\u800c\u4e0d\u88ab\u53d1\u73b0\uff0c\u4fdd\u8bc1\u4e86\u6570\u636e\u7684\u5b8c\u6574\u6027\u548c\u53ef\u4fe1\u5ea6\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#2-merkle-tree","title":"2. Merkle Tree\uff08\u9ed8\u514b\u5c14\u6811\uff09","text":"<p>\u9ed8\u514b\u5c14\u6811\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u4e8c\u53c9\u6811\u7ed3\u6784\uff0c\u4e0e\u666e\u901a\u4e8c\u53c9\u6811\u7684\u533a\u522b\u5728\u4e8e\u5b83\u4f7f\u7528\u54c8\u5e0c\u6307\u9488\u4ee3\u66ff\u666e\u901a\u6307\u9488\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_1","title":"\u7ed3\u6784\u4e0e\u539f\u7406","text":"<p>\u5982\u7ed9\u5b9a\u7684\u56fe\u7247 </p> <p>\u6240\u793a\uff0c\u9ed8\u514b\u5c14\u6811\u7684\u5e95\u5c42\u8282\u70b9\uff08data blocks\uff09\u901a\u5e38\u662f\u4ea4\u6613\uff08tx\uff09\uff0c\u53ef\u4ee5\u662f\u5757\u5934\u6216\u8005\u5757\u8eab\u3002\u5176\u4e2d\uff0c\u5757\u5934\uff08block header\uff09\u5305\u542b\u6839\u54c8\u5e0c\u503c\uff0c\u4f46\u4e0d\u5305\u542b\u4ea4\u6613\u7684\u5177\u4f53\u5185\u5bb9\uff1b\u5757\u8eab\uff08block body\uff09\u5219\u5305\u542b\u4ea4\u6613\u7684\u5217\u8868\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#-","title":"\u597d\u5904 - \u6570\u636e\u5b8c\u6574\u6027\u68c0\u6d4b","text":"<p>\u9ed8\u514b\u5c14\u6811\u6700\u5927\u7684\u597d\u5904\u5728\u4e8e\uff0c\u53ea\u8981\u77e5\u9053\u6839\u54c8\u5e0c\uff08root hash\uff09\uff0c\u5c31\u80fd\u68c0\u6d4b\u51fa\u4e0b\u9762\u4efb\u4f55\u90e8\u5206\u662f\u5426\u53d1\u751f\u53d8\u5316\u3002\u56e0\u4e3a\u9ed8\u514b\u5c14\u6811\u7684\u6784\u5efa\u65b9\u5f0f\u662f\u5c06\u5e95\u5c42\u8282\u70b9\u7684\u54c8\u5e0c\u503c\u4e24\u4e24\u7ec4\u5408\u518d\u8fdb\u884c\u54c8\u5e0c\u8ba1\u7b97\uff0c\u9010\u5c42\u5411\u4e0a\uff0c\u6700\u7ec8\u5f97\u5230\u6839\u54c8\u5e0c\u3002\u5982\u679c\u5e95\u5c42\u4efb\u4f55\u4e00\u4e2a\u6570\u636e\u5757\uff08\u4ea4\u6613\uff09\u53d1\u751f\u6539\u53d8\uff0c\u5176\u54c8\u5e0c\u503c\u5c31\u4f1a\u6539\u53d8\uff0c\u8fdb\u800c\u5bfc\u81f4\u4e0a\u5c42\u8282\u70b9\u7684\u54c8\u5e0c\u503c\u4e5f\u4f9d\u6b21\u6539\u53d8\uff0c\u6700\u7ec8\u6839\u54c8\u5e0c\u503c\u4e5f\u4f1a\u4e0d\u540c\u3002\u6240\u4ee5\u901a\u8fc7\u5bf9\u6bd4\u5f53\u524d\u6839\u54c8\u5e0c\u503c\u4e0e\u4e4b\u524d\u8bb0\u5f55\u7684\u6839\u54c8\u5e0c\u503c\uff0c\u5c31\u80fd\u5224\u65ad\u5e95\u5c42\u6570\u636e\u662f\u5426\u88ab\u7be1\u6539\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#merkle-proof","title":"Merkle Proof\uff08\u9ed8\u514b\u5c14\u8bc1\u660e\uff09","text":"<p>\u9ed8\u514b\u5c14\u6811\u63d0\u4f9b\u4e86\u9ed8\u514b\u5c14\u8bc1\u660e\u673a\u5236\u3002\u5728\u6bd4\u7279\u5e01\uff08BTC\uff09\u4e2d\uff0c\u8282\u70b9\u5206\u4e3a\u4e24\u7c7b\uff1a\u5168\u8282\u70b9\u548c\u8f7b\u8282\u70b9\u3002\u5168\u8282\u70b9\u4fdd\u5b58\u4e86\u5b8c\u6574\u7684\u533a\u5757\u94fe\u6570\u636e\uff0c\u5305\u62ec\u6240\u6709\u7684\u533a\u5757\u5934\u548c\u533a\u5757\u4f53\uff1b\u800c\u8f7b\u8282\u70b9\u53ea\u4fdd\u5b58\u4e00\u4e2a\u533a\u5757\u5934\uff08block header\uff09\u3002</p> <p>\u8f7b\u8282\u70b9\u76f8\u5f53\u4e8e\u624b\u673a\u4e0a\u7684\u6bd4\u7279\u5e01\u5ba2\u6237\u7aef\uff0c\u7528\u6237\u901a\u8fc7\u8f7b\u8282\u70b9\u53d1\u9001\u4ea4\u6613\u4fe1\u606f\uff08tx\uff09\u3002\u7531\u4e8e\u8f7b\u8282\u70b9\u6ca1\u6709\u5b8c\u6574\u7684\u4ea4\u6613\u6570\u636e\uff0c\u6240\u4ee5\u5b83\u4f1a\u5411\u5168\u8282\u70b9\u8bf7\u6c42\u9a8c\u8bc1\u3002\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\uff0c\u8f7b\u8282\u70b9\u901a\u8fc7\u4e00\u5c42\u4e00\u5c42\u7684 SPV\uff08Simple Payment Verification\uff0c\u7b80\u5355\u652f\u4ed8\u9a8c\u8bc1\uff09\uff0c\u672c\u5730\u8ba1\u7b97\u90e8\u5206\u54c8\u5e0c\u503c\uff0c\u5e76\u5411\u5168\u8282\u70b9\u8bf7\u6c42\u5f97\u5230\u5176\u4ed6\u54c8\u5e0c\u503c\uff0c\u7136\u540e\u5411\u4e0a\u4e00\u76f4\u8ba1\u7b97\u5230\u6839\u54c8\u5e0c\uff0c\u6700\u540e\u5c06\u8ba1\u7b97\u5f97\u5230\u7684\u6839\u54c8\u5e0c\u4e0e\u81ea\u5df1\u4fdd\u5b58\u7684\u533a\u5757\u5934\u4e2d\u7684\u6839\u54c8\u5e0c\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u4ee5\u6b64\u5224\u65ad\u8be5\u4ea4\u6613\u662f\u5426\u88ab\u8bb0\u5f55\u5728\u533a\u5757\u94fe\u4e0a\u3002\u8f7b\u8282\u70b9\u5728\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\uff0c\u53ea\u80fd\u67e5\u8be2\u5230\u4e0e\u8be5\u4ea4\u6613\u76f8\u5173\u8def\u5f84\u4e2d\u7684\u54c8\u5e0c\u503c\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_2","title":"\u5b89\u5168\u6027\u5206\u6790","text":"<ol> <li>\u5173\u4e8e\u7be1\u6539\u8bc1\u660e\u6570\u636e\uff1a\u6709\u4eba\u53ef\u80fd\u4f1a\u60f3\uff0c\u80fd\u5426\u4e3a\u4e86\u8bc1\u660e\u81ea\u5df1\u7684\u4ea4\u6613\u5df2\u8bb0\u5f55\u5728\u533a\u5757\u94fe\u4e0a\uff0c\u5374\u53c8\u7be1\u6539\u8bc1\u660e\u8fc7\u7a0b\u4e2d\u9700\u8981\u7528\u5230\u7684\u5176\u4ed6\u4ea4\u6613\uff0c\u5bfc\u81f4\u8bc1\u660e\u5931\u8d25\u3002\u5b9e\u9645\u4e0a\u8fd9\u79cd\u505a\u6cd5\u662f\u4e0d\u53ef\u884c\u7684\u3002\u56e0\u4e3a\u5728\u9ed8\u514b\u5c14\u6811\u7ed3\u6784\u4e0b\uff0c\u82e5\u8981\u4fee\u6539\u67d0\u4e2a\u8282\u70b9\u6570\u636e\u4ee5\u8fbe\u5230\u7be1\u6539\u8bc1\u660e\u7684\u76ee\u7684\uff0c\u4e0d\u4ec5\u9700\u8981\u4fee\u6539\u8be5\u8282\u70b9\u672c\u8eab\uff0c\u8fd8\u9700\u8981\u4fee\u6539\u5176\u4e0a\u5c42\u6240\u6709\u4f9d\u8d56\u8be5\u8282\u70b9\u54c8\u5e0c\u503c\u7684\u8282\u70b9\uff0c\u76f4\u81f3\u6839\u8282\u70b9\u3002\u8fd9\u610f\u5473\u7740\u51e0\u4e4e\u8981\u4fee\u6539\u6574\u68f5\u6811\uff0c\u751a\u81f3\u5f71\u54cd\u5230\u6574\u6761\u533a\u5757\u94fe\uff0c\u4ece\u7b97\u529b\u6d88\u8017\u4e0a\u6765\u8bf4\u662f\u4e0d\u73b0\u5b9e\u7684\u3002</li> <li>\u5f71\u54cd\u8bc1\u660e\u6b63\u786e\u6027\u7684\u56e0\u7d20\uff1a\u5728\u4e0a\u8ff0\u6761\u4ef6\u4e0b\uff0c\u6240\u63d0\u4f9b\u7684\u9ed8\u514b\u5c14\u8bc1\u660e\u4e2d\u8f85\u52a9\u54c8\u5e0c\u503c\u5fc5\u7136\u662f\u6b63\u786e\u7684\u3002\u56e0\u4e3a\u5728\u6b63\u5e38\u7684\u533a\u5757\u94fe\u7f51\u7edc\u4e2d\uff0c\u5168\u8282\u70b9\u4fdd\u5b58\u7684\u662f\u5b8c\u6574\u4e14\u6b63\u786e\u7684\u6570\u636e\uff0c\u8f7b\u8282\u70b9\u4ece\u5168\u8282\u70b9\u83b7\u53d6\u7684\u54c8\u5e0c\u503c\u4e5f\u662f\u53ef\u4fe1\u7684\u3002\u6240\u4ee5\u552f\u4e00\u53ef\u80fd\u5f71\u54cd\u8bc1\u660e\u6b63\u786e\u6027\u7684\u56e0\u7d20\u5c31\u662f\u9a8c\u8bc1\u8282\u70b9\uff08\u8f7b\u8282\u70b9\uff09\u672c\u8eab\uff0c\u4f8b\u5982\u5176\u8f6f\u4ef6\u5b9e\u73b0\u662f\u5426\u6b63\u786e\u3001\u8ba1\u7b97\u8fc7\u7a0b\u662f\u5426\u6709\u8bef\u7b49\u3002</li> </ol>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_3","title":"\u6210\u5458\u8bc1\u660e\u4e0e\u975e\u6210\u5458\u8bc1\u660e","text":"<ol> <li>Proof of Membership\uff08\u6210\u5458\u8bc1\u660e\uff09/Proof of Inclusion\uff08\u5305\u542b\u8bc1\u660e\uff09\uff1a\u901a\u8fc7\u9ed8\u514b\u5c14\u8bc1\u660e\u53ef\u4ee5\u9ad8\u6548\u5730\u9a8c\u8bc1\u67d0\u4e2a\u4ea4\u6613\u662f\u5426\u5305\u542b\u5728\u533a\u5757\u94fe\u4e2d\u3002\u7531\u4e8e\u9ed8\u514b\u5c14\u6811\u662f\u4e8c\u53c9\u6811\u7ed3\u6784\uff0c\u4ece\u53f6\u5b50\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u4e3a log (n)\uff08n \u4e3a\u53f6\u5b50\u8282\u70b9\u7684\u6570\u91cf\uff09\uff0c\u6240\u4ee5\u9a8c\u8bc1\u8fc7\u7a0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a log (n)\uff0c\u76f8\u5bf9\u6bd4\u8f83\u9ad8\u6548\u3002</li> <li>Proof of Non - Membership\uff08\u975e\u6210\u5458\u8bc1\u660e\uff09\uff1a\u5bf9\u4e8e\u8bc1\u660e\u67d0\u4e2a\u4ea4\u6613\u4e0d\u5728\u9ed8\u514b\u5c14\u6811\u4e2d\uff0c\u4f20\u7edf\u9ed8\u514b\u5c14\u6811\u7684\u9a8c\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a n\uff0c\u5448\u7ebf\u6027\u5173\u7cfb\u3002\u4f46\u662f\uff0c\u5982\u679c\u8282\u70b9\u662f\u6839\u636e\u54c8\u5e0c\u503c\u6392\u597d\u5e8f\u7684\uff08\u5373 sorted merkle tree\uff0c\u6392\u5e8f\u9ed8\u514b\u5c14\u6811\uff09\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u5224\u65ad\u67d0\u4e2a\u8282\u70b9\u7684\u54c8\u5e0c\u503c\u5728\u6392\u5e8f\u4e2d\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5b83\u65c1\u8fb9\u8282\u70b9\u662f\u5426\u76f8\u90bb\uff0c\u6765\u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u5728\u8fd9\u4e2a\u6811\u4e2d\u3002\u4e0d\u8fc7\u5728\u6bd4\u7279\u5e01\u7684\u9ed8\u514b\u5c14\u6811\u4e2d\uff0c\u5e76\u4e0d\u8981\u6c42\u8282\u70b9\u8fdb\u884c\u6392\u5e8f\u3002</li> </ol>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_4","title":"\u54c8\u5e0c\u6307\u9488\u7684\u5e94\u7528\u9650\u5236","text":"<p>\u54c8\u5e0c\u6307\u9488\u867d\u7136\u5728\u533a\u5757\u94fe\u6570\u636e\u7ed3\u6784\u4e2d\u6709\u8bf8\u591a\u4f18\u52bf\uff0c\u4f46\u5b83\u7684\u5e94\u7528\u573a\u666f\u5b58\u5728\u4e00\u5b9a\u9650\u5236\u3002\u4f8b\u5982\uff0c\u54c8\u5e0c\u6307\u9488\u53ea\u80fd\u7528\u5728\u65e0\u73af\u7684\u5217\u8868\u7ed3\u6784\u4e2d\u3002\u5982\u679c\u662f\u6709\u73af\u7ed3\u6784\uff0c\u4f1a\u51fa\u73b0\u5faa\u73af\u4f9d\u8d56\u7684\u95ee\u9898\uff0c\u5bfc\u81f4\u54c8\u5e0c\u503c\u8ba1\u7b97\u65e0\u6cd5\u6b63\u5e38\u5b8c\u6210\uff0c\u7834\u574f\u4e86\u54c8\u5e0c\u6307\u9488\u57fa\u4e8e\u6570\u636e\u5b8c\u6574\u6027\u548c\u987a\u5e8f\u6027\u7684\u68c0\u6d4b\u673a\u5236\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/3.%E5%8D%8F%E8%AE%AE/","title":"3. \u534f\u8bae","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/3.%E5%8D%8F%E8%AE%AE/#3","title":"3. \u534f\u8bae","text":"<p> \u7ea6 3169 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 16 \u5206\u949f</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/3.%E5%8D%8F%E8%AE%AE/#_1","title":"\u65b9\u6848\u63a2\u8ba8\u4e0e\u95ee\u9898\u5206\u6790","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/3.%E5%8D%8F%E8%AE%AE/#_2","title":"\u65b9\u6848\u4e00\uff1a\u516c\u79c1\u94a5\u975e\u5bf9\u79f0\u52a0\u5bc6","text":"<p>\u91c7\u7528\u516c\u79c1\u94a5\u975e\u5bf9\u79f0\u52a0\u5bc6\u6280\u672f\uff0c\u867d\u80fd\u4fdd\u969c\u4ea4\u6613\u7684\u5b89\u5168\u6027\uff0c\u4f46\u5728\u6570\u5b57\u8d27\u5e01\u573a\u666f\u4e0b\u5b58\u5728\u4e25\u91cd\u95ee\u9898\u3002\u6570\u5b57\u8d27\u5e01\u672c\u8d28\u4e0a\u662f\u6570\u5b57\u5316\u4fe1\u606f\uff0c\u5177\u6709\u53ef\u590d\u5236\u6027\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86 \u201c\u82b1 2 \u6b21\u653b\u51fb\uff08double spending attack\uff09\u201d\uff0c\u5373\u53cc\u82b1\u653b\u51fb\u3002\u653b\u51fb\u8005\u6709\u53ef\u80fd\u5229\u7528\u6570\u5b57\u8d27\u5e01\u7684\u53ef\u590d\u5236\u7279\u6027\uff0c\u5c06\u540c\u4e00\u7b14\u6570\u5b57\u8d44\u4ea7\u8fdb\u884c\u591a\u6b21\u82b1\u8d39\uff0c\u7834\u574f\u4e86\u8d27\u5e01\u4ea4\u6613\u7684\u552f\u4e00\u6027\u548c\u4ef7\u503c\u7a33\u5b9a\u6027\u3002\u56e0\u6b64\uff0c\u6570\u5b57\u8d27\u5e01\u5fc5\u987b\u9632\u8303\u53cc\u82b1\u653b\u51fb\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/3.%E5%8D%8F%E8%AE%AE/#_3","title":"\u65b9\u6848\u4e8c\uff1a\u4e2d\u5fc3\u5316\u5b58\u50a8","text":"<p>\u8be5\u65b9\u6848\u901a\u8fc7\u8bbe\u7acb\u4e00\u4e2a\u4e2d\u5fc3\u5316\u7684\u6570\u636e\u5e93\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u6807\u53f7\u7684\u8d27\u5e01\u5f52\u5c5e\uff0c\u5373\u8bb0\u5f55\u6bcf\u4e00\u7b14\u94b1\u5728\u8c01\u624b\u4e0a\u3002\u4ece\u7406\u8bba\u5c42\u9762\u770b\uff0c\u8fd9\u79cd\u65b9\u5f0f\u80fd\u591f\u89e3\u51b3\u53cc\u82b1\u95ee\u9898\uff0c\u56e0\u4e3a\u4e2d\u5fc3\u5316\u6570\u636e\u5e93\u53ef\u4ee5\u7edf\u4e00\u7ba1\u7406\u548c\u9a8c\u8bc1\u6bcf\u4e00\u7b14\u4ea4\u6613\uff0c\u786e\u4fdd\u8d27\u5e01\u7684\u552f\u4e00\u6027\u3002\u7136\u800c\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u8fd9\u79cd\u65b9\u6cd5\u8fc7\u4e8e\u7e41\u7410\uff0c\u9700\u8981\u4e00\u4e2a\u5f3a\u5927\u7684\u4e2d\u5fc3\u673a\u6784\u6765\u7ef4\u62a4\u6570\u636e\u5e93\uff0c\u4e14\u5bb9\u6613\u5f15\u53d1\u4fe1\u4efb\u95ee\u9898\uff0c\u4f8b\u5982\u4e2d\u5fc3\u673a\u6784\u53ef\u80fd\u5b58\u5728\u6570\u636e\u7be1\u6539\u3001\u5355\u70b9\u6545\u969c\u7b49\u98ce\u9669\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/3.%E5%8D%8F%E8%AE%AE/#_4","title":"\u65b9\u6848\u4e09\uff1a\u53bb\u4e2d\u5fc3\u5316","text":"<p>\u53bb\u4e2d\u5fc3\u5316\u65b9\u6848\u65e8\u5728\u6784\u5efa\u4e00\u4e2a\u65e0\u9700\u4f9d\u8d56\u4e2d\u5fc3\u5316\u673a\u6784\u7684\u6570\u5b57\u8d27\u5e01\u7cfb\u7edf\uff0c\u4f46\u9762\u4e34\u7740\u4e24\u4e2a\u5173\u952e\u95ee\u9898\uff1a 1. \u8d27\u5e01\u53d1\u884c\u95ee\u9898\uff1a\u5728\u6bd4\u7279\u5e01\uff08BTC\uff09\u7cfb\u7edf\u4e2d\uff0c\u8d27\u5e01\u53d1\u884c\u7531\u6316\u77ff\u673a\u5236\u51b3\u5b9a\u3002\u6316\u77ff\u8fc7\u7a0b\u4e0d\u4ec5\u4ec5\u662f\u7b80\u5355\u7684\u8ba1\u7b97\u64cd\u4f5c\uff0c\u5b83\u8fd8\u627f\u62c5\u7740\u53d1\u884c\u65b0\u6bd4\u7279\u5e01\u7684\u91cd\u8981\u804c\u8d23\u3002 2. \u53cc\u82b1\u653b\u51fb\u9632\u8303\u95ee\u9898\uff1a\u6bd4\u7279\u5e01\u901a\u8fc7\u6240\u6709\u7528\u6237\u5171\u540c\u7ef4\u62a4\u533a\u5757\u94fe\u6765\u89e3\u51b3\u53cc\u82b1\u95ee\u9898\u3002\u533a\u5757\u94fe\u662f\u4e00\u79cd\u5206\u5e03\u5f0f\u8d26\u672c\uff0c\u6bcf\u4e2a\u53c2\u4e0e\u8005\uff08\u8282\u70b9\uff09\u90fd\u4fdd\u5b58\u4e86\u8d26\u672c\u7684\u526f\u672c\uff0c\u901a\u8fc7\u5171\u8bc6\u673a\u5236\u786e\u4fdd\u6240\u6709\u8d26\u672c\u526f\u672c\u7684\u4e00\u81f4\u6027\uff0c\u4ece\u800c\u6709\u6548\u9632\u8303\u53cc\u82b1\u653b\u51fb\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/3.%E5%8D%8F%E8%AE%AE/#_5","title":"\u6bd4\u7279\u5e01\u4ea4\u6613\u793a\u4f8b\u4e0e\u7ed3\u6784\u5206\u6790","text":"<p>\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a\u7b80\u5355\u7684\u6bd4\u7279\u5e01\u4ea4\u6613\u6d41\u7a0b\u4e2d\uff1a - \u94f8\u5e01\u4ea4\u6613\uff08creatCoint\uff09\uff1a\u4ea7\u751f\u521d\u59cb\u7684\u6bd4\u7279\u5e01\uff0c\u5982\u00a0<code>creatCoint -&gt; A(10)</code>\uff0c\u8fd9\u662f\u4e00\u4e2a coinbase tx\uff08\u521b\u5e01\u4ea4\u6613\uff09\uff0c\u5176\u4e2d\u5305\u542b\u4e86 A \u7684\u516c\u94a5\u7684\u54c8\u5e0c\u3002\u8fd9\u610f\u5473\u7740 A \u83b7\u5f97\u4e86 10 \u4e2a\u6bd4\u7279\u5e01\uff0c\u4e14\u8fd9\u7b14\u4ea4\u6613\u4f5c\u4e3a\u6bd4\u7279\u5e01\u7684\u521d\u59cb\u6765\u6e90\uff0c\u5f00\u542f\u4e86\u540e\u7eed\u7684\u6d41\u8f6c\u3002 - \u540e\u7eed\u4ea4\u6613\uff1a     - <code>A -&gt; B(5)</code>\uff0c<code>A -&gt; C(5)</code>\uff0c\u8fd9\u4e24\u7b14\u4ea4\u6613\u7531 A \u53d1\u8d77\uff0c\u5e76\u7531 A \u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u8fdb\u884c\u7b7e\u540d\u3002\u7b7e\u540d\u7684\u76ee\u7684\u662f\u8bc1\u660e\u4ea4\u6613\u7684\u771f\u5b9e\u6027\u548c A \u7684\u6388\u6743\uff0c\u5176\u4ed6\u8282\u70b9\u53ef\u4ee5\u4f7f\u7528 A \u7684\u516c\u94a5\u6765\u9a8c\u8bc1\u7b7e\u540d\u7684\u6709\u6548\u6027\u3002     - <code>B -&gt; C(2)</code>\uff0c<code>B -&gt; D(3)</code>\uff0c\u540c\u6837\u7531 B \u7528\u79c1\u94a5\u7b7e\u540d\uff0c\u8868\u660e B \u5bf9\u8fd9\u4e24\u7b14\u4ea4\u6613\u7684\u6388\u6743\u3002     - <code>C -&gt; E(7)</code>\uff0c\u7531 C \u7b7e\u540d\uff0c\u5c55\u793a\u4e86\u6bd4\u7279\u5e01\u5728\u4e0d\u540c\u7528\u6237\u4e4b\u95f4\u7684\u6d41\u8f6c\u8fc7\u7a0b\u3002</p> <p>\u5728\u6bd4\u7279\u5e01\u4ea4\u6613\u4e2d\uff0c\u6bcf\u4e2a\u4ea4\u6613\u5206\u4e3a\u8f93\u5165\u548c\u8f93\u51fa\u4e24\u90e8\u5206\uff1a - \u8f93\u5165\u90e8\u5206\uff1a\u9700\u8981\u660e\u786e\u5e01\u7684\u6765\u6e90\uff0c\u5373\u5f15\u7528\u4e4b\u524d\u4ea4\u6613\u7684\u8f93\u51fa\u4f5c\u4e3a\u672c\u6b21\u4ea4\u6613\u7684\u8f93\u5165\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u8ffd\u6eaf\u8d44\u91d1\u7684\u6e90\u5934\uff0c\u786e\u4fdd\u6bcf\u4e00\u7b14\u4ea4\u6613\u7684\u5408\u6cd5\u6027\u548c\u8fde\u8d2f\u6027\u3002 - \u8f93\u51fa\u90e8\u5206\uff1a\u8981\u7ed9\u51fa\u6536\u6b3e\u65b9\u7684\u516c\u94a5\uff0c\u6307\u5b9a\u8fd9\u7b14\u6bd4\u7279\u5e01\u7684\u63a5\u6536\u8005\u3002\u53d1\u9001\u65b9\u4f7f\u7528\u63a5\u6536\u65b9\u7684\u516c\u94a5\u5bf9\u4ea4\u6613\u4fe1\u606f\u8fdb\u884c\u52a0\u5bc6\uff0c\u53ea\u6709\u63a5\u6536\u65b9\u80fd\u591f\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u89e3\u5bc6\u83b7\u53d6\u4ea4\u6613\u5185\u5bb9\u3002\u540c\u65f6\uff0c\u53d1\u9001\u65b9\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u8fdb\u884c\u7b7e\u540d\uff0c\u63a5\u6536\u65b9\u4ee5\u53ca\u5176\u4ed6\u8282\u70b9\u53ef\u4ee5\u4f7f\u7528\u53d1\u9001\u65b9\u7684\u516c\u94a5\u8fdb\u884c\u9a8c\u8bc1\uff0c\u786e\u4fdd\u4ea4\u6613\u786e\u5b9e\u7531\u53d1\u9001\u65b9\u53d1\u8d77\u4e14\u672a\u88ab\u7be1\u6539\u3002</p> <p>\u6bcf\u4e2a\u4ea4\u6613\u7684\u8f93\u5165\u8f93\u51fa\u5b9e\u9645\u4e0a\u662f\u4e00\u6bb5\u811a\u672c\uff0c\u516c\u94a5\u4e5f\u5728\u811a\u672c\u4e2d\u6307\u5b9a\u3002\u6bd4\u7279\u5e01\u811a\u672c\u901a\u8fc7\u4e00\u79cd\u7279\u6b8a\u7684\u7f16\u7a0b\u903b\u8f91\u6765\u9a8c\u8bc1\u4ea4\u6613\u7684\u6709\u6548\u6027\u3002\u4f8b\u5982\uff0cA \u7684\u8f93\u5165\u811a\u672c\u548c\u524d\u9762\u4ea4\u6613\u7684\u8f93\u51fa\u811a\u672c\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u5982\u679c\u8fd9\u6bb5\u62fc\u63a5\u540e\u7684\u811a\u672c\u80fd\u591f\u6309\u7167\u6bd4\u7279\u5e01\u811a\u672c\u7684\u89c4\u5219\u6b63\u5e38\u8fd0\u884c\uff0c\u5c31\u8bf4\u660e\u8be5\u4ea4\u6613\u662f\u6b63\u5e38\u7684\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/3.%E5%8D%8F%E8%AE%AE/#_6","title":"\u6bd4\u7279\u5e01\u533a\u5757\u94fe\u7ed3\u6784","text":"<p>\u5728\u5b9e\u9645\u7684\u6bd4\u7279\u5e01\u7cfb\u7edf\u4e2d\uff0c\u6bcf\u4e2a\u533a\u5757\u5305\u542b\u4e86\u5927\u91cf\u7684\u4ea4\u6613\uff0c\u5176\u7ed3\u6784\u901a\u8fc7 Merkle \u6811\u6765\u7ec4\u7ec7\uff0c\u5206\u4e3a\u5757\u5934\uff08block header\uff09\u548c\u5757\u8eab\uff08block body\uff09\uff1a</p> <ul> <li>\u5757\u5934\uff08block header\uff09\uff1a\u5305\u542b\u5173\u952e\u4fe1\u606f\uff0c\u5982\u00a0<code>version</code>\uff08\u7248\u672c\u53f7\uff0c\u7528\u4e8e\u6807\u8bc6\u533a\u5757\u7684\u534f\u8bae\u7248\u672c\uff09\u3001<code>hash of previous block header</code>\uff08\u524d\u4e00\u4e2a\u533a\u5757\u5934\u7684\u54c8\u5e0c\u503c\uff0c\u901a\u8fc7\u54c8\u5e0c\u6307\u9488\u5c06\u533a\u5757\u94fe\u4e2d\u7684\u5404\u4e2a\u533a\u5757\u8fde\u63a5\u8d77\u6765\uff0c\u5f62\u6210\u94fe\u5f0f\u7ed3\u6784\uff0c\u4fdd\u8bc1\u4e86\u6570\u636e\u7684\u987a\u5e8f\u6027\u548c\u53ef\u8ffd\u6eaf\u6027\uff09\u3001<code>merkle root hash</code>\uff08\u9ed8\u514b\u5c14\u6811\u7684\u6839\u54c8\u5e0c\u503c\uff0c\u7528\u4e8e\u5feb\u901f\u9a8c\u8bc1\u533a\u5757\u5185\u6240\u6709\u4ea4\u6613\u7684\u5b8c\u6574\u6027\uff09\u3001<code>target</code>\uff08\u76ee\u6807\u54c8\u5e0c\u503c\uff0c\u51b3\u5b9a\u4e86\u6316\u77ff\u7684\u96be\u5ea6\uff0c\u77ff\u5de5\u9700\u8981\u627e\u5230\u4e00\u4e2a\u54c8\u5e0c\u503c\u5c0f\u4e8e\u8be5\u76ee\u6807\u503c\u7684\u533a\u5757\u5934\uff0c\u624d\u80fd\u83b7\u5f97\u8bb0\u8d26\u6743\uff09\u3001<code>nonce</code>\uff08\u4e00\u4e2a 4 \u5b57\u8282\u7684\u968f\u673a\u6570\uff0c\u77ff\u5de5\u901a\u8fc7\u4e0d\u65ad\u8c03\u6574 nonce \u503c\u6765\u5c1d\u8bd5\u627e\u5230\u7b26\u5408\u8981\u6c42\u7684\u54c8\u5e0c\u503c\uff09\u3002\u901a\u8fc7\u8ba1\u7b97\u00a0<code>H(block header) &lt;= target</code>\uff08\u5176\u4e2d\u00a0<code>H</code>\u00a0\u8868\u793a\u54c8\u5e0c\u51fd\u6570\uff09\uff0c\u53ea\u6709\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u533a\u5757\u5934\u624d\u662f\u6709\u6548\u7684\u3002\u8fd9\u91cc\u7684\u00a0<code>nBits</code>\u00a0\u662f\u4e00\u79cd\u8868\u793a\u76ee\u6807\u503c\u7684\u7d27\u51d1\u683c\u5f0f\uff0c\u7528\u4e8e\u5728\u4e0d\u540c\u8282\u70b9\u95f4\u7edf\u4e00\u8868\u793a\u76ee\u6807\u96be\u5ea6\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u53ea\u6709\u5757\u5934\u6709\u6307\u5411\u524d\u4e00\u4e2a\u5757\u5934\u7684\u54c8\u5e0c\u6307\u9488\uff0c\u5f62\u6210\u4e86\u533a\u5757\u94fe\u7684\u57fa\u672c\u94fe\u5f0f\u7ed3\u6784\u3002\u90a3\u4e48\uff0c\u6709\u4eba\u53ef\u80fd\u4f1a\u95ee\uff0c\u5982\u679c\u53ea\u5bf9\u5757\u5934\u53d6\u54c8\u5e0c\uff0c\u800c\u5757\u8eab\u4e0d\u53d6\u54c8\u5e0c\uff0c\u5982\u4f55\u4fdd\u8bc1\u5757\u8eab\u5185\u5bb9\u4e0d\u88ab\u4fee\u6539\u5462\uff1f\u5b9e\u9645\u4e0a\uff0c\u5757\u8eab\u4e2d\u7684\u6240\u6709\u4ea4\u6613\u901a\u8fc7 Merkle \u6811\u7ed3\u6784\u7ec4\u7ec7\uff0c\u5757\u5934\u4e2d\u7684 Merkle \u6839\u54c8\u5e0c\u503c\u662f\u6839\u636e\u5757\u8eab\u4e2d\u6240\u6709\u4ea4\u6613\u8ba1\u7b97\u5f97\u51fa\u7684\u3002\u5982\u679c\u5757\u8eab\u5185\u5bb9\u53d1\u751f\u4efb\u4f55\u6539\u53d8\uff0c\u91cd\u65b0\u8ba1\u7b97\u5f97\u5230\u7684 Merkle \u6839\u54c8\u5e0c\u503c\u5fc5\u7136\u4f1a\u6539\u53d8\uff0c\u4ece\u800c\u5bfc\u81f4\u5757\u5934\u7684\u54c8\u5e0c\u503c\u6539\u53d8\uff0c\u4f7f\u5f97\u8be5\u533a\u5757\u4e0d\u518d\u6ee1\u8db3\u00a0<code>H(block header) &lt;= target</code>\u00a0\u7684\u6761\u4ef6\uff0c\u56e0\u6b64 Merkle \u6839\u54c8\u5e0c\u80fd\u591f\u4fdd\u8bc1\u5757\u8eab\u5185\u5bb9\u7684\u5b8c\u6574\u6027\u548c\u4e0d\u88ab\u7be1\u6539\u3002</li> <li>\u5757\u8eab\uff08block body\uff09\uff1a\u4e3b\u8981\u5305\u542b\u4ea4\u6613\u5217\u8868\uff0c\u5373\u8be5\u533a\u5757\u6240\u6253\u5305\u7684\u6240\u6709\u6bd4\u7279\u5e01\u4ea4\u6613\u3002</li> </ul> <p>\u6bd4\u7279\u5e01\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a - \u5168\u8282\u70b9\uff08full node\uff09\uff1a\u4e5f\u79f0\u4e3a\u5b8c\u5168\u9a8c\u8bc1\u8282\u70b9\uff0c\u5b83\u4fdd\u5b58\u4e86\u5b8c\u6574\u7684\u533a\u5757\u94fe\u6570\u636e\uff0c\u5305\u62ec\u6240\u6709\u7684\u533a\u5757\u5934\u548c\u533a\u5757\u4f53\uff0c\u80fd\u591f\u72ec\u7acb\u9a8c\u8bc1\u6bcf\u4e00\u7b14\u4ea4\u6613\u7684\u5408\u6cd5\u6027\uff0c\u53c2\u4e0e\u533a\u5757\u94fe\u7684\u6784\u9020\u548c\u7ef4\u62a4\uff0c\u5bf9\u6574\u4e2a\u533a\u5757\u94fe\u7f51\u7edc\u7684\u5b89\u5168\u548c\u7a33\u5b9a\u8d77\u7740\u5173\u952e\u4f5c\u7528\u3002 - \u8f7b\u8282\u70b9\uff08light node\uff09\uff1a\u65e0\u6cd5\u72ec\u7acb\u9a8c\u8bc1\u4ea4\u6613\u7684\u5408\u6cd5\u6027\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u5b58\u50a8\u5b8c\u6574\u7684\u533a\u5757\u94fe\u6570\u636e\uff0c\u6ca1\u6709\u53c2\u4e0e\u533a\u5757\u94fe\u7684\u5b9e\u9645\u6784\u9020\u8fc7\u7a0b\u3002\u8f7b\u8282\u70b9\u4e3b\u8981\u5229\u7528\u67e5\u8be2\u529f\u80fd\uff0c\u901a\u8fc7\u5411\u5168\u8282\u70b9\u8bf7\u6c42\u76f8\u5173\u4fe1\u606f\u6765\u9a8c\u8bc1\u4ea4\u6613\uff0c\u4f8b\u5982\u5728\u7b80\u5355\u652f\u4ed8\u9a8c\u8bc1\uff08SPV\uff09\u8fc7\u7a0b\u4e2d\uff0c\u8f7b\u8282\u70b9\u901a\u8fc7\u5411\u5168\u8282\u70b9\u83b7\u53d6\u90e8\u5206\u54c8\u5e0c\u503c\u7b49\u4fe1\u606f\uff0c\u7ed3\u5408\u672c\u5730\u8ba1\u7b97\u6765\u9a8c\u8bc1\u4ea4\u6613\u662f\u5426\u88ab\u8bb0\u5f55\u5728\u533a\u5757\u94fe\u4e0a\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/3.%E5%8D%8F%E8%AE%AE/#_7","title":"\u4ea4\u6613\u5199\u5165\u533a\u5757\u94fe\u4e0e\u5171\u8bc6\u673a\u5236","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/3.%E5%8D%8F%E8%AE%AE/#_8","title":"\u4ea4\u6613\u5982\u4f55\u5199\u5165\u533a\u5757\u94fe","text":"<p>\u533a\u5757\u94fe\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u53bb\u4e2d\u5fc3\u5316\u7684\u8d26\u672c\uff0c\u8981\u5c06\u4ea4\u6613\u5199\u5165\u533a\u5757\u94fe\uff0c\u5c31\u9700\u8981\u5728\u5206\u5e03\u5f0f\u7f51\u7edc\u4e2d\u7684\u4f17\u591a\u8282\u70b9\u95f4\u8fbe\u6210\u5171\u8bc6\uff0c\u5373\u5bf9\u8d26\u672c\u5185\u5bb9\u7684\u4e00\u81f4\u6027\u8ba4\u53ef\u3002\u8fd9\u91cc\u6d89\u53ca\u5230\u5206\u5e03\u5f0f\u5171\u8bc6\uff08distributed consensus\uff09\u7684\u6982\u5ff5\uff0c\u7c7b\u4f3c\u4e8e\u5206\u5e03\u5f0f\u54c8\u5e0c\u8868\uff08distributed hash table\uff09\u7684\u5168\u5c40\u54c8\u5e0c\u8868\u7ed3\u6784\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u90fd\u4fdd\u5b58\u4e86\u4e00\u4efd \u201ckey - value pair\u201d \u5f62\u5f0f\u7684\u8d26\u672c\u526f\u672c\u3002\u7136\u800c\uff0c\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u8fbe\u6210\u5171\u8bc6\u5e76\u975e\u6613\u4e8b\uff0c\u5b58\u5728\u4e00\u4e9b\u4e0d\u53ef\u80fd\u7ed3\u8bba\uff1a 1. FLP \u5b9a\u7406\uff1a\u5728\u4e00\u4e2a\u5f02\u6b65\uff08asynchronous\uff09\u7cfb\u7edf\u91cc\uff0c\u7f51\u7edc\u4f20\u8f93\u65f6\u5ef6\u6ca1\u6709\u4e0a\u9650\uff0c\u54ea\u6015\u53ea\u6709\u4e00\u4e2a\u7528\u6237\u662f\u6545\u969c\uff08faulty\uff09\u7684\uff0c\u4e5f\u6ca1\u6709\u529e\u6cd5\u8fbe\u6210\u5171\u8bc6\u3002\u8fd9\u5c31\u597d\u6bd4\u8457\u540d\u7684\u62dc\u5360\u5ead\u5c06\u519b\u95ee\u9898\uff0c\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u5404\u4e2a\u8282\u70b9\u5c31\u50cf\u62dc\u5360\u5ead\u519b\u961f\u4e2d\u7684\u5c06\u519b\uff0c\u4ed6\u4eec\u9700\u8981\u5728\u8fdb\u653b\u6216\u64a4\u9000\u7b49\u51b3\u7b56\u4e0a\u8fbe\u6210\u4e00\u81f4\uff0c\u4f46\u7531\u4e8e\u5b58\u5728\u6545\u969c\u8282\u70b9\u6216\u6076\u610f\u8282\u70b9\u7684\u5e72\u6270\uff0c\u4f7f\u5f97\u8fbe\u6210\u5171\u8bc6\u53d8\u5f97\u6781\u4e3a\u56f0\u96be\u3002 2. CAP \u5b9a\u7406\uff1a\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4e00\u81f4\u6027\uff08consistence\uff09\u3001\u53ef\u7528\u6027\uff08availability\uff09\u548c\u5bb9\u9519\u6027\uff08partition tolerance\uff09\u8fd9\u4e09\u4e2a\u6027\u8d28\u4e0d\u53ef\u80fd\u540c\u65f6\u6ee1\u8db3\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5f80\u5f80\u9700\u8981\u6839\u636e\u5177\u4f53\u573a\u666f\u5bf9\u8fd9\u4e09\u4e2a\u7279\u6027\u8fdb\u884c\u6743\u8861\u3002</p> <p>\u5728\u6bd4\u7279\u5e01\u7cfb\u7edf\u4e2d\uff0c\u4e3a\u4e86\u5728\u5927\u591a\u6570\u8282\u70b9\u662f\u597d\u7684\uff0c\u5c11\u90e8\u5206\u662f\u574f\u7684\u60c5\u51b5\u4e0b\u8fbe\u6210\u5171\u8bc6\uff0c\u91c7\u7528\u4e86\u4ee5\u4e0b\u65b9\u6cd5\uff1a</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/3.%E5%8D%8F%E8%AE%AE/#_9","title":"\u6bd4\u7279\u5e01\u7684\u5171\u8bc6\u673a\u5236","text":"<ol> <li>\u6295\u7968\u65b9\u5f0f\u7684\u601d\u8003\u4e0e\u95ee\u9898\uff1a<ul> <li>\u57fa\u4e8e\u8d26\u53f7\u6570\u91cf\u6295\u7968\uff1a\u6700\u521d\u8bbe\u60f3\u901a\u8fc7\u8d26\u53f7\u6570\u91cf\u6765\u6295\u7968\u51b3\u5b9a\u8d26\u672c\u5185\u5bb9\u7684\u5171\u8bc6\u3002\u4f46\u8fd9\u79cd\u65b9\u5f0f\u5b58\u5728\u4e25\u91cd\u7684\u6548\u7387\u95ee\u9898\uff0c\u6076\u610f\u653b\u51fb\u8005\u53ef\u80fd\u4f1a\u8fdb\u884c \u201c\u884c\u653f\u4e0d\u4f5c\u4e3a\u201d\uff0c\u5373\u4e0d\u65ad\u53d1\u8d77\u653b\u51fb\u5e76\u6295\u7968\uff0c\u5bfc\u81f4\u6b63\u5e38\u8282\u70b9\u6ca1\u6709\u65f6\u95f4\u8fdb\u884c\u6316\u77ff\u7b49\u6709\u6548\u64cd\u4f5c\u3002\u6b64\u5916\uff0c\u5728\u6bd4\u7279\u5e01\u7cfb\u7edf\u4e2d\u521b\u5efa\u8d26\u53f7\u975e\u5e38\u5bb9\u6613\uff0c\u8fd9\u5c31\u5f15\u53d1\u4e86\u5973\u5deb\u653b\u51fb\uff08sybil attack\uff09\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u521b\u5efa\u5927\u91cf\u865a\u5047\u8d26\u53f7\u6765\u63a7\u5236\u6295\u7968\u7ed3\u679c\uff0c\u7834\u574f\u5171\u8bc6\u673a\u5236\u3002</li> <li>\u57fa\u4e8e\u7b97\u529b\u6295\u7968\uff1a\u6bd4\u7279\u5e01\u91c7\u7528\u4e86\u57fa\u4e8e\u7b97\u529b\u7684\u6295\u7968\u65b9\u5f0f\u6765\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u3002\u5728\u6316\u77ff\u8fc7\u7a0b\u4e2d\uff0c\u77ff\u5de5\u9700\u8981\u627e\u5230\u4e00\u4e2a\u5408\u9002\u7684\u00a0<code>nonce</code>\uff0c\u4f7f\u5f97\u00a0<code>H(block header) &lt;= target</code>\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u5927\u91cf\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u5373\u7b97\u529b\u3002\u53ea\u6709\u627e\u5230\u7b26\u5408\u8981\u6c42\u7684\u00a0<code>nonce</code>\u00a0\u7684\u8282\u70b9\u624d\u6709\u6743\u529b\u53d1\u5e03\u4e0b\u4e00\u4e2a\u533a\u5757\uff0c\u8fd9\u4e2a\u6743\u529b\u88ab\u79f0\u4e3a\u8bb0\u8d26\u6743\uff0c\u5373\u5728\u533a\u5757\u94fe\u8fd9\u4e2a\u53bb\u4e2d\u5fc3\u5316\u7684\u8d26\u672c\u91cc\u5199\u5165\u4e0b\u4e00\u4e2a\u533a\u5757\u7684\u6743\u5229\u3002\u5176\u4ed6\u8282\u70b9\u6536\u5230\u8fd9\u4e2a\u65b0\u533a\u5757\u540e\uff0c\u4f1a\u9a8c\u8bc1\u8be5\u533a\u5757\u7684\u5408\u6cd5\u6027\uff0c\u4f8b\u5982\u68c0\u67e5\u00a0<code>block header</code>\u00a0\u7684\u5185\u5bb9\uff0c\u5305\u62ec\u00a0<code>nBits</code>\u00a0\u662f\u5426\u6b63\u786e\uff0c\u786e\u4fdd\u5176\u7b26\u5408\u6bd4\u7279\u5e01\u7f51\u7edc\u8bbe\u5b9a\u7684\u89c4\u5219\u548c\u96be\u5ea6\u8981\u6c42\u3002</li> </ul> </li> <li>\u533a\u5757\u7684\u63a5\u53d7\u4e0e\u5206\u53c9\u95ee\u9898\uff1a<ul> <li>\u533a\u5757\u63d2\u5165\u4f4d\u7f6e\u4e0e\u5408\u6cd5\u6027\uff1a\u65b0\u4ea7\u751f\u7684\u533a\u5757\u5fc5\u987b\u63d2\u5728\u6700\u957f\u5408\u6cd5\u94fe\u4e0a\u3002\u5982\u679c\u5c06\u533a\u5757\u63d2\u5728\u4e2d\u95f4\uff0c\u4e0d\u5728\u6700\u957f\u5408\u6cd5\u94fe\u4e0a\uff0c\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u56e0\u4e3a\u8282\u70b9\u5bf9\u533a\u5757\u5408\u6cd5\u6027\u7684\u5224\u65ad\u4e3b\u8981\u4f9d\u636e\u524d\u9762\u4ea4\u6613\u7684\u60c5\u51b5\uff0c\u5982\u679c\u5728\u8be5\u533a\u5757\u4e4b\u540e\u4ecd\u6709\u4ea4\u6613\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u53cc\u91cd\u652f\u4ed8\u95ee\u9898\uff0c\u5373\u5206\u53c9\u653b\u51fb\uff08forking attack\uff09\uff0c\u653b\u51fb\u8005\u8bd5\u56fe\u56de\u6eda\u67d0\u4e2a\u5df2\u7ecf\u53d1\u751f\u7684\u4ea4\u6613\uff0c\u4ece\u800c\u5b9e\u73b0\u53cc\u82b1\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u62d3\u5c55\u6700\u957f\u5408\u6cd5\u94fe\u7684\u533a\u5757\u624d\u4f1a\u88ab\u5927\u591a\u6570\u8282\u70b9\u63a5\u53d7\u3002</li> <li>\u540c\u65f6\u53d1\u5e03\u5408\u6cd5\u533a\u5757\u7684\u5904\u7406\uff1a\u5f53\u4e24\u4e2a\u8282\u70b9\u540c\u65f6\u53d1\u5e03\u5408\u6cd5\u533a\u5757\u65f6\uff0c\u6bd4\u7279\u5e01\u7f51\u7edc\u4f1a\u770b\u8c01\u80fd\u591f\u62a2\u5148\u627e\u5230\u4e0b\u4e00\u4e2a\u533a\u5757\u3002\u5148\u6316\u51fa\u4e0b\u4e00\u4e2a\u5408\u6cd5\u533a\u5757\u4e14\u88ab\u7f51\u7edc\u8ba4\u53ef\u7684\u8282\u70b9\uff0c\u4e0d\u4ec5\u80fd\u83b7\u5f97\u8be5\u533a\u5757\u7684\u8bb0\u8d26\u6743\uff0c\u8fd8\u4f1a\u5f97\u5230\u6bd4\u7279\u5e01\u5956\u52b1\u3002\u8fd9\u5c31\u6fc0\u52b1\u4e86\u77ff\u5de5\u4e0d\u65ad\u63d0\u9ad8\u7b97\u529b\uff0c\u4ee5\u4e89\u53d6\u83b7\u5f97\u8bb0\u8d26\u6743\u548c\u5956\u52b1\u3002</li> </ul> </li> <li>\u7ade\u4e89\u8bb0\u8d26\u6743\u7684\u539f\u56e0 - \u51fa\u5757\u5956\u52b1\uff1a     \u7ade\u4e89\u8bb0\u8d26\u6743\u7684\u4e3b\u8981\u52a8\u529b\u662f\u51fa\u5757\u5956\u52b1\uff08block reward\uff09\u3002\u6316\u51fa\u65b0\u533a\u5757\u7684\u8282\u70b9\u5728\u00a0<code>block body</code>\u00a0\u4e2d\u4f1a\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u4ea4\u6613\uff0c\u5373\u94f8\u5e01\u4ea4\u6613\uff08coinbase transaction\uff09\uff0c\u8fd9\u662f\u53d1\u884c\u65b0\u6bd4\u7279\u5e01\u7684\u552f\u4e00\u65b9\u6cd5\u3002\u5728\u6bd4\u7279\u5e01\u7cfb\u7edf\u7684\u521d\u59cb\u9636\u6bb5\uff0c\u6bcf\u4e00\u4e2a\u533a\u5757\u7684\u51fa\u5757\u5956\u52b1\u4e3a 50 BTC\uff0c\u968f\u7740\u65f6\u95f4\u63a8\u79fb\u548c\u533a\u5757\u6570\u91cf\u7684\u589e\u52a0\uff0c\u5956\u52b1\u4f1a\u9010\u6e10\u51cf\u534a\uff0c\u5982\u7ecf\u8fc7 21 \u4e07\u4e2a\u533a\u5757\u540e\uff0c\u5956\u52b1\u53d8\u4e3a 25 BTC\uff0c\u76ee\u524d\u5927\u7ea6\u4e3a 12.5 BTC\u3002\u4e2d\u672c\u806a\u5728\u6bd4\u7279\u5e01\u521b\u4e16\u533a\u5757\u4e2d\u9996\u6b21\u5f15\u5165\u4e86\u8fd9\u79cd\u5956\u52b1\u673a\u5236\uff0c\u636e\u8bf4\u6bd4\u7279\u5e01\u7b2c\u4e00\u6b21\u4e0e\u73b0\u5b9e\u4e16\u754c\u4ea7\u751f\u4ef7\u503c\u4ea4\u6362\u65f6\uff0c\u662f\u7528 2 \u4e07\u4e2a\u6bd4\u7279\u5e01\u8d2d\u4e70\u4e86\u4e00\u4e2a\u62ab\u8428\uff0c\u8fd9\u6807\u5fd7\u7740\u6bd4\u7279\u5e01\u4ece\u865a\u62df\u6982\u5ff5\u8d70\u5411\u4e86\u5b9e\u9645\u5e94\u7528\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u5206\u53c9\u70b9\u4e0a\u5f97\u5230\u7684\u6bd4\u7279\u5e01\u662f\u6ca1\u6709\u7528\u7684\uff0c\u56e0\u4e3a\u53ea\u6709\u5728\u6700\u957f\u5408\u6cd5\u94fe\u4e0a\u7684\u6bd4\u7279\u5e01\u624d\u88ab\u6574\u4e2a\u7f51\u7edc\u8ba4\u53ef\u548c\u63a5\u53d7\u3002</li> </ol> <p>\u901a\u8fc7\u4e0a\u8ff0\u57fa\u4e8e\u7b97\u529b\u7684\u5171\u8bc6\u673a\u5236\uff0c\u6bd4\u7279\u5e01\u5b9e\u73b0\u4e86\u53bb\u4e2d\u5fc3\u5316\u8d26\u672c\u5185\u5bb9\u7684\u4e00\u81f4\u6027\uff0c\u4f7f\u5f97\u6316\u77ff\uff08mining\uff09\u8fd9\u4e00\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u5bfb\u627e\u6570\u5b57\u9ec4\u91d1\uff0c\u77ff\u5de5\u4eec\u901a\u8fc7\u4e89\u593a\u8bb0\u8d26\u6743\uff0c\u4e0d\u65ad\u4e3a\u533a\u5757\u94fe\u7f51\u7edc\u6dfb\u52a0\u65b0\u7684\u533a\u5757\uff0c\u7ef4\u62a4\u7740\u6bd4\u7279\u5e01\u7cfb\u7edf\u7684\u7a33\u5b9a\u8fd0\u884c\uff0c\u540c\u65f6\u4e5f\u4f7f\u5f97\u5973\u5deb\u653b\u51fb\u5728\u8fd9\u79cd\u673a\u5236\u4e0b\u65e0\u6cd5\u5bf9\u7cfb\u7edf\u9020\u6210\u5b9e\u8d28\u6027\u7834\u574f\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/4.%E5%AE%9E%E7%8E%B0/","title":"4. \u5b9e\u73b0","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/4.%E5%AE%9E%E7%8E%B0/#4","title":"4. \u5b9e\u73b0","text":"<p> \u7ea6 1266 \u4e2a\u5b57  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/4.%E5%AE%9E%E7%8E%B0/#1","title":"1. \u4ea4\u6613\u8d26\u672c\u7c7b\u578b","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/4.%E5%AE%9E%E7%8E%B0/#transaction-based-ledger","title":"Transaction - based Ledger\uff08\u57fa\u4e8e\u4ea4\u6613\u7684\u8d26\u672c\uff09","text":"<p>\u5728\u8fd9\u79cd\u8d26\u672c\u6a21\u5f0f\u4e0b\uff0c\u7cfb\u7edf\u5e76\u4e0d\u76f4\u63a5\u8bb0\u5f55\u67d0\u4eba\u5177\u4f53\u7684\u4f59\u989d\u3002\u800c\u662f\u901a\u8fc7\u7ef4\u62a4 UTXO\uff08Unspent Transaction Output\uff0c\u672a\u82b1\u8d39\u4ea4\u6613\u8f93\u51fa\uff09\u6765\u7ba1\u7406\u8d44\u4ea7\u3002\u4e00\u4e2a\u4ea4\u6613\u53ef\u80fd\u4f1a\u4ea7\u751f\u591a\u4e2a\u8f93\u51fa\uff0c\u8fd9\u4e9b\u8f93\u51fa\u5728\u672a\u88ab\u540e\u7eed\u4ea4\u6613\u4f5c\u4e3a\u8f93\u5165\u6d88\u8017\u4e4b\u524d\uff0c\u90fd\u88ab\u89c6\u4e3a UTXO\u3002</p> <p>\u7ef4\u62a4 UTXO \u81f3\u5173\u91cd\u8981\uff0c\u5176\u4e3b\u8981\u4f5c\u7528\u662f\u68c0\u6d4b\u53cc\u82b1\u653b\u51fb\uff08double spending\uff09\u3002\u901a\u8fc7\u8bb0\u5f55\u6240\u6709\u672a\u82b1\u8d39\u7684\u4ea4\u6613\u8f93\u51fa\uff0c\u7cfb\u7edf\u80fd\u591f\u5feb\u901f\u5224\u65ad\u6bcf\u4e00\u7b14\u65b0\u4ea4\u6613\u662f\u5426\u8bd5\u56fe\u91cd\u590d\u82b1\u8d39\u5df2\u88ab\u4f7f\u7528\u7684\u8f93\u51fa\u3002\u8fd9\u79cd\u65b9\u5f0f\u6781\u5927\u5730\u8282\u7701\u4e86\u68c0\u6d4b\u65f6\u95f4\uff0c\u63d0\u9ad8\u4e86\u7cfb\u7edf\u6548\u7387\u3002 \u5728\u6bcf\u4e00\u7b14\u4ea4\u6613\u4e2d\uff0c\u9075\u5faa total inputs = total outputs\u3002transaction fee\u901a\u5e38\u91d1\u989d\u8f83\u5c0f\u3002 \u968f\u7740\u6bd4\u7279\u5e01\u7684\u53d1\u5c55\uff0c\u5927\u7ea6\u6bcf 21 \u4e07\u4e2a\u533a\u5757\uff08\u5dee\u4e0d\u591a 4 \u5e74\uff09\uff0c\u533a\u5757\u5956\u52b1\u4f1a\u51cf\u534a\u3002 \u5f53\u533a\u5757\u5956\u52b1\u9010\u6e10\u51cf\u5c11\u5230\u4e00\u5b9a\u7a0b\u5ea6\u540e\uff0c\u4ea4\u6613\u8d39\u5c06\u6210\u4e3a\u77ff\u5de5\u7684\u4e3b\u8981\u6536\u5165\u6765\u6e90\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/4.%E5%AE%9E%E7%8E%B0/#account-based-ledger","title":"Account - based Ledger\uff08\u57fa\u4e8e\u8d26\u6237\u7684\u8d26\u672c\uff09","text":"<p> \u8fd9\u79cd\u8d26\u672c\u6a21\u5f0f\u805a\u7126\u4e8e\u6bcf\u4e2a\u8d26\u6237\u7684\u4f59\u989d\u53d8\u52a8\u3002\u4e0e\u57fa\u4e8e\u4ea4\u6613\u7684\u8d26\u672c\u4e0d\u540c\uff0c\u5b83\u76f4\u63a5\u8bb0\u5f55\u6bcf\u4e2a\u8d26\u6237\u7684\u8d44\u4ea7\u6570\u91cf\uff0c\u901a\u8fc7\u5bf9\u8d26\u6237\u7684\u589e\u51cf\u64cd\u4f5c\u6765\u53cd\u6620\u4ea4\u6613\u60c5\u51b5\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/4.%E5%AE%9E%E7%8E%B0/#2","title":"2. \u6316\u77ff\u76f8\u5173\u6982\u7387\u8fc7\u7a0b","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/4.%E5%AE%9E%E7%8E%B0/#bernoulli-trail-bernoulli-process","title":"Bernoulli Trail\uff08\u4f2f\u52aa\u5229\u8bd5\u9a8c\uff09\u4e0e Bernoulli Process\uff08\u4f2f\u52aa\u5229\u8fc7\u7a0b\uff09","text":"<p>\u4f2f\u52aa\u5229\u8bd5\u9a8c\u662f\u4e00\u79cd\u5177\u6709\u4e8c\u5143\u7ed3\u679c\u7684\u968f\u673a\u8bd5\u9a8c\uff0c\u4f8b\u5982\u63b7\u786c\u5e01\uff0c\u7ed3\u679c\u53ea\u6709\u6b63\u9762\u6216\u53cd\u9762\u4e24\u79cd\u3002\u800c\u4f2f\u52aa\u5229\u8fc7\u7a0b\u5219\u662f\u4e00\u7cfb\u5217\u76f8\u4e92\u72ec\u7acb\u7684\u4f2f\u52aa\u5229\u8bd5\u9a8c\uff0c\u5177\u6709\u65e0\u8bb0\u5fc6\u6027\uff08memoryless\uff09\u3002 \u8fd9\u610f\u5473\u7740\u6bcf\u6b21\u8bd5\u9a8c\u7684\u7ed3\u679c\u90fd\u4e0d\u53d7\u4e4b\u524d\u8bd5\u9a8c\u7ed3\u679c\u7684\u5f71\u54cd\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/4.%E5%AE%9E%E7%8E%B0/#poisson-process","title":"Poisson Process\uff08\u6cca\u677e\u8fc7\u7a0b\uff09","text":"<p>\u5728\u6bd4\u7279\u5e01\u6316\u77ff\u4e2d\uff0c\u6cca\u677e\u8fc7\u7a0b\u7528\u4e8e\u4fdd\u8bc1\u6316\u77ff\u7684\u516c\u5e73\u6027\u3002\u5b83\u4e0e\u6307\u6570\u5206\u5e03\u76f8\u5173\uff0c\u6bd4\u7279\u5e01\u7cfb\u7edf\u5e73\u5747\u51fa\u5757\u65f6\u95f4\u8bbe\u5b9a\u4e3a 10 \u5206\u949f\u3002\u8fd9\u662f\u57fa\u4e8e\u6cca\u677e\u8fc7\u7a0b\u7684\u7279\u6027\uff0c\u4f7f\u5f97\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u6bcf\u4e2a\u77ff\u5de5\u90fd\u6709\u76f8\u5bf9\u516c\u5e73\u7684\u673a\u4f1a\u6316\u51fa\u65b0\u533a\u5757\u3002 \u5982\u679c\u6316\u77ff\u8fc7\u7a0b\u4e0d\u662f\u65e0\u8bb0\u5fc6\u6027\u7684 puzzle\uff0c\u90a3\u4e48\u7b97\u529b\u5f3a\u7684\u77ff\u5de5\u4f1a\u6709\u4e0d\u6210\u6bd4\u4f8b\u7684\u4f18\u52bf\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u6316\u77ff\u96be\u5ea6\u4e0e\u4e4b\u524d\u7684\u6316\u77ff\u7ed3\u679c\u6709\u5173\uff0c\u7b97\u529b\u5f3a\u7684\u77ff\u5de5\u53ef\u80fd\u51ed\u501f\u4e4b\u524d\u7684\u6210\u529f\u7ecf\u9a8c\u6216\u79ef\u7d2f\uff0c\u66f4\u5bb9\u6613\u9884\u6d4b\u548c\u6ee1\u8db3\u540e\u7eed\u7684\u6316\u77ff\u6761\u4ef6\uff0c\u4ece\u800c\u5927\u5927\u589e\u52a0\u4ed6\u4eec\u6316\u5230\u65b0\u533a\u5757\u7684\u6982\u7387\uff0c\u7834\u574f\u4e86\u7cfb\u7edf\u7684\u516c\u5e73\u6027\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/4.%E5%AE%9E%E7%8E%B0/#_1","title":"\u6bd4\u7279\u5e01\u603b\u91cf\u8ba1\u7b97","text":"<p>\u901a\u8fc7\u51e0\u4f55\u7ea7\u6570\u8ba1\u7b97\u53ef\u5f97\u6bd4\u7279\u5e01\u7684\u603b\u91cf\u3002\u5df2\u77e5\u6700\u521d\u6bcf\u4e2a\u533a\u5757\u7684\u5956\u52b1\u4e3a 50 BTC\uff0c\u6bcf 21 \u4e07\u4e2a\u533a\u5757\u5956\u52b1\u51cf\u534a\uff0c\u5373\uff1a </p> <p>\u6240\u4ee5\u6bd4\u7279\u5e01\u7684\u603b\u6570\u53ea\u6709 2100 \u4e07\uff0c\u6bd4\u7279\u5e01\u7cfb\u7edf\u901a\u8fc7\u6316\u77ff\u673a\u5236\u6765\u4fdd\u969c\u5176\u5b89\u5168\u6027\uff08bitcoin is secured by mining\uff09\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/4.%E5%AE%9E%E7%8E%B0/#3","title":"3. \u5206\u53c9\u653b\u51fb\u4e0e\u786e\u8ba4\u673a\u5236","text":"<ul> <li> <p>\u4e3a\u907f\u514d\u5206\u53c9\u653b\u51fb\uff08forking attack\uff09\u5bfc\u81f4\u4ea4\u6613\u56de\u6eda\uff0c\u6bd4\u7279\u5e01\u91c7\u7528\u4e86\u591a\u786e\u8ba4\u673a\u5236\u3002\u5728\u6bd4\u7279\u5e01\u7cfb\u7edf\u4e2d\uff0c\u7f3a\u7701\u7684\u662f\u516d\u4e2a\u786e\u8ba4\uff08six confirmation\uff09\u3002\u8fd9\u610f\u5473\u7740\u4e00\u7b14\u4ea4\u6613\u9700\u8981\u5728\u533a\u5757\u94fe\u4e0a\u88ab\u516d\u4e2a\u65b0\u533a\u5757\u786e\u8ba4\u540e\uff0c\u624d\u88ab\u8ba4\u4e3a\u662f\u76f8\u5bf9\u5b89\u5168\u3001\u4e0d\u53ef\u64a4\u9500\u7684\u3002\u7136\u800c\uff0c\u6240\u8c13\u7684 irrevocable ledger\uff08\u4e0d\u53ef\u64a4\u9500\u8d26\u672c\uff09\u53ea\u662f\u4e00\u79cd\u6982\u7387\u4e0a\u7684\u4fdd\u8bc1\uff0c\u5e76\u4e0d\u80fd\u7edd\u5bf9\u907f\u514d\u5206\u53c9\u653b\u51fb\u7684\u5f71\u54cd\u3002</p> </li> <li> <p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u96f6\u786e\u8ba4\uff08zero confirmation\uff09\u7684\u4ea4\u6613\u4e5f\u6bd4\u8f83\u666e\u904d\u3002\u867d\u7136\u8fd9\u79cd\u4ea4\u6613\u6ca1\u6709\u7ecf\u8fc7\u591a\u4e2a\u533a\u5757\u7684\u786e\u8ba4\uff0c\u4f46\u7531\u4e8e\u5206\u53c9\u653b\u51fb\u7684\u4ee3\u4ef7\u662f\u4e00\u4e2a\u51fa\u5757\u5956\u52b1\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u653b\u51fb\u8005\u6765\u8bf4\uff0c\u5b9e\u65bd\u5206\u53c9\u653b\u51fb\u7684\u6210\u672c\u8f83\u9ad8\uff0c\u6240\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4e5f\u80fd\u7ef4\u6301\u4ea4\u6613\u7684\u76f8\u5bf9\u7a33\u5b9a\u6027\u3002</p> </li> </ul>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/4.%E5%AE%9E%E7%8E%B0/#4_1","title":"4. \u6076\u610f\u8282\u70b9\u4e0e\u533a\u5757\u9650\u5236","text":"<ul> <li>\u6076\u610f\u7684\u8282\u70b9\u53ef\u4ee5\u9009\u62e9\u4e0d\u5c06\u5408\u6cd5\u7684\u4ea4\u6613\u5199\u5165\u533a\u5757\uff0c\u4e0d\u8fc7\u8fd9\u5bf9\u6574\u4e2a\u7cfb\u7edf\u7684\u5f71\u54cd\u76f8\u5bf9\u4e0d\u5927\u3002\u56e0\u4e3a\u6bcf\u4e2a\u533a\u5757\u7684\u5927\u5c0f\u662f\u6709\u9650\u5236\u7684\uff0c\u6700\u5927\u4e3a 1M\u3002\u8fd9\u4e00\u9650\u5236\u4e00\u65b9\u9762\u9632\u6b62\u4e86\u5355\u4e2a\u533a\u5757\u5305\u542b\u8fc7\u591a\u6570\u636e\u5bfc\u81f4\u7f51\u7edc\u4f20\u8f93\u548c\u5904\u7406\u8d1f\u62c5\u8fc7\u91cd\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u9650\u5236\u4e86\u6076\u610f\u8282\u70b9\u901a\u8fc7\u5927\u91cf\u586b\u5145\u65e0\u6548\u6570\u636e\u6765\u7834\u574f\u7cfb\u7edf\u7684\u53ef\u80fd\u6027\u3002</li> </ul>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/4.%E5%AE%9E%E7%8E%B0/#5-selfish-mining","title":"5. Selfish Mining\uff08\u81ea\u79c1\u6316\u77ff\uff09","text":"<p>\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u77ff\u5de5\u6316\u5230\u4e00\u4e2a\u533a\u5757\u540e\u4f1a\u7acb\u5373\u53d1\u5e03\u3002\u7136\u800c\uff0cSelfish mining\u53ef\u88ab\u7528\u4e8e\u5206\u53c9\u653b\u51fb\uff0c\u4f46\u524d\u63d0\u662f\u6076\u610f\u8282\u70b9\u7684\u7b97\u529b\u5927\u4e8e 51%\u3002\u91c7\u7528\u81ea\u79c1\u6316\u77ff\u7b56\u7565\u65f6\uff0c\u6076\u610f\u8282\u70b9\u6316\u5230\u533a\u5757\u540e\u4e0d\u4f1a\u7acb\u5373\u53d1\u5e03\uff0c\u800c\u662f\u7ee7\u7eed\u5728\u8fd9\u4e2a\u79c1\u6709\u7684\u5206\u652f\u4e0a\u6316\u77ff\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u51cf\u5c11\u4e86\u4e0e\u5176\u4ed6\u77ff\u5de5\u7684\u7ade\u4e89\uff0c\u56e0\u4e3a\u5176\u4ed6\u77ff\u5de5\u4e0d\u77e5\u9053\u8fd9\u4e2a\u79c1\u6709\u5206\u652f\u7684\u5b58\u5728\uff0c\u4ecd\u5728\u539f\u6709\u7684\u94fe\u4e0a\u6316\u77ff\u3002\u4f46\u98ce\u9669\u5728\u4e8e\uff0c\u5982\u679c\u5176\u4ed6\u77ff\u5de5\u5728\u539f\u94fe\u4e0a\u4e5f\u6316\u51fa\u4e86\u8db3\u591f\u591a\u7684\u533a\u5757\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51fa\u73b0\u7b49\u957f\u94fe\u7684\u60c5\u51b5\uff0c\u4f7f\u5f97\u6574\u4e2a\u533a\u5757\u94fe\u7f51\u7edc\u4ea7\u751f\u6df7\u4e71\uff0c\u5f71\u54cd\u7cfb\u7edf\u7684\u6b63\u5e38\u8fd0\u884c\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/5.%E7%BD%91%E7%BB%9C/","title":"5. \u7f51\u7edc","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/5.%E7%BD%91%E7%BB%9C/#5","title":"5. \u7f51\u7edc","text":"<p> \u7ea6 910 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/5.%E7%BD%91%E7%BB%9C/#1-p2p","title":"1. P2P \u67b6\u6784\u4e0e\u5e94\u7528\u5c42","text":"<p>\u6bd4\u7279\u5e01\u533a\u5757\u94fe\u91c7\u7528 P2P\uff08\u70b9\u5bf9\u70b9\uff09\u7f51\u7edc\u67b6\u6784\uff0c\u5728\u5e94\u7528\u5c42\u5b9e\u73b0\u4e86\u6bd4\u7279\u5e01\u533a\u5757\u94fe\u7684\u5404\u79cd\u529f\u80fd\u3002\u8fd9\u79cd\u67b6\u6784\u6452\u5f03\u4e86\u4f20\u7edf\u7684\u4e2d\u5fc3\u670d\u52a1\u5668\u6a21\u5f0f\uff0c\u4f7f\u5f97\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u80fd\u591f\u76f4\u63a5\u76f8\u4e92\u901a\u4fe1\uff0c\u6781\u5927\u5730\u589e\u5f3a\u4e86\u7cfb\u7edf\u7684\u53bb\u4e2d\u5fc3\u5316\u7279\u6027\u548c\u6297\u653b\u51fb\u6027\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/5.%E7%BD%91%E7%BB%9C/#2","title":"2. \u5e95\u5c42\u7f51\u7edc\u5e03\u5c40","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/5.%E7%BD%91%E7%BB%9C/#p2p","title":"P2P \u8986\u76d6\u7f51\u7edc","text":"<ul> <li>\u6bd4\u7279\u5e01\u7f51\u7edc\u7684\u5e95\u5c42\u91c7\u7528 P2P \u8986\u76d6\u7f51\u7edc\u5e03\u5c40\u3002\u5728\u8fd9\u4e2a\u7f51\u7edc\u4e2d\uff0c\u867d\u7136\u6ca1\u6709\u4f20\u7edf\u610f\u4e49\u4e0a\u5177\u6709\u7279\u6b8a\u6743\u9650\u7684 \u201csuper node\uff08\u8d85\u7ea7\u8282\u70b9\uff09\u201d \u6216 \u201cmaster node\uff08\u4e3b\u8282\u70b9\uff09\u201d\uff0c\u6bd4\u7279\u5e01\u4e2d\u7684\u6240\u6709\u8282\u70b9\u5728\u7406\u8bba\u4e0a\u90fd\u662f\u5e73\u7b49\u7684\uff0c\u5b83\u4eec\u5171\u540c\u534f\u4f5c\u7ef4\u62a4\u6574\u4e2a\u533a\u5757\u94fe\u7f51\u7edc\u7684\u8fd0\u884c\u3002</li> <li>\u7136\u800c\uff0c\u7f51\u7edc\u4e2d\u5b58\u5728 \u201cseed node\uff08\u79cd\u5b50\u8282\u70b9\uff09\u201d\uff0c\u79cd\u5b50\u8282\u70b9\u7684\u4f5c\u7528\u81f3\u5173\u91cd\u8981\uff0c\u5b83\u4eec\u6709\u5229\u4e8e\u7a7f\u900f\u9632\u706b\u5899\u3002</li> <li> <p>\u65b0\u52a0\u5165\u7f51\u7edc\u7684\u8282\u70b9\u53ef\u4ee5\u901a\u8fc7\u8fde\u63a5\u79cd\u5b50\u8282\u70b9\u83b7\u53d6\u7f51\u7edc\u4e2d\u5176\u4ed6\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u9010\u6b65\u878d\u5165\u6574\u4e2a P2P \u7f51\u7edc\u3002</p> </li> <li> <p>\u8fd9\u79cd\u7f51\u7edc\u5e03\u5c40\u65b9\u5f0f\u7684\u7279\u70b9\uff1asimple, robust, but not efficient\u3002</p> </li> <li>\u4f8b\u5982\uff0c\u91c7\u7528 \u201cflooding\uff08\u6d2a\u6cdb\uff09\u201d \u65b9\u5f0f\u8fdb\u884c\u4fe1\u606f\u4f20\u64ad\u3002\u5f53\u4e00\u4e2a\u8282\u70b9\u7b2c\u4e00\u6b21\u542c\u5230\u67d0\u4e2a\u6d88\u606f\uff08\u5982\u65b0\u533a\u5757\u6216\u65b0\u4ea4\u6613\uff09\u7684\u65f6\u5019\uff0c\u4f1a\u628a\u5b83\u4f20\u64ad\u7ed9\u5176\u4ed6\u8282\u70b9\uff0c\u540c\u65f6\u8bb0\u5f55\u5df2\u4f20\u64ad\u7684\u60c5\u51b5\u3002</li> <li>\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u9009\u62e9\u5c06\u6d88\u606f\u4f20\u64ad\u7ed9\u54ea\u4e9b\u90bb\u5c45\u8282\u70b9\u662f\u968f\u673a\u7684\u3002\u8fd9\u79cd\u4f20\u64ad\u65b9\u5f0f\u867d\u7136\u80fd\u4fdd\u8bc1\u4fe1\u606f\u5728\u7f51\u7edc\u4e2d\u5feb\u901f\u6269\u6563\uff0c\u4f46\u4f1a\u5e26\u6765\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982 \u201crace condition\u201d\u3002\u5f53\u5dee\u4e0d\u591a\u540c\u65f6\u6709\u591a\u4e2a\u8282\u70b9\u53d1\u5e03\u4ea4\u6613\u65f6\uff0c\u7531\u4e8e\u7f51\u7edc\u4f20\u64ad\u7684\u968f\u673a\u6027\u548c\u5ef6\u8fdf\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u540c\u8282\u70b9\u63a5\u6536\u5230\u4ea4\u6613\u7684\u987a\u5e8f\u4e0d\u4e00\u81f4\uff0c\u8fdb\u800c\u5f71\u54cd\u5b83\u4eec\u5bf9\u533a\u5757\u94fe\u72b6\u6001\u7684\u5224\u65ad\u3002</li> </ul>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/5.%E7%BD%91%E7%BB%9C/#3","title":"3. \u7f51\u7edc\u4f20\u64ad\u4e0e\u6700\u957f\u5408\u6cd5\u94fe\u95ee\u9898","text":"<p>\u5728\u6bd4\u7279\u5e01\u7f51\u7edc\u4e2d\uff0c\u7f51\u7edc\u4f20\u64ad\u5b58\u5728\u4e0d\u53ef\u907f\u514d\u7684\u5ef6\u8fdf\u3002\u7531\u4e8e\u8282\u70b9\u4e4b\u95f4\u7684\u6d88\u606f\u4f20\u9012\u5e76\u975e\u77ac\u95f4\u5b8c\u6210\uff0c\u5f53\u6700\u957f\u5408\u6cd5\u94fe\u88ab\u53e6\u4e00\u6761\u94fe\u53d6\u4ee3\u65f6\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u590d\u6742\u7684\u60c5\u51b5\u3002\u6bcf\u4e2a\u8282\u70b9\u5728\u5904\u7406\u4ea4\u6613\u548c\u533a\u5757\u65f6\uff0c\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u5f85\u5904\u7406\u4ea4\u6613\u7684\u96c6\u5408\u3002 \u5982\u679c\u5728\u6700\u957f\u5408\u6cd5\u94fe\u5207\u6362\u8fc7\u7a0b\u4e2d\uff0c\u5404\u4e2a\u8282\u70b9\u5220\u6389\u7684\u96c6\u5408\u91cc\u7684\u4e00\u4e9b\u4ea4\u6613\u5728\u53e6\u4e00\u6761\u65b0\u7684\u94fe\u91cc\u8fd8\u6ca1\u88ab\u5199\u5165\uff0c\u5c31\u53ef\u80fd\u5bfc\u81f4\u8fd9\u4e9b\u4ea4\u6613\u5904\u4e8e\u4e00\u79cd\u6df7\u4e71\u7684\u72b6\u6001\u3002 \u56e0\u4e3a\u4e0d\u540c\u8282\u70b9\u5bf9\u4ea4\u6613\u7684\u5904\u7406\u8fdb\u5ea6\u548c\u8ba4\u77e5\u4e0d\u540c\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u90e8\u5206\u8282\u70b9\u8ba4\u4e3a\u67d0\u4e9b\u4ea4\u6613\u5df2\u88ab\u786e\u8ba4\uff0c\u800c\u5b9e\u9645\u4e0a\u8fd9\u4e9b\u4ea4\u6613\u5728\u65b0\u7684 \u201c\u6743\u5a01\u201d \u94fe\u4e2d\u5e76\u672a\u88ab\u6b63\u786e\u8bb0\u5f55\u7684\u60c5\u51b5\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/5.%E7%BD%91%E7%BB%9C/#4","title":"4. \u7f51\u7edc\u8fd0\u884c\u7684\u5b9e\u9645\u95ee\u9898","text":"<p>\u6bd4\u7279\u5e01\u7f51\u7edc\u5728\u5b9e\u9645\u8fd0\u884c\u4e2d\u9762\u4e34\u8bf8\u591a\u6311\u6218\uff0c\u56e0\u4e3a\u6709\u5f88\u591a\u8282\u70b9\u4e0d\u4e00\u5b9a\u5b8c\u5168\u6309\u7167\u89c4\u5219\u53bb\u6267\u884c\u3002 \u5c3d\u7ba1\u6bd4\u7279\u5e01\u7f51\u7edc\u8bbe\u8ba1\u4e86\u4e00\u5957\u5b8c\u5584\u7684\u534f\u8bae\u548c\u5171\u8bc6\u673a\u5236\uff0c\u4f46\u5728\u5b9e\u9645\u7684\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\uff0c\u7531\u4e8e\u8282\u70b9\u7684\u591a\u6837\u6027\uff08\u5305\u62ec\u786c\u4ef6\u3001\u8f6f\u4ef6\u7248\u672c\u3001\u7f51\u7edc\u73af\u5883\u7b49\u65b9\u9762\u7684\u5dee\u5f02\uff09\u4ee5\u53ca\u53ef\u80fd\u5b58\u5728\u7684\u6076\u610f\u8282\u70b9\uff0c\u4f7f\u5f97\u7f51\u7edc\u65e0\u6cd5\u505a\u5230\u7edd\u5bf9\u7684\u5b8c\u7f8e\u8fd0\u884c\u3002 \u7f51\u7edc\u53ea\u80fd\u4ee5 \u201cbest effort\uff08\u5c3d\u529b\u800c\u4e3a\uff09\u201d \u7684\u65b9\u5f0f\u6765\u4f20\u64ad\u4fe1\u606f\u548c\u7ef4\u62a4\u533a\u5757\u94fe\u7684\u4e00\u81f4\u6027\uff0c\u5373\u5728\u73b0\u6709\u6761\u4ef6\u4e0b\u5c3d\u53ef\u80fd\u4fdd\u8bc1\u5927\u591a\u6570\u8282\u70b9\u80fd\u591f\u9075\u5faa\u89c4\u5219\uff0c\u4f7f\u7f51\u7edc\u6b63\u5e38\u8fd0\u8f6c\uff0c\u4f46\u65e0\u6cd5\u5b8c\u5168\u6d88\u9664\u56e0\u5404\u79cd\u610f\u5916\u60c5\u51b5\u6216\u6076\u610f\u884c\u4e3a\u5bfc\u81f4\u7684\u5c40\u90e8\u6df7\u4e71\u6216\u4e0d\u4e00\u81f4\u95ee\u9898\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/6.%E6%8C%96%E7%9F%BF%E9%9A%BE%E5%BA%A6/","title":"6. \u6316\u77ff\u96be\u5ea6","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/6.%E6%8C%96%E7%9F%BF%E9%9A%BE%E5%BA%A6/#6","title":"6. \u6316\u77ff\u96be\u5ea6","text":"<p> \u7ea6 850 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/6.%E6%8C%96%E7%9F%BF%E9%9A%BE%E5%BA%A6/#1","title":"1. \u96be\u5ea6\u4e0e\u76ee\u6807\u503c\u5173\u7cfb","text":"<p>\u5728\u6bd4\u7279\u5e01\u6316\u77ff\u673a\u5236\u4e2d\uff0c\u6316\u77ff\u96be\u5ea6\u4e0etarget\u7d27\u5bc6\u76f8\u5173\uff0c\u4e14\u5448\u73b0\u51fa\u76ee\u6807\u503c\u8d8a\u5c0f\uff0c\u6316\u77ff\u96be\u5ea6\u8d8a\u5927\u7684\u5173\u7cfb\u3002\u8fd9\u662f\u56e0\u4e3a\u76ee\u6807\u503c\u5b9e\u9645\u4e0a\u662f\u5728\u9650\u5b9a\u54c8\u5e0c\u51fd\u6570\u8f93\u51fa\u7ed3\u679c\u7684\u8303\u56f4\u3002 \u4ee5 SHA - 256 \u54c8\u5e0c\u7b97\u6cd5\u4e3a\u4f8b\uff0c\u5176\u8f93\u51fa\u7a7a\u95f4\u7406\u8bba\u4e0a\u662f2\u7684256\u6b21\u79cd\u53ef\u80fd\u7684\u54c8\u5e0c\u503c\u3002\u8c03\u6574\u96be\u5ea6\u672c\u8d28\u4e0a\u5c31\u662f\u8c03\u6574\u6ee1\u8db3\u6761\u4ef6\u7684\u8f93\u51fa\u7a7a\u95f4\u5728\u6574\u4e2a\u00a0\u00a0\u8f93\u5165\u7a7a\u95f4\u4e2d\u7684\u5360\u6bd4\u3002\u5f53\u76ee\u6807\u503c\u53d8\u5c0f\u65f6\uff0c\u610f\u5473\u7740\u6ee1\u8db3\u00a0\u00a0\u6761\u4ef6\u7684\u54c8\u5e0c\u503c\u8303\u56f4\u53d8\u7a84\uff0c\u77ff\u5de5\u9700\u8981\u5c1d\u8bd5\u66f4\u591a\u4e0d\u540c\u7684\u8f93\u5165\uff08\u901a\u8fc7\u4e0d\u65ad\u6539\u53d8 nonce \u503c\uff09\uff0c\u624d\u80fd\u627e\u5230\u7b26\u5408\u8981\u6c42\u7684\u54c8\u5e0c\u503c\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u6316\u77ff\u7684\u96be\u5ea6\u3002</p> <p>\u901a\u8fc7\u516c\u5f0f\u00a0\u00a0\u53ef\u4ee5\u66f4\u76f4\u89c2\u5730\u7406\u89e3\u96be\u5ea6\u4e0e\u76ee\u6807\u503c\u7684\u5173\u7cfb\uff0c\u5373\u96be\u5ea6\u4e0e\u76ee\u6807\u9608\u503c\u6210\u53cd\u6bd4\u3002\u76ee\u6807\u503c\u8d8a\u5c0f\uff0c\u8ba1\u7b97\u5f97\u51fa\u7684\u96be\u5ea6\u503c\u8d8a\u5927\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/6.%E6%8C%96%E7%9F%BF%E9%9A%BE%E5%BA%A6/#2","title":"2. \u51fa\u5757\u65f6\u95f4\u4e0e\u5206\u53c9\u98ce\u9669","text":"<p>\u51fa\u5757\u65f6\u95f4\u662f\u6bd4\u7279\u5e01\u7f51\u7edc\u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u53c2\u6570\u3002\u5982\u679c\u51fa\u5757\u65f6\u95f4\u592a\u77ed\uff0c\u4f1a\u5bfc\u81f4\u5206\u53c9\u6210\u4e3a\u5e38\u6001\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u8f83\u77ed\u7684\u65f6\u95f4\u5185\uff0c\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u77ff\u5de5\u51e0\u4e4e\u540c\u65f6\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u533a\u5757\uff0c\u8fd9\u4e9b\u533a\u5757\u90fd\u8bd5\u56fe\u5728\u533a\u5757\u94fe\u4e0a\u6dfb\u52a0\u81ea\u5df1\u7684\u7248\u672c\uff0c\u4ece\u800c\u5f62\u6210\u4e0d\u540c\u7684\u5206\u652f\u3002\u8fc7\u591a\u7684\u5206\u53c9\u4f1a\u5371\u53ca\u5230\u7cfb\u7edf\u7684\u5b89\u5168\uff0c\u56e0\u4e3a\u5f53\u6076\u610f\u77ff\u5de5\u638c\u63e1\u8d85\u8fc7 51% \u7684\u7b97\u529b\u65f6\uff0851% attack\uff09\uff0c\u5c31\u6709\u53ef\u80fd\u5229\u7528\u5206\u53c9\u6765\u5b9e\u65bd\u5404\u79cd\u6076\u610f\u884c\u4e3a\uff0c\u4f8b\u5982\u53cc\u82b1\u653b\u51fb\u7b49\uff0c\u7834\u574f\u533a\u5757\u94fe\u7684\u4e00\u81f4\u6027\u548c\u4ea4\u6613\u7684\u4e0d\u53ef\u7be1\u6539\u6027\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/6.%E6%8C%96%E7%9F%BF%E9%9A%BE%E5%BA%A6/#3","title":"3. \u96be\u5ea6\u8c03\u6574\u673a\u5236","text":"<ul> <li>\u4e3a\u4e86\u907f\u514d\u51fa\u5757\u65f6\u95f4\u8fc7\u5feb\u6216\u8fc7\u6162\u5e26\u6765\u7684\u95ee\u9898\uff0c\u6bd4\u7279\u5e01\u7f51\u7edc\u91c7\u7528\u4e86\u6bcf 2016 \u4e2a\u533a\u5757\u8c03\u6574\u4e00\u6b21\u96be\u5ea6\u7684\u673a\u5236\u3002</li> <li>\u5177\u4f53\u7684\u8c03\u6574\u516c\u5f0f\u4e3a\uff1a<code>target = target * actualtime / expectedtime</code> \uff0c\u5176\u4e2d\u00a0<code>actualtime</code>\u662f\u6316\u6398\u4e0a\u4e00\u4e2a 2016 \u4e2a\u533a\u5757\u6240\u82b1\u8d39\u7684\u5b9e\u9645\u65f6\u95f4\uff0c\u00a0\u5219\u662f\u7406\u8bba\u4e0a\u6316\u6398 2016 \u4e2a\u533a\u5757\u5e94\u82b1\u8d39\u7684\u65f6\u95f4\uff08\u6309\u7167\u5e73\u5747 10 \u5206\u949f\u51fa\u4e00\u4e2a\u5757\u8ba1\u7b97\uff0c2016 \u4e2a\u533a\u5757\u7406\u8bba\u65f6\u95f4\u4e3a 20160 \u5206\u949f\uff09\u3002</li> <li>\u540c\u65f6\uff0c\u4e3a\u4e86\u9632\u6b62\u96be\u5ea6\u8c03\u6574\u5e45\u5ea6\u8fc7\u5927\u5bf9\u7f51\u7edc\u9020\u6210\u51b2\u51fb\uff0c\u89c4\u5b9a\u4e86\u76ee\u6807\u503c\u8c03\u6574\u7684\u8303\u56f4\uff0c\u6700\u5927\u4e3a\u539f\u6765\u7684 4 \u500d\uff0c\u6700\u5c0f\u4e3a\u539f\u6765\u7684 \u00bc \u500d\u3002</li> <li>\u5728\u5b9e\u9645\u9a8c\u8bc1\u65b0\u533a\u5757\u65f6\uff0c\u8282\u70b9\u4f1a\u68c0\u67e5\u533a\u5757\u5934\u4e2d\u7684<code>nBits</code>\u662f\u5426\u6b63\u786e\uff0c\u00a0<code>nBits</code>\u662f\u7528\u4e8e\u8868\u793a\u76ee\u6807\u503c\u7684\u4e00\u79cd\u7d27\u51d1\u7f16\u7801\u65b9\u5f0f\uff0c\u901a\u8fc7\u9a8c\u8bc1<code>nBits</code>\u6765\u786e\u8ba4\u8be5\u533a\u5757\u662f\u5426\u7b26\u5408\u5f53\u524d\u7684\u6316\u77ff\u96be\u5ea6\u8981\u6c42\u3002</li> </ul>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/6.%E6%8C%96%E7%9F%BF%E9%9A%BE%E5%BA%A6/#4","title":"4. \u6bd4\u7279\u5e01\u8bbe\u8ba1\u7684\u5408\u7406\u6027","text":"<ul> <li>\u6bd4\u7279\u5e01\u80fd\u591f\u53d6\u5f97\u6210\u529f\uff0c\u5176\u6316\u77ff\u96be\u5ea6\u7b49\u76f8\u5173\u8bbe\u8ba1\u53ef\u80fd\u662f\u539f\u56e0\u4e4b\u4e00\u3002\u4e2d\u672c\u806a\u5728\u8bbe\u8ba1\u6bd4\u7279\u5e01\u7684\u65f6\u5019\uff0c\u5bf9\u5404\u79cd\u53c2\u6570\u7684\u8bbe\u5b9a\u76f8\u5bf9\u4fdd\u5b88\uff0c\u867d\u7136\u6709\u4e9b\u53c2\u6570\u770b\u4f3c\u662f \u201c\u62cd\u8111\u888b\u60f3\u7684\u201d\uff0c\u4f46\u5b9e\u9645\u4e0a\u5374\u8f83\u4e3a\u5408\u7406\u3002</li> <li>\u8fd9\u79cd\u4fdd\u5b88\u7684\u8bbe\u8ba1\u4f7f\u5f97\u6bd4\u7279\u5e01\u7f51\u7edc\u5728\u9762\u5bf9\u5404\u79cd\u590d\u6742\u7684\u5b9e\u9645\u60c5\u51b5\u548c\u6f5c\u5728\u98ce\u9669\u65f6\uff0c\u5177\u5907\u4e86\u8f83\u597d\u7684\u9002\u5e94\u6027\u548c\u7a33\u5b9a\u6027\uff0c\u4e3a\u6bd4\u7279\u5e01\u7684\u957f\u671f\u7a33\u5b9a\u53d1\u5c55\u5960\u5b9a\u4e86\u57fa\u7840\u3002</li> <li>\u4f8b\u5982\uff0c\u96be\u5ea6\u8c03\u6574\u673a\u5236\u65e2\u4fdd\u8bc1\u4e86\u51fa\u5757\u65f6\u95f4\u7684\u76f8\u5bf9\u7a33\u5b9a\uff0c\u53c8\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u62b5\u5fa1\u4e86\u7b97\u529b\u653b\u51fb\uff0c\u7ef4\u62a4\u4e86\u7f51\u7edc\u7684\u5b89\u5168\u6027\u548c\u516c\u5e73\u6027\u3002</li> </ul>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/","title":"7. \u6316\u77ff","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#7","title":"7. \u6316\u77ff","text":"<p> \u7ea6 3236 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 16 \u5206\u949f</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#1","title":"1. \u5168\u8282\u70b9","text":"<ul> <li>\u6301\u7eed\u5728\u7ebf\uff1a\u5168\u8282\u70b9\u59cb\u7ec8\u4fdd\u6301\u5728\u7ebf\u72b6\u6001\uff0c\u786e\u4fdd\u80fd\u591f\u5b9e\u65f6\u53c2\u4e0e\u6bd4\u7279\u5e01\u7f51\u7edc\u7684\u5404\u9879\u6d3b\u52a8\uff0c\u4e0d\u4f1a\u9519\u8fc7\u4efb\u4f55\u91cd\u8981\u4fe1\u606f\u3002</li> <li>\u5b8c\u6574\u533a\u5757\u94fe\u7ef4\u62a4\uff1a\u5728\u672c\u5730\u786c\u76d8\u4e0a\u5b58\u50a8\u5e76\u7ef4\u62a4\u5b8c\u6574\u7684\u533a\u5757\u94fe\u4fe1\u606f\uff0c\u6db5\u76d6\u4ece\u521b\u4e16\u533a\u5757\u5230\u6700\u65b0\u533a\u5757\u7684\u6240\u6709\u6570\u636e\uff0c\u5305\u62ec\u533a\u5757\u5934\u548c\u533a\u5757\u4f53\u7684\u8be6\u7ec6\u5185\u5bb9\u3002\u8fd9\u4f7f\u5f97\u5168\u8282\u70b9\u80fd\u591f\u72ec\u7acb\u9a8c\u8bc1\u6574\u4e2a\u533a\u5757\u94fe\u7684\u5386\u53f2\u548c\u5f53\u524d\u72b6\u6001\u3002</li> <li>UTXO \u96c6\u5408\u7ba1\u7406\uff1a\u5728\u5185\u5b58\u4e2d\u7ef4\u62a4\u672a\u82b1\u8d39\u4ea4\u6613\u8f93\u51fa\uff08UTXO\uff09\u96c6\u5408\u3002UTXO \u96c6\u5408\u8bb0\u5f55\u4e86\u6240\u6709\u672a\u88ab\u82b1\u8d39\u7684\u4ea4\u6613\u8f93\u51fa\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5168\u8282\u70b9\u80fd\u591f\u5feb\u901f\u68c0\u9a8c\u4ea4\u6613\u7684\u6b63\u786e\u6027\u3002\u5f53\u65b0\u4ea4\u6613\u8fdb\u5165\u65f6\uff0c\u5168\u8282\u70b9\u53ef\u4ee5\u8fc5\u901f\u67e5\u770b\u4ea4\u6613\u8f93\u5165\u662f\u5426\u6765\u81ea\u6709\u6548\u7684 UTXO\uff0c\u4ece\u800c\u5224\u65ad\u4ea4\u6613\u662f\u5426\u5408\u6cd5\u3002</li> <li>\u4ea4\u6613\u76d1\u542c\u4e0e\u9a8c\u8bc1\uff1a\u6301\u7eed\u76d1\u542c\u6bd4\u7279\u5e01\u7f51\u7edc\u7684\u4ea4\u6613\u4fe1\u606f\uff0c\u5bf9\u6bcf\u4e2a\u63a5\u6536\u5230\u7684\u4ea4\u6613\u8fdb\u884c\u5408\u6cd5\u6027\u9a8c\u8bc1\u3002\u9a8c\u8bc1\u8fc7\u7a0b\u5305\u62ec\u68c0\u67e5\u4ea4\u6613\u7684\u7b7e\u540d\u662f\u5426\u6b63\u786e\u3001\u4ea4\u6613\u8f93\u5165\u662f\u5426\u5b58\u5728\u4e14\u672a\u88ab\u91cd\u590d\u82b1\u8d39\u3001\u4ea4\u6613\u8f93\u51fa\u662f\u5426\u7b26\u5408\u89c4\u5b9a\u7b49\u591a\u65b9\u9762\u5185\u5bb9\u3002</li> <li>\u4ea4\u6613\u6253\u5305\u51b3\u7b56\uff1a\u51b3\u5b9a\u54ea\u4e9b\u4ea4\u6613\u5c06\u88ab\u6253\u5305\u5230\u4e0b\u4e00\u4e2a\u533a\u5757\u4e2d\u3002\u5168\u8282\u70b9\u4f1a\u6839\u636e\u4e00\u5b9a\u7684\u89c4\u5219\uff0c\u5982\u4ea4\u6613\u8d39\u7528\u7684\u9ad8\u4f4e\u3001\u4ea4\u6613\u7684\u4f18\u5148\u7ea7\u7b49\u56e0\u7d20\uff0c\u4ece\u5185\u5b58\u6c60\u4e2d\u7684\u4f17\u591a\u4ea4\u6613\u4e2d\u9009\u62e9\u5408\u9002\u7684\u4ea4\u6613\u8fdb\u884c\u6253\u5305\uff0c\u4ee5\u6784\u5efa\u65b0\u7684\u533a\u5757\u3002</li> <li>\u533a\u5757\u76d1\u542c\u4e0e\u9a8c\u8bc1\uff1a\u76d1\u542c\u5176\u4ed6\u77ff\u5de5\u6316\u51fa\u6765\u7684\u533a\u5757\uff0c\u5bf9\u5176\u5408\u6cd5\u6027\u8fdb\u884c\u4e25\u683c\u9a8c\u8bc1\u3002\u9a8c\u8bc1\u5185\u5bb9\u5305\u62ec\u533a\u5757\u5934\u7684\u5404\u9879\u53c2\u6570\uff08\u5982\u7248\u672c\u53f7\u3001\u524d\u4e00\u4e2a\u533a\u5757\u5934\u54c8\u5e0c\u3001Merkle \u6839\u54c8\u5e0c\u3001\u76ee\u6807\u503c\u3001\u968f\u673a\u6570\u7b49\uff09\u662f\u5426\u6b63\u786e\uff0c\u533a\u5757\u4f53\u4e2d\u7684\u4ea4\u6613\u662f\u5426\u90fd\u5408\u6cd5\u4e14\u7b26\u5408\u89c4\u5219\u7b49\u3002</li> <li>\u6316\u77ff\u6d3b\u52a8\uff1a<ul> <li>\u94fe\u9009\u62e9\uff1a\u5728\u6316\u77ff\u8fc7\u7a0b\u4e2d\uff0c\u5168\u8282\u70b9\u9700\u8981\u51b3\u5b9a\u6cbf\u7740\u54ea\u6761\u94fe\u6316\u4e0b\u53bb\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5168\u8282\u70b9\u4f1a\u9009\u62e9\u5f53\u524d\u6700\u957f\u7684\u5408\u6cd5\u94fe\u8fdb\u884c\u6316\u77ff\uff0c\u56e0\u4e3a\u6700\u957f\u5408\u6cd5\u94fe\u4ee3\u8868\u4e86\u7f51\u7edc\u4e2d\u5927\u591a\u6570\u8282\u70b9\u8ba4\u53ef\u7684\u4ea4\u6613\u5386\u53f2\u548c\u72b6\u6001\u3002</li> <li>\u5206\u53c9\u5904\u7406\uff1a\u5f53\u51fa\u73b0\u7b49\u957f\u7684\u5206\u53c9\u65f6\uff0c\u5168\u8282\u70b9\u9700\u8981\u505a\u51fa\u9009\u62e9\u3002\u4e00\u822c\u4f1a\u4f18\u5148\u9009\u62e9\u5305\u542b\u66f4\u591a\u5de5\u4f5c\u91cf\uff08\u5373\u6316\u77ff\u96be\u5ea6\u66f4\u9ad8\uff09\u7684\u5206\u53c9\uff0c\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u8be5\u5206\u53c9\u80cc\u540e\u6295\u5165\u4e86\u66f4\u591a\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u66f4\u6709\u53ef\u80fd\u662f\u5408\u6cd5\u7684\u3002\u5982\u679c\u4e24\u4e2a\u5206\u53c9\u7684\u5de5\u4f5c\u91cf\u76f8\u540c\uff0c\u5168\u8282\u70b9\u53ef\u80fd\u4f1a\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u5206\u53c9\u7ee7\u7eed\u6316\u77ff\uff0c\u76f4\u5230\u5176\u4e2d\u4e00\u4e2a\u5206\u53c9\u6210\u4e3a\u66f4\u957f\u7684\u94fe\u3002</li> </ul> </li> </ul>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#2","title":"2. \u8f7b\u8282\u70b9","text":"<ul> <li>\u975e\u6301\u7eed\u5728\u7ebf\uff1a\u8f7b\u8282\u70b9\u5e76\u975e\u4e00\u76f4\u5728\u7ebf\uff0c\u5b83\u53ef\u4ee5\u6839\u636e\u7528\u6237\u9700\u6c42\u968f\u65f6\u8fde\u63a5\u5230\u6bd4\u7279\u5e01\u7f51\u7edc\uff0c\u83b7\u53d6\u6240\u9700\u4fe1\u606f\u540e\u518d\u65ad\u5f00\u8fde\u63a5\uff0c\u8fd9\u79cd\u7279\u6027\u4f7f\u5f97\u8f7b\u8282\u70b9\u66f4\u52a0\u7075\u6d3b\uff0c\u9002\u5408\u8d44\u6e90\u6709\u9650\u6216\u5bf9\u5b9e\u65f6\u6027\u8981\u6c42\u4e0d\u9ad8\u7684\u8bbe\u5907\u548c\u573a\u666f\u3002</li> <li>\u90e8\u5206\u533a\u5757\u94fe\u5b58\u50a8\uff1a\u4e0d\u9700\u8981\u4fdd\u5b58\u6574\u4e2a\u533a\u5757\u94fe\uff0c\u53ea\u9700\u8981\u4fdd\u5b58\u6bcf\u4e2a\u533a\u5757\u7684\u5757\u5934\u4fe1\u606f\u3002\u533a\u5757\u5934\u5305\u542b\u4e86\u533a\u5757\u7684\u5173\u952e\u5143\u6570\u636e\uff0c\u5982\u7248\u672c\u53f7\u3001\u524d\u4e00\u4e2a\u533a\u5757\u5934\u54c8\u5e0c\u3001Merkle \u6839\u54c8\u5e0c\u3001\u76ee\u6807\u503c\u3001\u968f\u673a\u6570\u7b49\uff0c\u901a\u8fc7\u8fd9\u4e9b\u4fe1\u606f\uff0c\u8f7b\u8282\u70b9\u53ef\u4ee5\u53c2\u4e0e\u7b80\u5355\u7684\u533a\u5757\u94fe\u9a8c\u8bc1\u548c\u540c\u6b65\u64cd\u4f5c\u3002</li> <li>\u76f8\u5173\u4ea4\u6613\u4fdd\u5b58\uff1a\u4ec5\u4fdd\u5b58\u4e0e\u81ea\u5df1\u76f8\u5173\u7684\u4ea4\u6613\uff0c\u800c\u4e0d\u662f\u5168\u90e8\u4ea4\u6613\u3002\u8fd9\u5927\u5927\u51cf\u5c11\u4e86\u5b58\u50a8\u9700\u6c42\uff0c\u4f7f\u5f97\u8f7b\u8282\u70b9\u80fd\u591f\u5728\u8d44\u6e90\u53d7\u9650\u7684\u8bbe\u5907\uff08\u5982\u624b\u673a\u3001\u4f4e\u914d\u7f6e\u7535\u8111\u7b49\uff09\u4e0a\u8fd0\u884c\u3002</li> <li>\u4ea4\u6613\u9a8c\u8bc1\u5c40\u9650\uff1a\u7531\u4e8e\u7f3a\u4e4f\u5b8c\u6574\u7684\u533a\u5757\u94fe\u548c\u4ea4\u6613\u6570\u636e\uff0c\u8f7b\u8282\u70b9\u65e0\u6cd5\u68c0\u9a8c\u5927\u591a\u6570\u4ea4\u6613\u7684\u5408\u6cd5\u6027\uff0c\u53ea\u80fd\u5bf9\u4e0e\u81ea\u5df1\u76f8\u5173\u7684\u90a3\u4e9b\u4ea4\u6613\u8fdb\u884c\u6709\u9650\u7684\u9a8c\u8bc1\u3002\u4f8b\u5982\uff0c\u8f7b\u8282\u70b9\u53ef\u4ee5\u9a8c\u8bc1\u81ea\u5df1\u53d1\u8d77\u6216\u63a5\u6536\u7684\u4ea4\u6613\u7684\u7b7e\u540d\u662f\u5426\u6b63\u786e\uff0c\u4f46\u5bf9\u4e8e\u5176\u4ed6\u7528\u6237\u4e4b\u95f4\u7684\u4ea4\u6613\uff0c\u5b83\u65e0\u6cd5\u8fdb\u884c\u5168\u9762\u7684\u9a8c\u8bc1\u3002</li> <li>\u533a\u5757\u9a8c\u8bc1\u80fd\u529b\u6709\u9650\uff1a\u65e0\u6cd5\u68c0\u6d4b\u7f51\u4e0a\u53d1\u5e03\u7684\u533a\u5757\u7684\u6b63\u786e\u6027\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u5b8c\u6574\u7684\u4ea4\u6613\u6570\u636e\u6765\u9a8c\u8bc1\u533a\u5757\u4f53\u4e2d\u7684\u4ea4\u6613\u3002\u7136\u800c\uff0c\u8f7b\u8282\u70b9\u53ef\u4ee5\u9a8c\u8bc1\u6316\u77ff\u7684\u96be\u5ea6\uff0c\u901a\u8fc7\u68c0\u67e5\u533a\u5757\u5934\u4e2d\u7684\u76ee\u6807\u503c\u548c\u968f\u673a\u6570\uff0c\u5224\u65ad\u8be5\u533a\u5757\u662f\u5426\u6ee1\u8db3\u5f53\u524d\u7684\u6316\u77ff\u96be\u5ea6\u8981\u6c42\u3002</li> <li>\u6700\u957f\u94fe\u68c0\u6d4b\uff1a\u8f7b\u8282\u70b9\u53ea\u80fd\u68c0\u6d4b\u54ea\u4e2a\u662f\u6700\u957f\u94fe\uff0c\u4f46\u65e0\u6cd5\u786e\u5b9a\u54ea\u4e2a\u662f\u6700\u957f\u5408\u6cd5\u94fe\u3002\u8fd9\u662f\u56e0\u4e3a\u5b83\u7f3a\u4e4f\u9a8c\u8bc1\u6240\u6709\u4ea4\u6613\u548c\u533a\u5757\u5b8c\u6574\u6027\u7684\u80fd\u529b\uff0c\u53ea\u80fd\u6839\u636e\u63a5\u6536\u5230\u7684\u533a\u5757\u5934\u4fe1\u606f\u6765\u5224\u65ad\u94fe\u7684\u957f\u5ea6\u3002\u5728\u5b58\u5728\u5206\u53c9\u7684\u60c5\u51b5\u4e0b\uff0c\u8f7b\u8282\u70b9\u53ef\u80fd\u4f1a\u8ddf\u968f\u6700\u957f\u94fe\uff0c\u4f46\u8fd9\u6761\u94fe\u4e0d\u4e00\u5b9a\u662f\u5b8c\u5168\u5408\u6cd5\u7684\u3002</li> </ul>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#3","title":"3. \u6bd4\u7279\u5e01\u7684\u5b89\u5168\u6027\u4fdd\u8bc1","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#31","title":"3.1 \u5bc6\u7801\u5b66","text":"<ul> <li>\u6bd4\u7279\u5e01\u7684\u5b89\u5168\u6027\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4f9d\u8d56\u4e8e\u5bc6\u7801\u5b66\u6280\u672f\u3002</li> <li>\u975e\u5bf9\u79f0\u516c\u79c1\u94a5\u52a0\u5bc6\u4f53\u7cfb\u786e\u4fdd\u4e86\u522b\u4eba\u4e0d\u4f1a\u4f2a\u9020\u4f60\u7684\u7b7e\u540d\u3002\u5728\u6bd4\u7279\u5e01\u4ea4\u6613\u4e2d\uff0c\u4ea4\u6613\u53d1\u8d77\u8005\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u4ea4\u6613\u8fdb\u884c\u7b7e\u540d\uff0c\u5176\u4ed6\u8282\u70b9\u5219\u4f7f\u7528\u5176\u516c\u94a5\u6765\u9a8c\u8bc1\u7b7e\u540d\u7684\u771f\u5b9e\u6027\u3002\u53ea\u6709\u62e5\u6709\u6b63\u786e\u79c1\u94a5\u7684\u7528\u6237\u624d\u80fd\u5bf9\u4ea4\u6613\u8fdb\u884c\u6709\u6548\u7b7e\u540d\uff0c\u8fd9\u5c31\u4fdd\u8bc1\u4e86\u4e0d\u4f1a\u6709\u4eba\u672a\u7ecf\u6388\u6743\u8f6c\u8d70\u4f60\u7684\u94b1\u3002</li> <li>\u7136\u800c\uff0c\u8fd9\u79cd\u5b89\u5168\u6027\u4fdd\u969c\u7684\u524d\u63d0\u662f\u7f51\u7edc\u4e2d\u7684\u5927\u591a\u6570\u8282\u70b9\u662f\u8bda\u5b9e\u53ef\u9760\u7684\u3002\u5982\u679c\u5927\u591a\u6570\u8282\u70b9\u88ab\u6076\u610f\u63a7\u5236\uff0c\u90a3\u4e48\u6574\u4e2a\u5bc6\u7801\u5b66\u4f53\u7cfb\u7684\u5b89\u5168\u6027\u5c06\u53d7\u5230\u5a01\u80c1\u3002</li> </ul>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#32","title":"3.2 \u5171\u8bc6\u673a\u5236","text":"<ul> <li>\u5171\u8bc6\u673a\u5236\u662f\u6bd4\u7279\u5e01\u5b89\u5168\u6027\u7684\u53e6\u4e00\u5927\u652f\u67f1\u3002</li> <li>\u901a\u8fc7\u5171\u8bc6\u673a\u5236\uff0c\u6bd4\u7279\u5e01\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u80fd\u591f\u5c31\u533a\u5757\u94fe\u7684\u72b6\u6001\u548c\u4ea4\u6613\u7684\u6709\u6548\u6027\u8fbe\u6210\u4e00\u81f4\u3002</li> <li>\u4f8b\u5982\uff0c\u5de5\u4f5c\u91cf\u8bc1\u660e\uff08PoW\uff09\u673a\u5236\u8981\u6c42\u77ff\u5de5\u901a\u8fc7\u5927\u91cf\u7684\u8ba1\u7b97\u6765\u89e3\u51b3\u590d\u6742\u7684\u6570\u5b66\u96be\u9898\uff08\u6316\u77ff\uff09\uff0c\u53ea\u6709\u6210\u529f\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u54c8\u5e0c\u503c\u7684\u77ff\u5de5\u624d\u80fd\u521b\u5efa\u65b0\u533a\u5757\u5e76\u83b7\u5f97\u5956\u52b1\u3002</li> <li>\u8fd9\u79cd\u673a\u5236\u4fdd\u8bc1\u4e86\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6700\u957f\u5408\u6cd5\u94fe\u662f\u7531\u8bda\u5b9e\u77ff\u5de5\u901a\u8fc7\u5927\u91cf\u7684\u8ba1\u7b97\u8d44\u6e90\u6295\u5165\u5f62\u6210\u7684\uff0c\u6076\u610f\u653b\u51fb\u8005\u8981\u60f3\u7be1\u6539\u533a\u5757\u94fe\u6570\u636e\uff0c\u9700\u8981\u6295\u5165\u8d85\u8fc7\u7f51\u7edc\u4e2d\u8bda\u5b9e\u8282\u70b9\u603b\u548c\u7684\u7b97\u529b\uff0c\u8fd9\u5728\u73b0\u5b9e\u4e2d\u662f\u975e\u5e38\u56f0\u96be\u7684\u3002</li> </ul>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#4","title":"4. \u6316\u77ff\u7684\u8bbe\u5907","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#41-cpu","title":"4.1 CPU \u6316\u77ff","text":"<p>\u4f7f\u7528\u4e2d\u592e\u5904\u7406\u5668\uff08CPU\uff09\u8fdb\u884c\u6316\u77ff\u5728\u6bd4\u7279\u5e01\u53d1\u5c55\u521d\u671f\u8f83\u4e3a\u5e38\u89c1\uff0c\u4f46\u968f\u7740\u6bd4\u7279\u5e01\u7f51\u7edc\u7684\u53d1\u5c55\u548c\u6316\u77ff\u96be\u5ea6\u7684\u589e\u52a0\uff0cCPU \u6316\u77ff\u53d8\u5f97\u6781\u4e0d\u5212\u7b97\u3002CPU \u4e3b\u8981\u8bbe\u8ba1\u7528\u4e8e\u901a\u7528\u8ba1\u7b97\u4efb\u52a1\uff0c\u5176\u6316\u77ff\u6548\u7387\u76f8\u5bf9\u8f83\u4f4e\uff0c\u80fd\u8017\u5374\u8f83\u9ad8\u3002\u5728\u9762\u5bf9\u65e5\u76ca\u589e\u957f\u7684\u6316\u77ff\u96be\u5ea6\u65f6\uff0cCPU \u6316\u51fa\u4e00\u4e2a\u533a\u5757\u6240\u9700\u7684\u65f6\u95f4\u548c\u7535\u529b\u6210\u672c\u8fdc\u8fdc\u8d85\u8fc7\u4e86\u53ef\u80fd\u83b7\u5f97\u7684\u6536\u76ca\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#42-gpu","title":"4.2 GPU \u6316\u77ff","text":"<p>\u56fe\u5f62\u5904\u7406\u5668\uff08GPU\uff09\u56e0\u5176\u5177\u5907\u5927\u89c4\u6a21\u7684\u5e76\u884c\u8ba1\u7b97\u80fd\u529b\uff0c\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u6210\u4e3a\u4e86\u6bd4\u7279\u5e01\u6316\u77ff\u7684\u4e3b\u6d41\u8bbe\u5907\u3002GPU \u6700\u521d\u8bbe\u8ba1\u7528\u4e8e\u5904\u7406\u56fe\u5f62\u6e32\u67d3\u4efb\u52a1\uff0c\u5176\u4e2d\u5305\u542b\u5927\u91cf\u7684\u5e76\u884c\u8ba1\u7b97\u5355\u5143\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5728\u6316\u77ff\u8fd9\u79cd\u9700\u8981\u5927\u91cf\u91cd\u590d\u8ba1\u7b97\u7684\u4efb\u52a1\u4e2d\u8868\u73b0\u51fa\u8272\u3002 \u7136\u800c\uff0cGPU \u5728\u6316\u77ff\u8fc7\u7a0b\u4e2d\u5bf9\u6d6e\u70b9\u6570\u7684\u8ba1\u7b97\u80fd\u529b\u5927\u90e8\u5206\u662f\u6d6a\u8d39\u7684\uff0c\u56e0\u4e3a\u6316\u77ff\u4e3b\u8981\u6d89\u53ca\u6574\u6570\u8fd0\u7b97\u3002\u5c3d\u7ba1\u5982\u6b64\uff0cGPU \u7684\u6316\u77ff\u6548\u7387\u4ecd\u7136\u8fdc\u9ad8\u4e8e CPU\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#43-asic","title":"4.3 ASIC \u82af\u7247\u6316\u77ff","text":"<ul> <li>application specific integrated circuit</li> <li>\u4e13\u7528\u6027\uff1a\u4e13\u7528\u96c6\u6210\u7535\u8def\uff08ASIC\uff09\u82af\u7247\u4e13\u4e3a\u7279\u5b9a\u5e94\u7528\u8bbe\u8ba1\uff0c\u5728\u6bd4\u7279\u5e01\u6316\u77ff\u9886\u57df\uff0cASIC \u82af\u7247\u51e0\u4e4e\u53ea\u7528\u4e8e\u6316\u77ff\uff0c\u9664\u4e86\u6267\u884c\u6316\u77ff\u6240\u9700\u7684\u8ba1\u7b97\u4efb\u52a1\u5916\uff0c\u51e0\u4e4e\u65e0\u6cd5\u7528\u4e8e\u5176\u4ed6\u7528\u9014\u3002ASIC \u82af\u7247\u9488\u5bf9\u6bd4\u7279\u5e01\u6316\u77ff\u7684\u6838\u5fc3\u4efb\u52a1 \u2014\u2014 \u89e3\u51b3\u54c8\u5e0c\u8ba1\u7b97\u96be\u9898\uff08mining puzzle\uff09\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u5177\u6709\u6781\u9ad8\u7684\u8ba1\u7b97\u6548\u7387\u548c\u80fd\u8017\u6bd4\u3002\u76f8\u6bd4 CPU \u548c GPU\uff0cASIC \u82af\u7247\u80fd\u591f\u5728\u66f4\u77ed\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u66f4\u591a\u7684\u54c8\u5e0c\u8ba1\u7b97\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u6316\u77ff\u7684\u6210\u529f\u7387\u3002</li> <li>\u5408\u5e76\u6316\u77ff\uff08merge mining\uff09\uff1a\u4e00\u4e9b ASIC \u77ff\u673a\u652f\u6301\u5408\u5e76\u6316\u77ff\uff0c\u5373\u540c\u65f6\u53c2\u4e0e\u591a\u4e2a\u533a\u5757\u94fe\u7684\u6316\u77ff\u8fc7\u7a0b\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u77ff\u5de5\u53ef\u4ee5\u5728\u4e0d\u589e\u52a0\u592a\u591a\u786c\u4ef6\u6210\u672c\u7684\u60c5\u51b5\u4e0b\uff0c\u5229\u7528\u540c\u4e00\u53f0\u77ff\u673a\u4e3a\u591a\u4e2a\u533a\u5757\u94fe\u7f51\u7edc\u63d0\u4f9b\u7b97\u529b\u652f\u6301\uff0c\u5e76\u83b7\u53d6\u76f8\u5e94\u7684\u6536\u76ca\u3002</li> </ul> <p>\u4ece CPU \u5230 GPU \u518d\u5230 ASIC \u82af\u7247\uff0c\u6316\u77ff\u8bbe\u5907\u5448\u73b0\u51fa\u4ece\u901a\u7528\u5230\u4e13\u7528\u7684\u53d1\u5c55\u8d8b\u52bf\u3002 \u8fd9\u79cd\u53d1\u5c55\u8d8b\u52bf\u80cc\u540e\u5b58\u5728\u7740\u535a\u5f08\u8bba\u7684\u56e0\u7d20\uff0c\u7c7b\u4f3c\u4e8e\u56da\u5f92\u56f0\u5883\u3002\u5728\u6316\u77ff\u7ade\u4e89\u4e2d\uff0c\u5982\u679c\u4e2a\u522b\u77ff\u5de5\u4e0d\u91c7\u7528\u6700\u5148\u8fdb\u3001\u6700\u9ad8\u6548\u7684\u6316\u77ff\u8bbe\u5907\uff08\u5982 ASIC \u82af\u7247\uff09\uff0c\u5c31\u4f1a\u5728\u7ade\u4e89\u4e2d\u5904\u4e8e\u52a3\u52bf\uff0c\u88ab\u91c7\u7528\u66f4\u9ad8\u6548\u8bbe\u5907\u7684\u77ff\u5de5\u538b\u69a8\u6536\u76ca\u3002 \u56e0\u6b64\uff0c\u4e3a\u4e86\u83b7\u53d6\u66f4\u591a\u7684\u6536\u76ca\uff0c\u77ff\u5de5\u4eec\u4e0d\u5f97\u4e0d\u4e0d\u65ad\u8ffd\u6c42\u66f4\u9ad8\u6548\u7684\u6316\u77ff\u8bbe\u5907\uff0c\u63a8\u52a8\u4e86\u6316\u77ff\u8bbe\u5907\u5411\u4e13\u4e1a\u5316\u65b9\u5411\u53d1\u5c55\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#44-asic","title":"4.4 \u6297 ASIC \u6316\u77ff\u7b97\u6cd5","text":"<p>\u4e3a\u4e86\u5e94\u5bf9 ASIC \u82af\u7247\u5e26\u6765\u7684\u6316\u77ff\u8bbe\u5907\u8fc7\u5ea6\u96c6\u4e2d\u5316\u95ee\u9898\uff0c\u4e00\u4e9b\u66ff\u4ee3\u7684\u6316\u77ff\u7b97\u6cd5\uff08alternative mining puzzle\uff09\u88ab\u8bbe\u8ba1\u51fa\u6765\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u65e8\u5728\u5177\u6709 ASIC \u6297\u6027\uff08asic resistance\uff09\u3002 - \u8fd9\u4e9b\u7b97\u6cd5\u901a\u8fc7\u589e\u52a0\u7b97\u6cd5\u7684\u590d\u6742\u6027\u548c\u5bf9\u901a\u7528\u8ba1\u7b97\u8d44\u6e90\u7684\u4f9d\u8d56\uff0c\u4f7f\u5f97 ASIC \u82af\u7247\u5728\u6316\u77ff\u4e2d\u7684\u4f18\u52bf\u4e0d\u518d\u660e\u663e\uff0c\u4ece\u800c\u9f13\u52b1\u66f4\u591a\u7c7b\u578b\u7684\u8bbe\u5907\uff08\u5982 GPU\u3001CPU\uff09\u53c2\u4e0e\u6316\u77ff\uff0c\u63d0\u9ad8\u6316\u77ff\u7684\u53bb\u4e2d\u5fc3\u5316\u7a0b\u5ea6\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#45","title":"4.5 \u77ff\u6c60\u7684\u51fa\u73b0","text":"<ul> <li>\u77ff\u6c60\u7ed3\u6784\uff1a\u968f\u7740\u6316\u77ff\u96be\u5ea6\u7684\u4e0d\u65ad\u63d0\u9ad8\uff0c\u5355\u4e2a\u77ff\u5de5\u6316\u5230\u533a\u5757\u7684\u6982\u7387\u53d8\u5f97\u6781\u4f4e\uff0c\u4e3a\u4e86\u589e\u52a0\u6536\u76ca\u7684\u7a33\u5b9a\u6027\uff0c\u77ff\u6c60\u5e94\u8fd0\u800c\u751f\u3002\u77ff\u6c60\u7531\u4e00\u4e2a\u77ff\u6c60\u7ba1\u7406\u8005\uff08pool manager\uff09\u548c\u591a\u4e2a\u77ff\u5de5\uff08miner\uff09\u7ec4\u6210\u3002\u77ff\u6c60\u7ba1\u7406\u8005\u53ef\u4ee5\u662f\u540c\u4e00\u4e2a\u673a\u6784\uff0c\u4e5f\u53ef\u4ee5\u662f\u7531\u4e0d\u540c\u673a\u6784\u901a\u8fc7\u5206\u5e03\u5f0f\u65b9\u5f0f\u7ec4\u6210\uff0c\u5b83\u4eec\u6309\u7167\u77ff\u6c60\u89c4\u5b9a\u7684\u901a\u8baf\u534f\u8bae\u8fdb\u884c\u6c9f\u901a\u3002</li> <li>\u4efb\u52a1\u5206\u914d\u4e0e\u6536\u76ca\u5206\u914d\uff1a<ul> <li>\u964d\u4f4e\u96be\u5ea6\u4e0e\u4efd\u989d\u8ba1\u7b97\uff1a\u77ff\u6c60\u7ba1\u7406\u8005\u4f1a\u5c06\u6316\u77ff\u4efb\u52a1\u8fdb\u884c\u5206\u89e3\uff0c\u901a\u8fc7\u964d\u4f4e\u6316\u77ff\u96be\u5ea6\uff08\u5c06\u5bfb\u627e\u7b26\u5408\u5168\u7f51\u96be\u5ea6\u7684 nonce \u8f6c\u6362\u4e3a\u5bfb\u627e\u7b26\u5408\u8f83\u4f4e\u96be\u5ea6\u7684 share\uff09\u6765\u5206\u914d\u7ed9\u77ff\u5de5\u3002\u77ff\u5de5\u627e\u5230\u7684 almost valid block\uff08\u51e0\u4e4e\u6709\u6548\u7684\u533a\u5757\uff0c\u5373\u6ee1\u8db3\u77ff\u6c60\u8bbe\u5b9a\u7684\u8f83\u4f4e\u96be\u5ea6\u8981\u6c42\u7684\u533a\u5757\uff09\u53ef\u4ee5\u8bc1\u660e\u5176\u5de5\u4f5c\u91cf\uff0c\u6bcf\u627e\u5230\u4e00\u4e2a\u8fd9\u6837\u7684\u533a\u5757\uff0c\u77ff\u5de5\u5c31\u83b7\u5f97\u4e00\u4e2a share\u3002</li> <li>\u6536\u76ca\u5206\u914d\uff1a\u6839\u636e\u77ff\u5de5\u83b7\u5f97\u7684 share \u6570\u91cf\u6765\u5206\u914d\u6700\u7ec8\u6316\u5230\u533a\u5757\u7684\u6536\u76ca\u3002\u5c1d\u8bd5\u7684 nonce \u8d8a\u591a\uff0c\u627e\u5230\u7684 share \u4e5f\u5c31\u8d8a\u591a\uff0c\u83b7\u5f97\u7684\u6536\u76ca\u4e5f\u5c31\u8d8a\u9ad8\u3002</li> </ul> </li> <li>\u77ff\u6c60\u7684\u5b89\u5168\u6027\uff1a\u6316\u5230\u533a\u5757\u540e\uff0c\u77ff\u5de5\u4e0d\u80fd\u79c1\u81ea\u5c06\u533a\u5757\u53d1\u9001\u51fa\u53bb\uff0c\u56e0\u4e3a\u533a\u5757\u4e2d\u586b\u5199\u7684\u6536\u6b3e\u4eba\u5730\u5740\u662f\u77ff\u4e3b\u8bbe\u5b9a\u7684\u3002\u800c\u4e14\u77ff\u5de5\u4e5f\u4e0d\u80fd\u968f\u610f\u4fee\u6539\u533a\u5757\u91cc\u9762\u7684\u5185\u5bb9\uff0c\u5426\u5219\u5176\u4ed6\u77ff\u5de5\u4e0d\u4f1a\u8ba4\u53ef\u5176 share\uff0c\u5bfc\u81f4\u5176\u5de5\u4f5c\u91cf\u767d\u8d39\u3002</li> </ul>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#46-51","title":"4.6\u77ff\u6c60\u5bf9 51% \u653b\u51fb\u7684\u5f71\u54cd","text":"<p>\u77ff\u6c60\u7684\u51fa\u73b0\u867d\u7136\u4e3a\u77ff\u5de5\u5e26\u6765\u4e86\u4e00\u4e9b\u597d\u5904\uff0c\u5982\u6536\u5165\u53d8\u7a33\u5b9a\u3001\u4e2d\u5956\u6982\u7387\u63d0\u9ad8\u7b49\uff0c\u4f46\u4e5f\u5e26\u6765\u4e86\u65b0\u7684\u5b89\u5168\u9690\u60a3\u3002 \u7531\u4e8e\u77ff\u6c60\u96c6\u4e2d\u4e86\u5927\u91cf\u77ff\u5de5\u7684\u7b97\u529b\uff0c\u4f7f\u5f97\u53d1\u52a8 51% \u653b\u51fb\u53d8\u5f97\u76f8\u5bf9\u5bb9\u6613\u3002\u77ff\u4e3b\u4e3a\u4e86\u5438\u5f15\u66f4\u591a\u77ff\u5de5\u52a0\u5165\uff0c\u53ef\u80fd\u4f1a\u964d\u4f4e\u7ba1\u7406\u8d39\u3002\u800c\u77ff\u5de5\u5728\u52a0\u5165\u77ff\u6c60\u65f6\uff0c\u5f80\u5f80\u53ea\u5173\u6ce8\u8ba1\u7b97\u4efb\u52a1\u548c\u6536\u76ca\uff0c\u5bf9\u6f5c\u5728\u7684\u653b\u51fb\u98ce\u9669\u5e76\u4e0d\u4e86\u89e3\u3002\u8fd9\u5c31\u4f7f\u5f97\u6076\u610f\u653b\u51fb\u8005\u6709\u53ef\u80fd\u901a\u8fc7\u63a7\u5236\u77ff\u6c60\u6765\u53d1\u52a8 51% \u653b\u51fb\uff0c\u7834\u574f\u6bd4\u7279\u5e01\u7f51\u7edc\u7684\u5b89\u5168\u6027\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#5-51","title":"5. 51% \u653b\u51fb\u7684\u5371\u5bb3","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#51","title":"5.1 \u5206\u53c9\u653b\u51fb","text":"<p>\u653b\u51fb\u8005\u901a\u8fc7\u638c\u63e1\u8d85\u8fc7 51% \u7684\u7b97\u529b\uff0c\u80fd\u591f\u5728\u533a\u5757\u94fe\u4e0a\u5236\u9020\u5206\u53c9\u3002\u653b\u51fb\u8005\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u5206\u53c9\u4e0a\u8fdb\u884c\u6076\u610f\u64cd\u4f5c\uff0c\u5982\u53cc\u82b1\u653b\u51fb\u3002 \u5373\u5148\u5728\u4e3b\u94fe\u4e0a\u53d1\u8d77\u4e00\u7b14\u4ea4\u6613\uff0c\u5f85\u4ea4\u6613\u786e\u8ba4\u540e\uff0c\u5229\u7528\u7b97\u529b\u4f18\u52bf\u5728\u81ea\u5df1\u7684\u5206\u53c9\u4e0a\u91cd\u65b0\u6784\u9020\u4e00\u4e2a\u4e0d\u5305\u542b\u8be5\u4ea4\u6613\u7684\u65b0\u533a\u5757\u94fe\uff0c\u5e76\u4f7f\u8fd9\u4e2a\u5206\u53c9\u6210\u4e3a\u6700\u957f\u94fe\u3002\u8fd9\u6837\uff0c\u4e3b\u94fe\u4e0a\u7684\u4ea4\u6613\u5c31\u88ab\u56de\u6eda\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u518d\u6b21\u4f7f\u7528\u76f8\u540c\u7684\u8d44\u91d1\u8fdb\u884c\u4ea4\u6613\uff0c\u4ece\u800c\u8fbe\u5230\u6b3a\u8bc8\u7684\u76ee\u7684\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/7.%E6%8C%96%E7%9F%BF/#52-boycott","title":"5.2 \u4ea4\u6613\u62b5\u5236\uff08Boycott\uff09","text":"<p>\u653b\u51fb\u8005\u53ef\u4ee5\u6545\u610f\u4e0d\u6253\u5305\u8ddf\u7279\u5b9a\u7528\u6237\uff08\u5982 A\uff09\u6709\u5173\u7684\u4ea4\u6613\u3002\u5728\u6bd4\u7279\u5e01\u7f51\u7edc\u4e2d\uff0c\u4ea4\u6613\u9700\u8981\u88ab\u6253\u5305\u5230\u533a\u5757\u4e2d\u624d\u80fd\u5f97\u5230\u786e\u8ba4\u3002 \u5982\u679c\u653b\u51fb\u8005\u63a7\u5236\u4e86\u8db3\u591f\u7684\u7b97\u529b\uff0c\u5c31\u53ef\u4ee5\u9009\u62e9\u5ffd\u7565\u67d0\u4e9b\u7528\u6237\u7684\u4ea4\u6613\uff0c\u4f7f\u5176\u65e0\u6cd5\u88ab\u786e\u8ba4\u548c\u6267\u884c\u3002\u8fd9\u4f1a\u4e25\u91cd\u5f71\u54cd\u8fd9\u4e9b\u7528\u6237\u7684\u6b63\u5e38\u4ea4\u6613\u6d3b\u52a8\uff0c\u7834\u574f\u6bd4\u7279\u5e01\u7f51\u7edc\u7684\u516c\u5e73\u6027\u548c\u53ef\u7528\u6027\u3002</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/8.%E6%AF%94%E7%89%B9%E5%B8%81%E8%84%9A%E6%9C%AC/","title":"8.\u4ea4\u6613\u811a\u672c","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/8.%E6%AF%94%E7%89%B9%E5%B8%81%E8%84%9A%E6%9C%AC/#8","title":"8.\u4ea4\u6613\u811a\u672c","text":"<p> \u7ea6 1770 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/8.%E6%AF%94%E7%89%B9%E5%B8%81%E8%84%9A%E6%9C%AC/#81","title":"8.1 \u6838\u5fc3\u6982\u5ff5","text":"<ol> <li> <p>\u811a\u672c\u8bed\u8a00\uff1a</p> <ul> <li>\u57fa\u4e8e\u6808\uff08Stack\uff09 \u7684\u8bed\u8a00\u3002\u6240\u6709\u64cd\u4f5c\uff08\u6307\u4ee4\uff09\u90fd\u662f\u5bf9\u6808\u9876\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff08\u538b\u5165\u3001\u5f39\u51fa\u3001\u8ba1\u7b97\u3001\u9a8c\u8bc1\uff09\u3002</li> <li>\u6307\u4ee4\u901a\u5e38\u4ee5 <code>OP_</code> \u5f00\u5934\uff08\u5982 <code>OP_CHECKSIG</code>\uff09\u3002</li> <li>\u4e0d\u652f\u6301\u5faa\u73af\uff0c\u662f\u56fe\u7075\u4e0d\u5b8c\u5907\u7684\uff08\u51fa\u4e8e\u5b89\u5168\u6027\u548c\u786e\u5b9a\u6027\u8003\u8651\uff09\u3002</li> <li>\u5bc6\u7801\u5b66\u64cd\u4f5c\uff08\u54c8\u5e0c\u3001\u7b7e\u540d\u9a8c\u8bc1\uff09\u662f\u5176\u6838\u5fc3\u529f\u80fd\u3002</li> </ul> </li> <li> <p>\u811a\u672c\u6267\u884c\uff1a</p> <ul> <li>\u4ea4\u6613\u7684\u89e3\u9501\u811a\u672c\uff08Input Script / ScriptSig\uff09 \u548c\u5bf9\u5e94 UTXO \u7684\u9501\u5b9a\u811a\u672c\uff08Output Script / ScriptPubKey\uff09 \u4f1a\u88ab\u62fc\u63a5\u5728\u4e00\u8d77\u6267\u884c\u3002</li> <li>\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u5b83\u4eec\u786e\u5b9e\u662f\u5206\u522b\u6267\u884c\u7684\uff1a\u5148\u6267\u884c\u89e3\u9501\u811a\u672c\uff08\u5c06\u6570\u636e\u538b\u5165\u6808\uff09\uff0c\u518d\u6267\u884c\u9501\u5b9a\u811a\u672c\uff08\u5bf9\u6808\u4e0a\u6570\u636e\u8fdb\u884c\u9a8c\u8bc1\uff09\u3002\u8fd9\u9632\u6b62\u4e86\u89e3\u9501\u811a\u672c\u4e2d\u7684\u6076\u610f\u64cd\u4f5c\u76f4\u63a5\u5f71\u54cd\u9501\u5b9a\u811a\u672c\u7684\u6267\u884c\u903b\u8f91\u3002</li> <li>\u6267\u884c\u7ed3\u679c\uff1a\u6808\u9876\u6700\u7ec8\u7ed3\u679c\u4e3a <code>True</code> (\u975e\u96f6\u503c\uff0c\u901a\u5e38\u662f <code>1</code>) \u8868\u793a\u9a8c\u8bc1\u6210\u529f\uff0c\u5141\u8bb8\u82b1\u8d39\u8be5 UTXO\uff1b\u7ed3\u679c\u4e3a <code>False</code> (\u96f6) \u8868\u793a\u9a8c\u8bc1\u5931\u8d25\u3002</li> </ul> </li> <li> <p>\u5e38\u89c1\u811a\u672c\u7c7b\u578b\uff1a</p> <ul> <li> <p>1. <code>P2PK</code> (Pay to Public Key - \u65e9\u671f/\u7b80\u5355):</p> <ul> <li>\u9501\u5b9a\u811a\u672c (Output): <code>&lt;Public Key&gt; OP_CHECKSIG</code></li> <li>\u89e3\u9501\u811a\u672c (Input): <code>&lt;Signature&gt;</code></li> <li>\u6267\u884c\u8fc7\u7a0b:<ol> <li>\u8f93\u5165\u811a\u672c\u6267\u884c\uff1a\u538b\u5165\u7b7e\u540d <code>Sig</code>\u3002</li> <li>\u8f93\u51fa\u811a\u672c\u6267\u884c\uff1a\u538b\u5165\u516c\u94a5 <code>PubKey</code>\uff0c\u7136\u540e\u6267\u884c <code>OP_CHECKSIG</code>\u3002</li> <li><code>OP_CHECKSIG</code> \u5f39\u51fa\u6808\u9876\u7684\u4e24\u4e2a\u5143\u7d20 (<code>Sig</code> \u548c <code>PubKey</code>)\uff0c\u7528\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\u662f\u5426\u5bf9\u8be5\u4ea4\u6613\u6709\u6548\u3002\u9a8c\u8bc1\u6210\u529f\u538b\u5165 <code>1</code> (True)\uff0c\u5931\u8d25\u538b\u5165 <code>0</code> (False)\u3002</li> </ol> </li> <li>\u7b14\u8bb0\u4e2d\u7684 <code>sig pubkey checksig</code> \u6307\u7684\u5c31\u662f\u8fd9\u79cd\u57fa\u672c\u6a21\u5f0f\u3002</li> </ul> </li> <li> <p>2. <code>P2PKH</code> (Pay to Public Key Hash - \u6700\u5e38\u7528):</p> <ul> <li>\u9501\u5b9a\u811a\u672c (Output): <code>OP_DUP OP_HASH160 &lt;Public Key Hash&gt; OP_EQUALVERIFY OP_CHECKSIG</code></li> <li>\u89e3\u9501\u811a\u672c (Input): <code>&lt;Signature&gt; &lt;Public Key&gt;</code></li> <li>\u6267\u884c\u8fc7\u7a0b (\u62fc\u63a5\u540e):<ol> <li>\u538b\u5165\u7b7e\u540d <code>Sig</code>\u3002</li> <li>\u538b\u5165\u516c\u94a5 <code>PubKey</code>\u3002</li> <li><code>OP_DUP</code>: \u590d\u5236\u6808\u9876\u516c\u94a5 (\u73b0\u5728\u6808: <code>Sig, PubKey, PubKey</code>)\u3002</li> <li><code>OP_HASH160</code>: \u5f39\u51fa\u6808\u9876\u516c\u94a5\uff0c\u8ba1\u7b97\u5176 RIPEMD160(SHA256) \u54c8\u5e0c\u503c\u5e76\u538b\u5165 (\u73b0\u5728\u6808: <code>Sig, PubKey, PubKeyHash_Calculated</code>)\u3002</li> <li>\u538b\u5165\u9501\u5b9a\u811a\u672c\u4e2d\u63d0\u4f9b\u7684\u516c\u94a5\u54c8\u5e0c <code>&lt;Public Key Hash&gt;</code> (\u73b0\u5728\u6808: <code>Sig, PubKey, PubKeyHash_Calculated, PubKeyHash_Provided</code>)\u3002</li> <li><code>OP_EQUALVERIFY</code>: \u5f39\u51fa\u6808\u9876\u4e24\u4e2a\u5143\u7d20 (<code>PubKeyHash_Calculated</code> \u548c <code>PubKeyHash_Provided</code>)\uff0c\u6bd4\u8f83\u5b83\u4eec\u662f\u5426\u76f8\u7b49\u3002\u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u811a\u672c\u7acb\u5373\u5931\u8d25\u7ec8\u6b62\u3002 \u5982\u679c\u76f8\u7b49\uff0c\u7ee7\u7eed\u6267\u884c (\u73b0\u5728\u6808: <code>Sig, PubKey</code>)\u3002</li> <li><code>OP_CHECKSIG</code>: \u5f39\u51fa\u6808\u9876\u4e24\u4e2a\u5143\u7d20 (<code>Sig</code> \u548c <code>PubKey</code>)\uff0c\u9a8c\u8bc1\u7b7e\u540d\u3002\u9a8c\u8bc1\u6210\u529f\u538b\u5165 <code>1</code> (True)\uff0c\u5931\u8d25\u538b\u5165 <code>0</code> (False)\u3002</li> </ol> </li> <li>\u7b14\u8bb0\u4e2d\u6d41\u7a0b\u63cf\u8ff0\u6b63\u786e\uff0c\u672f\u8bed <code>PUSHDATA</code> \u662f\u9690\u542b\u7684\uff08<code>&lt;Signature&gt;</code>, <code>&lt;Public Key&gt;</code>, <code>&lt;Public Key Hash&gt;</code> \u8fd9\u4e9b\u672c\u8eab\u5c31\u662f\u538b\u5165\u6570\u636e\u7684\u64cd\u4f5c\uff09\u3002<code>EQUALVERIFY</code> \u662f\u5173\u952e\u7684\u5b89\u5168\u6b65\u9aa4\u3002</li> </ul> </li> <li> <p>3. <code>P2SH</code> (Pay to Script Hash - \u7528\u4e8e\u590d\u6742\u811a\u672c/\u591a\u91cd\u7b7e\u540d):</p> <ul> <li>\u6838\u5fc3\u601d\u60f3\uff1a \u5c06\u590d\u6742\u811a\u672c\uff08\u8d4e\u56de\u811a\u672c <code>RedeemScript</code>\uff09\u7684\u54c8\u5e0c\u503c\u653e\u5728\u9501\u5b9a\u811a\u672c\u4e2d\u3002\u82b1\u8d39\u65f6\u63d0\u4f9b\u539f\u59cb\u811a\u672c\u548c\u6ee1\u8db3\u5b83\u7684\u53c2\u6570\u3002</li> <li>\u9501\u5b9a\u811a\u672c (Output): <code>OP_HASH160 &lt;RedeemScript Hash&gt; OP_EQUAL</code> (\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u5b58\u54c8\u5e0c)</li> <li>\u89e3\u9501\u811a\u672c (Input): <code>&lt;Sig1&gt; [Sig2] ... &lt;RedeemScript&gt;</code> (\u63d0\u4f9b\u6ee1\u8db3 <code>RedeemScript</code> \u6240\u9700\u7684\u7b7e\u540d\u548c <code>RedeemScript</code> \u672c\u8eab)</li> <li>\u6267\u884c\u8fc7\u7a0b (\u4e24\u9636\u6bb5\u9a8c\u8bc1):<ul> <li>\u9636\u6bb5 1 (\u9a8c\u8bc1\u811a\u672c\u54c8\u5e0c\u5339\u914d):<ol> <li>\u8f93\u5165\u811a\u672c\u6267\u884c\uff1a\u4f9d\u6b21\u538b\u5165\u63d0\u4f9b\u7684\u7b7e\u540d\u7b49\u53c2\u6570\uff0c\u6700\u540e\u538b\u5165 <code>RedeemScript</code>\u3002</li> <li>\u8f93\u51fa\u811a\u672c\u6267\u884c\uff1a<code>OP_HASH160</code> (\u5f39\u51fa\u6808\u9876\u7684 <code>RedeemScript</code>\uff0c\u8ba1\u7b97\u5176\u54c8\u5e0c\u503c\u5e76\u538b\u5165)\u3002</li> <li>\u538b\u5165\u9501\u5b9a\u811a\u672c\u4e2d\u7684 <code>&lt;RedeemScript Hash&gt;</code>\u3002</li> <li><code>OP_EQUAL</code>\uff1a\u6bd4\u8f83\u8ba1\u7b97\u51fa\u7684\u54c8\u5e0c\u503c\u548c\u63d0\u4f9b\u7684\u54c8\u5e0c\u503c\u662f\u5426\u76f8\u7b49\u3002\u7ed3\u679c (<code>1</code> \u6216 <code>0</code>) \u538b\u5165\u6808\u9876\u3002\u5982\u679c\u6b64\u65f6\u6808\u9876\u662f <code>0</code>\uff0c\u811a\u672c\u5931\u8d25\u3002 (<code>OP_EQUAL</code> \u53ea\u538b\u5165\u7ed3\u679c\uff0c\u4e0d\u7acb\u5373\u7ec8\u6b62\uff0c\u4f46\u540e\u7eed\u6b65\u9aa4\u4f9d\u8d56\u5b83\u4e3a\u771f)</li> </ol> </li> <li>\u9636\u6bb5 2 (\u9a8c\u8bc1\u8d4e\u56de\u811a\u672c):<ol> <li>\u5982\u679c\u9636\u6bb51\u6210\u529f\uff08\u6808\u9876\u662f <code>1</code>\uff09\uff0c\u53cd\u5e8f\u5217\u5316\u6808\u4e2d\u4e4b\u524d\u538b\u5165\u7684 <code>RedeemScript</code>\uff0c\u5c06\u5176\u5185\u5bb9\u4f5c\u4e3a\u65b0\u7684\u811a\u672c\u6307\u4ee4\u5e8f\u5217\u6267\u884c\u3002\u6b64\u65f6\u6808\u4e0a\u8fd8\u7559\u6709\u4e4b\u524d\u538b\u5165\u7684\u7b7e\u540d\u7b49\u53c2\u6570\u3002</li> <li>\u6267\u884c <code>RedeemScript</code>\u3002\u8fd9\u4e2a\u811a\u672c\u901a\u5e38\u5305\u542b\u5b9e\u9645\u7684\u9a8c\u8bc1\u903b\u8f91\uff08\u5982 <code>m-of-n</code> \u591a\u91cd\u7b7e\u540d <code>OP_CHECKMULTISIG</code>\uff09\u3002</li> <li><code>RedeemScript</code> \u6267\u884c\u7684\u7ed3\u679c\u51b3\u5b9a\u6700\u7ec8\u9a8c\u8bc1\u662f\u5426\u901a\u8fc7\u3002</li> </ol> </li> </ul> </li> <li>\u4f18\u70b9\uff1a<ul> <li>\u53d1\u9001\u65b9\u53ea\u9700\u77e5\u9053\u4e00\u4e2a\u7b80\u5355\u7684\u54c8\u5e0c\u5730\u5740\uff0c\u65e0\u9700\u5173\u5fc3\u590d\u6742\u7684\u63a5\u6536\u6761\u4ef6\u3002</li> <li>\u590d\u6742\u903b\u8f91\uff08\u5982\u591a\u91cd\u7b7e\u540d\uff09\u4ece\u9501\u5b9a\u811a\u672c\u79fb\u5230\u4e86\u8d4e\u56de\u811a\u672c\uff0c\u7b80\u5316\u4e86\u6807\u51c6\u4ea4\u6613\u3002</li> <li>\u63d0\u4f9b\u4e86\u4e00\u5b9a\u7684\u5197\u4f59\uff1a\u591a\u91cd\u7b7e\u540d\u5141\u8bb8\u591a\u4e2a\u79c1\u94a5\u6301\u6709\u8005\u6388\u6743\u4ea4\u6613\uff08m-of-n\uff09\uff0c\u5373\u4f7f\u4e2a\u522b\u79c1\u94a5\u4e22\u5931\uff0c\u53ea\u8981\u6ee1\u8db3\u6700\u5c0f\u7b7e\u540d\u6570 m \u5373\u53ef\u3002</li> </ul> </li> <li><code>OP_CHECKMULTISIG</code> (\u591a\u91cd\u7b7e\u540d\u9a8c\u8bc1):<ul> <li>\u8bed\u6cd5\uff1a<code>&lt;m&gt; &lt;PubKey1&gt; &lt;PubKey2&gt; ... &lt;PubKeyn&gt; &lt;n&gt; OP_CHECKMULTISIG</code></li> <li>\u6267\u884c\uff1a\u9a8c\u8bc1\u6808\u4e0a\u63d0\u4f9b\u7684\u7b7e\u540d\u6570\u91cf\u662f\u5426\u81f3\u5c11\u4e3a <code>m</code>\uff0c\u5e76\u4e14\u8fd9\u4e9b\u7b7e\u540d\u4e0e\u63d0\u4f9b\u7684\u516c\u94a5\u5217\u8868\u4e2d\u7684 <code>m</code> \u4e2a\u516c\u94a5\u6709\u6548\u5bf9\u5e94\uff08\u987a\u5e8f\u9700\u5339\u914d\uff09\u3002</li> <li>\u7b14\u8bb0\u4e2d\u7684 <code>checkmultisig</code> \u6307\u7684\u5c31\u662f\u8fd9\u4e2a\u64cd\u4f5c\u7801\u3002</li> </ul> </li> <li>\u6ce8\u610f\uff1a \u5f53\u524d\u4ea4\u6613\u7684\u8f93\u5165\u811a\u672c\uff08\u63d0\u4f9b\u7b7e\u540d\u548c <code>RedeemScript</code>\uff09\u662f\u548c\u5e01\u6765\u6e90\u4ea4\u6613\uff08\u521b\u5efa\u8be5 UTXO \u7684\u4ea4\u6613\uff09\u7684\u8f93\u51fa\u811a\u672c\uff08\u5305\u542b\u54c8\u5e0c\u627f\u8bfa\uff09\u8fdb\u884c\u62fc\u63a5\u9a8c\u8bc1\u7684\u3002</li> </ul> </li> <li> <p>4. <code>OP_RETURN</code> / Proof of Burn (\u9500\u6bc1\u8bc1\u660e):</p> <ul> <li>\u9501\u5b9a\u811a\u672c (Output): <code>OP_RETURN &lt;Optional Data&gt;</code></li> <li>\u7279\u70b9:<ul> <li><code>OP_RETURN</code> \u6307\u4ee4\u6267\u884c\u540e\u4f1a\u7acb\u5373\u6807\u8bb0\u811a\u672c\u4e3a\u65e0\u6548\uff08\u8fd4\u56de False\uff09\u3002</li> <li>\u53d1\u9001\u5230\u8fd9\u4e2a\u5730\u5740\u7684\u6bd4\u7279\u5e01\u6c38\u8fdc\u65e0\u6cd5\u88ab\u82b1\u8d39\uff0c\u5373\u88ab\u9500\u6bc1\u3002</li> <li>\u4e3b\u8981\u7528\u9014\uff1a<ul> <li>\u9500\u6bc1\u4e00\u5b9a\u6570\u91cf\u7684 Bitcoin\uff1a \u6709\u65f6\u7528\u4e8e\u51cf\u5c11\u6d41\u901a\u91cf\u6216\u7279\u5b9a\u534f\u8bae\u8981\u6c42\u3002</li> <li>\u6dfb\u52a0\u6570\u636e\u5230\u533a\u5757\u94fe (Digital Commitment)\uff1a <code>&lt;Optional Data&gt;</code> \u90e8\u5206\u53ef\u4ee5\u5b58\u50a8\u5c11\u91cf\u4fe1\u606f\uff08\u5982\u54c8\u5e0c\u503c\u3001\u65f6\u95f4\u6233\u3001\u6587\u672c\uff09\uff0c\u4f5c\u4e3a\u5b58\u5728\u6027\u8bc1\u660e\u6216\u951a\u5b9a\u5176\u4ed6\u7cfb\u7edf\u3002\u8fd9\u662f\u6700\u5e38\u89c1\u7684\u7528\u9014\u3002</li> <li>\u521b\u5efa Altcoin (\u66ff\u4ee3\u5e01)\uff1a \u65e9\u671f\u4e00\u4e9b Altcoin \u901a\u8fc7\u9500\u6bc1 BTC \u6765\u5206\u914d\u65b0\u5e01\uff08\u73b0\u5df2\u4e0d\u5e38\u89c1\uff09\u3002</li> </ul> </li> </ul> </li> <li>\u7b14\u8bb0\u4e2d <code>return\u547d\u4ee4\u4e4b\u540e\u90fd\u4f1a\u76f4\u63a5\u62a5\u9519</code> \u63cf\u8ff0\u51c6\u786e\u3002<code>digital commitment</code> \u662f\u5176\u6838\u5fc3\u5e94\u7528\u4e4b\u4e00\u3002</li> </ul> </li> </ul> </li> </ol>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/8.%E6%AF%94%E7%89%B9%E5%B8%81%E8%84%9A%E6%9C%AC/#82","title":"8.2 \u5176\u5b83","text":"<ul> <li><code>Coinbase</code> \u4ea4\u6613\uff1a \u6bcf\u4e2a\u533a\u5757\u7684\u7b2c\u4e00\u4e2a\u4ea4\u6613\uff0c\u662f\u77ff\u5de5\u7684\u5956\u52b1\u3002\u8fd9\u4e2a\u4ea4\u6613\u7684\u8f93\u5165\uff08<code>scriptSig</code>\uff09\u6709\u7279\u6b8a\u89c4\u5219\uff0c\u53ef\u4ee5\u7531\u77ff\u5de5\u81ea\u7531\u5199\u5165\u4e00\u4e9b\u6570\u636e\uff08\u901a\u5e38\u5305\u62ec Extra Nonce \u548c\u533a\u5757\u9ad8\u5ea6\uff09\uff0c\u800c\u666e\u901a\u4ea4\u6613\u7684\u8f93\u5165\u662f\u6307\u5411\u4e4b\u524d\u67d0\u4e2a UTXO \u7684\u8f93\u51fa\u3002\u5176\u8f93\u51fa\u811a\u672c\uff08\u9501\u5b9a\u811a\u672c\uff09\u51b3\u5b9a\u4e86\u5956\u52b1\u53d1\u9001\u7ed9\u54ea\u4e2a\u5730\u5740\u3002</li> <li>\u96f6\u77e5\u8bc6\u8bc1\u660e\uff1a \u6bd4\u7279\u5e01\u811a\u672c\u672c\u8eab\u4e0d\u76f4\u63a5\u652f\u6301\u901a\u7528\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\uff08\u5982 zk-SNARKs\uff09\u3002\u50cf <code>OP_CHECKSIG</code> \u8fd9\u6837\u7684\u64cd\u4f5c\u7801\u9a8c\u8bc1\u7b7e\u540d\u65f6\uff0c\u867d\u7136\u7b7e\u540d\u672c\u8eab\u4e0d\u76f4\u63a5\u66b4\u9732\u79c1\u94a5\uff0c\u4f46\u8fd9\u662f\u4e00\u79cd\u6807\u51c6\u7684\u516c\u94a5\u5bc6\u7801\u5b66\u9a8c\u8bc1\uff0c\u4e0d\u662f\u96f6\u77e5\u8bc6\u8bc1\u660e\u3002\u6bd4\u7279\u5e01\u751f\u6001\u4e2d\u5b9e\u73b0\u5f3a\u9690\u79c1\u901a\u5e38\u9700\u8981\u989d\u5916\u7684\u534f\u8bae\u5c42\uff08\u5982 CoinJoin\uff09\u6216\u4fa7\u94fe/\u4e8c\u5c42\u89e3\u51b3\u65b9\u6848\uff08\u5982\u4f7f\u7528 zk-rollups\uff09\u3002\u6838\u5fc3\u811a\u672c\u8bed\u8a00\u7684\u8bbe\u8ba1\u66f4\u6ce8\u91cd\u7b80\u6d01\u548c\u5b89\u5168\u3002</li> </ul> <ol> <li>\u7406\u89e3\u6808\u64cd\u4f5c\uff1a \u811a\u672c\u6267\u884c\u5982\u4f55\u901a\u8fc7\u538b\u6808\u3001\u5f39\u6808\u3001\u64cd\u4f5c\u7801\u5904\u7406\u6570\u636e\u3002</li> <li>\u533a\u5206 ScriptSig \u548c ScriptPubKey\uff1a \u5b83\u4eec\u7684\u4f5c\u7528\u3001\u62fc\u63a5\u65b9\u5f0f\u548c\u5206\u9636\u6bb5\u6267\u884c\u7684\u539f\u56e0\uff08\u5b89\u5168\uff09\u3002</li> <li>\u638c\u63e1 P2PKH \u6d41\u7a0b\uff1a <code>DUP</code>, <code>HASH160</code>, <code>EQUALVERIFY</code>, <code>CHECKSIG</code> \u6bcf\u4e00\u6b65\u7684\u76ee\u7684\u548c\u6808\u7684\u53d8\u5316\u3002</li> <li>\u7406\u89e3 P2SH \u539f\u7406\uff1a \u4e24\u9636\u6bb5\u9a8c\u8bc1\uff08\u54c8\u5e0c\u5339\u914d + \u8d4e\u56de\u811a\u672c\u6267\u884c\uff09\u3001\u76ee\u7684\uff08\u7b80\u5316\u590d\u6742\u811a\u672c\uff09\u3001\u5e94\u7528\uff08\u591a\u91cd\u7b7e\u540d\uff09\u3002</li> <li>\u7406\u89e3\u591a\u91cd\u7b7e\u540d (<code>OP_CHECKMULTISIG</code>)\uff1a m-of-n \u7684\u542b\u4e49\u548c\u4f18\u52bf\uff08\u5197\u4f59\uff09\u3002</li> <li>\u7406\u89e3 <code>OP_RETURN</code>\uff1a \u4f5c\u7528\uff08\u521b\u5efa\u4e0d\u53ef\u82b1\u8d39\u8f93\u51fa\u3001\u5b58\u50a8\u6570\u636e\uff09\u3001\u7ed3\u679c\uff08\u811a\u672c\u603b\u662f\u5931\u8d25\uff09\u3002</li> <li>\u660e\u786e <code>Coinbase</code> \u7279\u6b8a\u6027\uff1a \u77ff\u5de5\u5956\u52b1\u6765\u6e90\uff0c\u8f93\u5165\u811a\u672c\u53ef\u81ea\u5b9a\u4e49\u3002</li> <li>\u77e5\u6653\u6bd4\u7279\u5e01\u811a\u672c\u7684\u5c40\u9650\u6027\uff1a \u65e0\u5faa\u73af\u3001\u56fe\u7075\u4e0d\u5b8c\u5907\u3001\u4e0d\u652f\u6301\u539f\u751f\u96f6\u77e5\u8bc6\u8bc1\u660e\u3002</li> </ol>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/9.%20%E5%88%86%E5%8F%89/","title":"9. \u6bd4\u7279\u5e01 (BTC) \u5206\u53c9 (Fork)","text":""},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/9.%20%E5%88%86%E5%8F%89/#9-btc-fork","title":"9. \u6bd4\u7279\u5e01 (BTC) \u5206\u53c9 (Fork)","text":"<p> \u7ea6 2491 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/9.%20%E5%88%86%E5%8F%89/#_1","title":"\u5206\u53c9\u7684\u7c7b\u578b","text":"<ol> <li> <p>\u5206\u53c9\u653b\u51fb (Forking Attack / Deliberate Fork):</p> <ul> <li>\u8fd9\u662f\u6307\u6076\u610f\u77ff\u5de5\u6545\u610f\u5236\u9020\u5206\u53c9\u7684\u884c\u4e3a\u3002</li> <li>\u76ee\u7684\uff1a \u901a\u5e38\u662f\u8fdb\u884c\u53cc\u82b1\u653b\u51fb (Double Spending)\u3002\u653b\u51fb\u8005\u5148\u5728\u539f\u94fe\u4e0a\u53d1\u8d77\u4e00\u7b14\u4ea4\u6613\uff08\u4f8b\u5982\u652f\u4ed8\u7ed9\u5546\u5bb6\uff09\uff0c\u7136\u540e\u79d8\u5bc6\u5728\u53e6\u4e00\u6761\u5206\u53c9\u94fe\u4e0a\u6316\u51fa\u5305\u542b\u51b2\u7a81\u4ea4\u6613\uff08\u652f\u4ed8\u56de\u7ed9\u81ea\u5df1\uff09\u7684\u533a\u5757\u3002\u5982\u679c\u653b\u51fb\u8005\u7684\u5206\u53c9\u94fe\u957f\u5ea6\u8d85\u8fc7\u4e86\u539f\u94fe\u5e76\u88ab\u5168\u7f51\u63a5\u53d7\uff0c\u539f\u94fe\u4e0a\u7684\u4ea4\u6613\u5c31\u4f1a\u88ab\u56de\u6eda\uff08\u65e0\u6548\uff09\uff0c\u800c\u653b\u51fb\u8005\u6210\u529f\u62ff\u56de\u4e86\u82b1\u51fa\u53bb\u7684\u94b1\uff08\u53cc\u82b1\uff09\u3002</li> <li>\u5b9e\u73b0\u96be\u5ea6\uff1a \u5728\u6bd4\u7279\u5e01\u4e2d\uff0c\u6210\u529f\u5b9e\u65bd\u5206\u53c9\u653b\u51fb\u9700\u8981\u638c\u63e1\u5168\u7f51\u5927\u90e8\u5206\u7b97\u529b (51% \u653b\u51fb)\uff0c\u6210\u672c\u6781\u9ad8\uff0c\u975e\u5e38\u56f0\u96be\u3002</li> </ul> </li> <li> <p>\u534f\u8bae\u5206\u53c9 (Protocol Fork):</p> <ul> <li>\u5f53\u6bd4\u7279\u5e01\u7f51\u7edc\u7684\u534f\u8bae\u89c4\u5219\u53d1\u751f\u6539\u53d8\uff0c\u4e14\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u6ca1\u6709\u540c\u65f6\u3001\u7edf\u4e00\u5730\u5347\u7ea7\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u534f\u8bae\u5206\u53c9\u3002</li> <li>\u6839\u636e\u89c4\u5219\u6539\u53d8\u7684\u517c\u5bb9\u6027\uff0c\u534f\u8bae\u5206\u53c9\u5206\u4e3a\u4e24\u79cd\u4e3b\u8981\u7c7b\u578b\uff1a\u786c\u5206\u53c9 (Hard Fork) \u548c \u8f6f\u5206\u53c9 (Soft Fork)\u3002</li> </ul> </li> </ol>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/9.%20%E5%88%86%E5%8F%89/#hard-fork","title":"\u786c\u5206\u53c9 (Hard Fork)","text":"<ul> <li>\u5b9a\u4e49\uff1a \u5f15\u5165\u5411\u540e\u4e0d\u517c\u5bb9 (Backward Incompatible) \u7684\u534f\u8bae\u66f4\u6539\u3002\u5373\u65b0\u89c4\u5219\u4e0b\u4ea7\u751f\u7684\u533a\u5757\u6216\u4ea4\u6613\u4f1a\u88ab\u9075\u5faa\u65e7\u89c4\u5219\u7684\u8282\u70b9\u89c6\u4e3a\u65e0\u6548 (Invalid)\u3002</li> <li>\u89e6\u53d1\u539f\u56e0\uff1a \u9700\u8981\u5bf9\u6bd4\u7279\u5e01\u534f\u8bae\u8fdb\u884c\u91cd\u5927\u3001\u4e0d\u517c\u5bb9\u7684\u4fee\u6539\uff0c\u4f8b\u5982\uff1a<ul> <li>\u589e\u52a0\u533a\u5757\u5927\u5c0f\u9650\u5236 (Block Size Limit)\uff08\u5982 1MB -&gt; 4MB \u4f8b\u5b50\uff09\u3002</li> <li>\u4fee\u6539\u5171\u8bc6\u7b97\u6cd5\u6838\u5fc3\u673a\u5236\uff08\u5982 PoW \u8f6c PoS\uff09\u3002</li> <li>\u6dfb\u52a0\u65b0\u7684\u64cd\u4f5c\u7801 (Opcode) \u6216\u663e\u8457\u6539\u53d8\u811a\u672c\u884c\u4e3a\u3002</li> </ul> </li> <li>\u8282\u70b9\u5347\u7ea7\u8981\u6c42\uff1a \u9700\u8981\u6240\u6709\u53c2\u4e0e\u7f51\u7edc\u7684\u8282\u70b9\uff08\u77ff\u5de5\u3001\u5168\u8282\u70b9\u3001\u94b1\u5305\u7b49\uff09\u90fd\u5347\u7ea7\u5230\u65b0\u7248\u672c\u8f6f\u4ef6\uff0c\u624d\u80fd\u7ee7\u7eed\u5728\u540c\u4e00\u4e2a\u7f51\u7edc\u4e2d\u65e0\u7f1d\u8fd0\u884c\u3002\u5982\u679c\u6709\u4e00\u90e8\u5206\u8282\u70b9\u62d2\u7edd\u5347\u7ea7...</li> <li>\u5206\u53c9\u8fc7\u7a0b\u4e0e\u7ed3\u679c\uff1a<ul> <li>\u5df2\u5347\u7ea7\u7684\u8282\u70b9\uff08\u65b0\u8282\u70b9\uff09\u6309\u7167\u65b0\u89c4\u5219\u6316\u77ff\u548c\u9a8c\u8bc1\u3002</li> <li>\u672a\u5347\u7ea7\u7684\u8282\u70b9\uff08\u65e7\u8282\u70b9\uff09\u62d2\u7edd\u63a5\u53d7\u65b0\u8282\u70b9\u4ea7\u751f\u7684\u533a\u5757\uff08\u56e0\u4e3a\u5b83\u4eec\u8fdd\u53cd\u4e86\u65e7\u89c4\u5219\uff09\uff0c\u7ee7\u7eed\u6309\u7167\u65e7\u89c4\u5219\u6316\u77ff\u3002</li> <li>\u7ed3\u679c\u662f\u7f51\u7edc\u6c38\u4e45\u5206\u88c2\u6210\u4e24\u6761\u72ec\u7acb\u8fd0\u884c\u7684\u533a\u5757\u94fe\uff1a<ul> <li>\u65b0\u94fe (New Chain)\uff1a \u8fd0\u884c\u65b0\u89c4\u5219\uff0c\u7531\u5df2\u5347\u7ea7\u8282\u70b9\u7ef4\u62a4\u3002\u65b0\u8282\u70b9\u8ba4\u53ef\u65e7\u94fe\u7684\u5386\u53f2\u533a\u5757\uff08\u5411\u540e\u517c\u5bb9\u5386\u53f2\uff09\uff0c\u4f46\u53ea\u5728\u65b0\u89c4\u5219\u4e0b\u6316\u65b0\u5757\u3002\u65b0\u94fe\u901a\u5e38\u62e5\u6709\u5927\u90e8\u5206\u7b97\u529b\uff0c\u80fd\u66f4\u5feb\u5730\u4ea7\u51fa\u533a\u5757\uff0c\u6210\u4e3a\u4e8b\u5b9e\u4e0a\u7684\u201c\u6700\u957f\u94fe\u201d\u3002</li> <li>\u65e7\u94fe (Old Chain)\uff1a \u8fd0\u884c\u65e7\u89c4\u5219\uff0c\u7531\u672a\u5347\u7ea7\u8282\u70b9\u7ef4\u62a4\u3002\u65e7\u8282\u70b9\u62d2\u7edd\u65b0\u94fe\u7684\u6240\u6709\u533a\u5757\u3002\u65e7\u94fe\u7b97\u529b\u8f83\u4f4e\uff0c\u589e\u957f\u7f13\u6162\u3002</li> </ul> </li> <li>\u6c38\u4e45\u6027\u5206\u88c2\uff1a \u4e24\u6761\u94fe\u62e5\u6709\u5171\u540c\u7684\u521b\u4e16\u533a\u5757\u5386\u53f2\uff0c\u4f46\u5728\u5206\u53c9\u70b9\u4e4b\u540e\u5404\u81ea\u72ec\u7acb\u53d1\u5c55\uff0c\u4e92\u4e0d\u627f\u8ba4\u5bf9\u65b9\u7684\u533a\u5757\u548c\u4ea4\u6613\u3002\u5b83\u4eec\u6210\u4e3a\u4e24\u79cd\u4e0d\u540c\u7684\u52a0\u5bc6\u8d27\u5e01\u3002</li> <li>\u4f8b\u5b50\uff1a \u6bd4\u7279\u5e01\u73b0\u91d1 (BCH) \u4ece\u6bd4\u7279\u5e01 (BTC) \u7684\u5206\u53c9\uff08\u533a\u5757\u5927\u5c0f\u589e\u52a0\uff09\uff1b\u4ee5\u592a\u574a (ETH) \u548c \u4ee5\u592a\u574a\u7ecf\u5178 (ETC) \u7684\u5206\u53c9\uff08DAO \u9ed1\u5ba2\u4e8b\u4ef6\u56de\u6eda\uff09\u3002</li> </ul> </li> <li>\u907f\u514d\u4ea4\u6613\u7d0a\u4e71\uff1a<ul> <li>\u5206\u88c2\u540e\uff0c\u4e24\u6761\u94fe\u4e0a\u7684\u5730\u5740\u683c\u5f0f\u3001\u4ea4\u6613\u7ed3\u6784\u53ef\u80fd\u76f8\u540c\u3002</li> <li>\u5728\u4e00\u6761\u94fe\u4e0a\u6709\u6548\u7684\u4ea4\u6613\uff0c\u5728\u53e6\u4e00\u6761\u94fe\u4e0a\u53ef\u80fd\u4e5f\u6709\u6548\uff08\u91cd\u653e\u653b\u51fb\u98ce\u9669\uff09\u3002</li> <li>\u89e3\u51b3\u65b9\u6848\uff1a\u901a\u5e38\u5728\u786c\u5206\u53c9\u5347\u7ea7\u4e2d\u52a0\u5165 \u91cd\u653e\u4fdd\u62a4 (Replay Protection) \u6216 \u72ec\u7279\u7684\u94fe\u6807\u8bc6\u7b26 (Chain ID)\uff0c\u4f7f\u4e00\u6761\u94fe\u4e0a\u7684\u4ea4\u6613\u5728\u53e6\u4e00\u6761\u94fe\u4e0a\u660e\u786e\u65e0\u6548\uff0c\u9632\u6b62\u4ea4\u6613\u88ab\u610f\u5916\u91cd\u64ad\u5230\u9519\u8bef\u7684\u94fe\u4e0a\u9020\u6210\u53cc\u82b1\u6216\u8d44\u4ea7\u635f\u5931\u3002</li> </ul> </li> <li>\u7b14\u8bb0\u4fee\u6b63\uff1a \u786c\u5206\u53c9\u4e0d\u9700\u8981\u6240\u6709\u8282\u70b9\u90fd\u66f4\u65b0\u624d\u80fd\u907f\u514d\u6c38\u4e45\u5206\u53c9\u3002\u6070\u6070\u76f8\u53cd\uff0c\u53ea\u8981\u6709\u8282\u70b9\u4e0d\u66f4\u65b0\uff0c\u6c38\u4e45\u5206\u53c9\u5c31\u5fc5\u7136\u53d1\u751f\u3002\u65b0\u94fe\u7684\u6210\u529f\u53d6\u51b3\u4e8e\u80fd\u5426\u83b7\u5f97\u8db3\u591f\u7684\u7b97\u529b\u3001\u793e\u533a\u548c\u7ecf\u6d4e\u652f\u6301\u6765\u6301\u7eed\u53d1\u5c55\u3002\u65e7\u94fe\u4e5f\u4e0d\u4f1a\u6d88\u5931\uff0c\u53ea\u8981\u8fd8\u6709\u652f\u6301\u8005\u8fd0\u884c\u8282\u70b9\u548c\u6316\u77ff\u3002</li> </ul>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/9.%20%E5%88%86%E5%8F%89/#soft-fork","title":"\u8f6f\u5206\u53c9 (Soft Fork)","text":"<ul> <li>\u5b9a\u4e49\uff1a \u5f15\u5165\u5411\u540e\u517c\u5bb9 (Backward Compatible) \u7684\u534f\u8bae\u66f4\u6539\u3002\u5373\u65b0\u89c4\u5219\u662f\u65e7\u89c4\u5219\u7684\u4e00\u4e2a\u5b50\u96c6 (Stricter Rules)\u3002\u65b0\u89c4\u5219\u4e0b\u4ea7\u751f\u7684\u533a\u5757\u6216\u4ea4\u6613\u4f1a\u88ab\u9075\u5faa\u65e7\u89c4\u5219\u7684\u8282\u70b9\u89c6\u4e3a\u6709\u6548 (Valid)\uff0c\u4f46\u53cd\u8fc7\u6765\u4e0d\u4e00\u5b9a\u6210\u7acb\uff08\u65e7\u89c4\u5219\u4e0b\u53ef\u80fd\u4ea7\u751f\u88ab\u65b0\u8282\u70b9\u89c6\u4e3a\u65e0\u6548\u7684\u533a\u5757/\u4ea4\u6613\uff09\u3002</li> <li>\u89e6\u53d1\u539f\u56e0\uff1a \u901a\u5e38\u662f\u6536\u7d27\u73b0\u6709\u89c4\u5219\u6216\u5728\u73b0\u6709\u89c4\u5219\u6846\u67b6\u5185\u589e\u52a0\u65b0\u7684\u542b\u4e49\uff0c\u4f8b\u5982\uff1a<ul> <li>\u51cf\u5c11\u533a\u5757\u5927\u5c0f\u9650\u5236\uff08\u5982\u7b14\u8bb0\u4e2d\u7684 1MB -&gt; 0.5MB \u4f8b\u5b50 - \u6ce8\uff1a\u8fd9\u662f\u7406\u8bba\u8bf4\u660e\uff0c\u5b9e\u9645\u6bd4\u7279\u5e01\u4ece\u672a\u8fd9\u6837\u505a\u8fc7\uff09\u3002</li> <li>\u5f15\u5165\u65b0\u7684\u5171\u8bc6\u89c4\u5219\uff0c\u5982\uff1a<ul> <li>BIP 34: \u8981\u6c42\u533a\u5757\u7248\u672c\u53f7\u9012\u589e\u5e76\u5728 Coinbase \u4ea4\u6613\u4e2d\u5305\u542b\u533a\u5757\u9ad8\u5ea6\u3002</li> <li>BIP 66: \u4e25\u683c DER \u7f16\u7801\u7b7e\u540d\u9a8c\u8bc1\u3002</li> <li>P2SH (Pay to Script Hash): \u901a\u8fc7\u8f6f\u5206\u53c9\u6fc0\u6d3b\uff08\u7b14\u8bb0\u4e2d\u63d0\u5230\u7684\u5173\u952e\u6848\u4f8b\uff01\uff09\u3002\u65b0\u8282\u70b9\u6267\u884c\u989d\u5916\u7684\u8d4e\u56de\u811a\u672c\u9a8c\u8bc1\u6b65\u9aa4\uff0c\u65e7\u8282\u70b9\u53ea\u770b\u5230 <code>OP_HASH160 &lt;hash&gt; OP_EQUAL</code> \u8fd9\u4e2a\u4ed6\u4eec\u80fd\u7406\u89e3\u7684\u7b80\u5355\u811a\u672c\u3002</li> <li>SegWit (\u9694\u79bb\u89c1\u8bc1): \u901a\u8fc7\u8f6f\u5206\u53c9\u6fc0\u6d3b\uff0c\u6539\u53d8\u4e86\u4ea4\u6613\u6570\u636e\u7684\u7ed3\u6784\u548c Merkle \u6811\u8ba1\u7b97\u65b9\u5f0f\u3002</li> </ul> </li> <li>\u8d4b\u4e88\u73b0\u6709\u533a\u5757/\u4ea4\u6613\u7ed3\u6784\u4e2d\u672a\u4f7f\u7528\u6216\u672a\u5b9a\u4e49\u7684\u5b57\u6bb5 (\u5982 Coinbase \u7684 extra data \u57df) \u65b0\u7684\u542b\u4e49\u6216\u7ea6\u675f\uff08\u7b14\u8bb0\u4e2d\u63d0\u5230\u7684 Coinbase \u6539\u9020\u4f8b\u5b50\uff09\u3002</li> </ul> </li> <li>\u8282\u70b9\u5347\u7ea7\u8981\u6c42\uff1a \u53ea\u9700\u8981\u5927\u591a\u6570\u7b97\u529b (\u901a\u5e38\u662f &gt;50%) \u5347\u7ea7\u5230\u65b0\u89c4\u5219\u8f6f\u4ef6\u5373\u53ef\u3002\u672a\u5347\u7ea7\u7684\u65e7\u8282\u70b9\u53ef\u4ee5\u7ee7\u7eed\u8fd0\u884c\u3002</li> <li>\u5206\u53c9\u8fc7\u7a0b\u4e0e\u7ed3\u679c\uff1a<ul> <li>\u5df2\u5347\u7ea7\u7684\u8282\u70b9\uff08\u65b0\u8282\u70b9\uff09\u6309\u7167\u66f4\u4e25\u683c\u7684\u65b0\u89c4\u5219\u6316\u77ff\u548c\u9a8c\u8bc1\u3002</li> <li>\u672a\u5347\u7ea7\u7684\u8282\u70b9\uff08\u65e7\u8282\u70b9\uff09\u4ecd\u7136\u63a5\u53d7\u65b0\u8282\u70b9\u4ea7\u751f\u7684\u533a\u5757\uff08\u56e0\u4e3a\u65b0\u5757\u4e5f\u6ee1\u8db3\u65e7\u89c4\u5219\uff09\uff0c\u4e5f\u63a5\u53d7\u65e7\u8282\u70b9\u4ea7\u751f\u7684\u533a\u5757\uff08\u53ea\u8981\u5b83\u4eec\u6ee1\u8db3\u65e7\u89c4\u5219\uff09\u3002</li> <li>\u5982\u679c\u65e7\u8282\u70b9\u4ea7\u751f\u4e86\u4e00\u4e2a\u53ea\u6ee1\u8db3\u65e7\u89c4\u5219\u4f46\u8fdd\u53cd\u65b0\u89c4\u5219\u7684\u533a\u5757\uff08\u4f8b\u5982\uff0c\u5305\u542b\u4e86\u4e00\u4e2a\u65b0\u8282\u70b9\u8ba4\u4e3a\u65e0\u6548\u7684\u4ea4\u6613\uff0c\u6216\u5927\u5c0f\u8d85\u8fc7\u65b0\u9650\u5236\uff09\uff0c\u8fd9\u4e2a\u533a\u5757\u4f1a\u88ab\u65b0\u8282\u70b9\u62d2\u7edd\uff0c\u6210\u4e3a\u4e00\u4e2a\u5b64\u5757 (Orphan Block)\u3002</li> <li>\u4e34\u65f6\u6027\u5206\u53c9\uff1a \u8fd9\u79cd\u8fdd\u53cd\u65b0\u89c4\u5219\u7684\u533a\u5757\u662f\u5076\u7136\u4ea7\u751f\u7684\uff08\u901a\u5e38\u56e0\u4e3a\u65e7\u8282\u70b9\u672a\u5347\u7ea7\uff09\u3002\u5f53\u65b0\u8282\u70b9\u5360\u591a\u6570\u7b97\u529b\u65f6\uff0c\u5b83\u4eec\u6316\u51fa\u7684\u7b26\u5408\u65b0\u65e7\u89c4\u5219\u7684\u94fe\u4f1a\u66f4\u5feb\u589e\u957f\u6210\u4e3a\u6700\u957f\u94fe\u3002\u65e7\u8282\u70b9\u4f1a\u8ddf\u968f\u8fd9\u6761\u6700\u957f\u94fe\uff08\u5b83\u4eec\u8ba4\u4e3a\u6709\u6548\uff09\uff0c\u800c\u5b64\u7acb\u7684\u65e0\u6548\u5757\u4f1a\u88ab\u4e22\u5f03\u3002\u56e0\u6b64\uff0c\u8f6f\u5206\u53c9\u901a\u5e38\u4e0d\u4f1a\u5bfc\u81f4\u6c38\u4e45\u6027\u7684\u533a\u5757\u94fe\u5206\u88c2\uff0c\u7f51\u7edc\u6700\u7ec8\u4f1a\u7edf\u4e00\u5230\u65b0\u89c4\u5219\u4e0a\u3002</li> <li>\u5411\u540e\u517c\u5bb9\u6027\uff1a \u65e7\u8282\u70b9\u611f\u77e5\u4e0d\u5230\u65b0\u89c4\u5219\u7684\u5b58\u5728\uff0c\u5b83\u4eec\u53ea\u662f\u7ee7\u7eed\u9075\u5faa\u539f\u6765\u7684\u89c4\u5219\u3002\u65b0\u89c4\u5219\u5bf9\u5b83\u4eec\u6765\u8bf4\u662f\u201c\u9690\u5f62\u201d\u7684\u3002</li> </ul> </li> <li>\u65b0\u8282\u70b9\u7684\u989d\u5916\u9a8c\u8bc1\uff1a \u5982\u7b14\u8bb0\u6240\u8ff0\uff0c\u65b0\u8282\u70b9\u901a\u5e38\u9700\u8981\u6bd4\u65e7\u8282\u70b9\u591a\u9a8c\u8bc1\u4e00\u6b65\u6216\u5e94\u7528\u66f4\u4e25\u683c\u7684\u89c4\u5219\uff08\u5982\u9a8c\u8bc1\u8d4e\u56de\u811a\u672c\u5185\u5bb9\u3001\u68c0\u67e5 SegWit \u7b7e\u540d\u3001\u68c0\u67e5 BIP \u8981\u6c42\u7684\u5b57\u6bb5\u7b49\uff09\u3002</li> <li>\u7b14\u8bb0\u4fee\u6b63\uff1a<ul> <li>\u8f6f\u5206\u53c9\u6210\u529f\u7684\u5173\u952e\u662f\u5927\u591a\u6570\u7b97\u529b (&gt;50%) \u63a5\u53d7\u5e76\u6267\u884c\u65b0\u89c4\u5219\uff0c\u800c\u975e\u201c\u534a\u6570\u4ee5\u4e0a\u7684\u8282\u70b9\u66f4\u65b0\u201d\uff08\u8282\u70b9\u6570\u4e0d\u662f\u5171\u8bc6\u7684\u51b3\u5b9a\u56e0\u7d20\uff0c\u7b97\u529b\u624d\u662f\uff09\u3002\u53ea\u8981\u591a\u6570\u7b97\u529b\u6267\u884c\u65b0\u89c4\u5219\uff0c\u94fe\u5c31\u4f1a\u7a33\u5b9a\u5728\u65b0\u89c4\u5219\u4e0b\u3002</li> <li>\u201c\u65e7\u8282\u70b9\u8ba4\u53ef\u65b0\u8282\u70b9\u201d\u66f4\u51c6\u786e\u7684\u8bf4\u6cd5\u662f\uff1a\u65e7\u8282\u70b9\u63a5\u53d7\u65b0\u8282\u70b9\u4ea7\u751f\u7684\u533a\u5757\uff08\u56e0\u4e3a\u5b83\u4eec\u6ee1\u8db3\u65e7\u89c4\u5219\uff09\u3002</li> <li>\u201c\u65b0\u8282\u70b9\u4e0d\u8ba4\u53ef\u65e7\u8282\u70b9\u201d\u662f\u6307\u65b0\u8282\u70b9\u4f1a\u62d2\u7edd\u90a3\u4e9b\u8fdd\u53cd\u65b0\u89c4\u5219\u7684\u533a\u5757\uff08\u5373\u4f7f\u5b83\u4eec\u6ee1\u8db3\u65e7\u89c4\u5219\uff09\uff0c\u5bfc\u81f4\u8fd9\u4e9b\u533a\u5757\u6210\u4e3a\u5b64\u5757\u3002</li> <li>\u8f6f\u5206\u53c9\u662f\u5411\u540e\u517c\u5bb9\u7684\uff0c\u5141\u8bb8\u65e7\u8282\u70b9\u5728\u672a\u5347\u7ea7\u7684\u60c5\u51b5\u4e0b\u7ee7\u7eed\u53c2\u4e0e\u7f51\u7edc\uff08\u5c3d\u7ba1\u53ef\u80fd\u4ea7\u751f\u5b64\u5757\uff09\u3002</li> </ul> </li> </ul>"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/9.%20%E5%88%86%E5%8F%89/#hard-fork-vs-soft-fork","title":"\u5173\u952e\u5bf9\u6bd4\u603b\u7ed3 (Hard Fork vs. Soft Fork)","text":"\u7279\u5f81 \u786c\u5206\u53c9 (Hard Fork) \u8f6f\u5206\u53c9 (Soft Fork) \u517c\u5bb9\u6027 \u5411\u540e\u4e0d\u517c\u5bb9 \u5411\u540e\u517c\u5bb9 \u89c4\u5219\u53d8\u5316 \u5f15\u5165\u65b0\u89c4\u5219\uff0c\u653e\u5bbd\u6216\u6839\u672c\u6539\u53d8\u9650\u5236 \u6536\u7d27\u73b0\u6709\u89c4\u5219\u6216\u5728\u6846\u67b6\u5185\u589e\u52a0\u542b\u4e49 \u65e7\u8282\u70b9\u770b\u65b0\u5757 \u65e0\u6548 (\u62d2\u7edd) \u6709\u6548 (\u63a5\u53d7) \u65b0\u8282\u70b9\u770b\u65e7\u5757 \u901a\u5e38\u6709\u6548 (\u8ba4\u53ef\u5386\u53f2) \u53ef\u80fd\u65e0\u6548 (\u5982\u679c\u8fdd\u53cd\u65b0\u89c4\u5219) \u8282\u70b9\u5347\u7ea7\u8981\u6c42 \u5fc5\u987b\u6240\u6709\u8282\u70b9\u5347\u7ea7\u624d\u80fd\u7ef4\u6301\u5355\u94fe \u53ea\u9700\u591a\u6570\u7b97\u529b\u5347\u7ea7\u5373\u53ef\u7ef4\u6301\u5355\u94fe \u7ed3\u679c \u6c38\u4e45\u6027\u533a\u5757\u94fe\u5206\u88c2 (\u4e24\u6761\u72ec\u7acb\u94fe) \u4e34\u65f6\u6027\u5206\u53c9/\u5b64\u5757\uff0c\u6700\u7ec8\u7edf\u4e00\u5230\u65b0\u89c4\u5219\u94fe \u4f8b\u5b50 BTC -&gt; BCH\uff1b ETH -&gt; ETC P2SH\uff1b SegWit\uff1b BIP 34, 66, 9x \u7cfb\u5217 \u5347\u7ea7\u98ce\u9669 \u9ad8 (\u5206\u88c2\u98ce\u9669) \u4f4e (\u65e7\u8282\u70b9\u53ef\u7ee7\u7eed\u8fd0\u884c) \u91cd\u653e\u98ce\u9669 \u9ad8 (\u901a\u5e38\u9700\u8981 Chain ID/\u91cd\u653e\u4fdd\u62a4) \u4f4e\u6216\u65e0"},{"location":"BlockChain/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E8%BF%90%E7%94%A8/BTC/9.%20%E5%88%86%E5%8F%89/#_2","title":"\u603b\u7ed3","text":"<ol> <li>\u533a\u5206\u5206\u53c9\u653b\u51fb\u4e0e\u534f\u8bae\u5206\u53c9\uff1a \u524d\u8005\u662f\u6076\u610f\u884c\u4e3a (51%\u653b\u51fb)\uff0c\u540e\u8005\u662f\u534f\u8bae\u5347\u7ea7\u7684\u81ea\u7136\u7ed3\u679c\u3002</li> <li>\u7406\u89e3\u786c\u5206\u53c9\u672c\u8d28\uff1a \u5411\u540e\u4e0d\u517c\u5bb9\uff0c\u5fc5\u7136\u5bfc\u81f4\u6c38\u4e45\u6027\u94fe\u5206\u88c2 (\u4e24\u6761\u94fe)\u3002\u5173\u952e\u5728\u4e8e\u65b0\u89c4\u5219\u4e0b\u4ea7\u751f\u7684\u5757\u88ab\u65e7\u8282\u70b9\u62d2\u7edd\u3002\u6210\u529f\u4f9d\u8d56\u793e\u533a\u652f\u6301\uff0c\u975e\u6240\u6709\u8282\u70b9\u5347\u7ea7\u3002</li> <li>\u7406\u89e3\u8f6f\u5206\u53c9\u672c\u8d28\uff1a \u5411\u540e\u517c\u5bb9\uff0c\u901a\u5e38\u4e0d\u4f1a\u5bfc\u81f4\u6c38\u4e45\u5206\u88c2\u3002\u65b0\u89c4\u5219\u662f\u65e7\u89c4\u5219\u7684\u66f4\u4e25\u683c\u5b50\u96c6\u3002\u65b0\u8282\u70b9\u4ea7\u751f\u7684\u5757\u88ab\u65e7\u8282\u70b9\u63a5\u53d7\uff0c\u4f46\u65b0\u8282\u70b9\u4f1a\u62d2\u7edd\u8fdd\u53cd\u65b0\u89c4\u5219\u7684\u65e7\u8282\u70b9\u5757\uff08\u5b64\u5757\uff09\u3002\u6210\u529f\u4f9d\u8d56\u591a\u6570\u7b97\u529b\u5347\u7ea7\u3002</li> <li>\u638c\u63e1\u6838\u5fc3\u6848\u4f8b\uff1a<ul> <li>\u786c\u5206\u53c9\uff1a \u533a\u5757\u5927\u5c0f\u589e\u52a0 (BCH)\uff0c\u5171\u8bc6\u673a\u5236\u6539\u53d8\u3002</li> <li>\u8f6f\u5206\u53c9\uff1a P2SH (\u6838\u5fc3\u6848\u4f8b\uff01), SegWit (\u6838\u5fc3\u6848\u4f8b\uff01)\uff0c BIP 34 (\u533a\u5757\u9ad8\u5ea6), BIP 66 (\u4e25\u683c\u7b7e\u540d)\uff0c Coinbase \u57df\u65b0\u7528\u9014 (\u5982 extra nonce \u6269\u5c55)\u3002</li> </ul> </li> <li>\u7406\u89e3\u8282\u70b9\u89c6\u89d2\uff1a \u786c\u5206\u53c9\u4e2d\uff0c\u65b0\u65e7\u8282\u70b9\u4e92\u76f8\u62d2\u7edd\u5bf9\u65b9\u7684\u65b0\u5757\uff1b\u8f6f\u5206\u53c9\u4e2d\uff0c\u65e7\u8282\u70b9\u63a5\u53d7\u65b0\u5757\uff0c\u65b0\u8282\u70b9\u62d2\u7edd\u65e0\u6548\u65e7\u5757\u3002</li> <li>\u4e86\u89e3\u91cd\u653e\u98ce\u9669\u4e0e\u9632\u62a4\uff1a \u786c\u5206\u53c9\u540e\u9700\u8981 Chain ID/\u91cd\u653e\u4fdd\u62a4\u9632\u6b62\u4ea4\u6613\u5728\u9519\u8bef\u94fe\u4e0a\u751f\u6548\u3002</li> <li>\u660e\u786e\u7b97\u529b\u7684\u4f5c\u7528\uff1a \u5728\u8f6f\u5206\u53c9\u4e2d\uff0c\u7b97\u529b\uff08\u800c\u975e\u8282\u70b9\u6570\uff09\u662f\u51b3\u5b9a\u94fe\u80fd\u5426\u7a33\u5b9a\u5728\u65b0\u89c4\u5219\u4e0b\u7684\u5173\u952e\u3002\u5728\u5206\u53c9\u653b\u51fb\u4e2d\uff0c\u7b97\u529b\uff0851%\uff09\u662f\u653b\u51fb\u6210\u529f\u7684\u57fa\u7840\u3002</li> </ol>"},{"location":"Links/","title":"Links","text":""},{"location":"Links/#_1","title":"\u53cb\u60c5\u94fe\u63a5","text":""},{"location":"Links/#_2","title":"\ud83d\udcda \u63a8\u8350\u8d44\u6e90","text":"<ul> <li> <p> MDN Web Docs</p> <p>Web\u5f00\u53d1\u5fc5\u5907\u53c2\u8003</p> <p> MDN</p> </li> <li> <p> GitHub</p> <p>\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0</p> <p> GitHub</p> </li> <li> <p> Stack Overflow</p> <p>\u7a0b\u5e8f\u5458\u95ee\u7b54\u793e\u533a</p> <p> Stack Overflow</p> </li> </ul>"},{"location":"Note/","title":"Note","text":""},{"location":"Note/#note","title":"Note","text":"<p>Abstract</p> <p>\u672c\u90e8\u5206\u5185\u5bb9\uff08\u9664\u7279\u522b\u58f0\u660e\u5916\uff09\u91c7\u7528 \u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u4fdd\u6301\u4e00\u81f4 4.0 \u56fd\u9645 (CC BY-NC-SA 4.0) \u8bb8\u53ef\u534f\u8bae\u8fdb\u884c\u8bb8\u53ef\u3002</p>   ## \u4e3a\u4e07\u4e16\u7ee7\u592a\u5e73 - [\u7a0b\u5e8f\u8bbe\u8ba1](../\u8003\u8bd5/\u7a0b\u5e8f\u8bbe\u8ba1/) - [\u9a6c\u539f](../\u8003\u8bd5/\u9a6c\u539f/)  ## Thoughts - [\u5173\u4e8e\u7ec8\u8eab\u5b66\u4e60\u4f53\u7cfb\u7684\u601d\u8003](../\u601d\u8003/\u5173\u4e8e\u7ec8\u8eab\u5b66\u4e60\u4f53\u7cfb\u7684\u601d\u8003/)  ## Project - [OpenChain](../Project/OpenChain/)"},{"location":"Note/Project/OpenChain/","title":"OpenChain","text":""},{"location":"Note/Project/OpenChain/#openchain","title":"OpenChain","text":"<p> \u7ea6 1256 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>\u4e3a\u94ed\u8bb0\u9996\u6b21\u5c06\u5173\u4e8e\u7ec8\u8eab\u5b66\u4e60\u4f53\u7cfb\u7684\u601d\u8003\u4e2d\u6240\u9610\u8ff0\u7684\u5de5\u7a0b\u601d\u7ef4\uff0c\u5168\u9762\u5e94\u7528\u4e8e\u5927\u5b66\u9636\u6bb5\u9996\u4e2a\u5b8c\u6574\u9879\u76ee\u7684\u5b9e\u8df5\u8fc7\u7a0b\uff0c\u7279\u4f5c\u6b64\u8bb0\u5f55\u2014\u2014OpenChain\u00a0\u3002</p>"},{"location":"Note/Project/OpenChain/#what","title":"What","text":"<p>\u6b64\u9879\u76ee\u5177\u5907\u53cc\u91cd\u5c5e\u6027\uff0c\u65e2\u662f\u6211\u5728\u5927\u4e00\u5b66\u5e74\u4fee\u8bfb\u7684\u4e00\u95e8\u5927\u4e8c\u4e13\u4e1a\u57fa\u7840\u8bfe\u7a0b\u7684\u671f\u672b\u5927\u4f5c\u4e1a\uff0c\u4e5f\u662f\u53c2\u4e0eOpenRank\u6bd4\u8d5b\u7684\u6b63\u5f0f\u53c2\u8d5b\u4f5c\u54c1\u3002\u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u6211\u4eec\u6700\u7ec8\u4fa5\u5e78\u5168\u56fd\u4e09\u7b49\u5956\u3002</p> <p>\u7b80\u800c\u8a00\u4e4b\uff0cOpenChain \u9879\u76ee\u6df1\u5ea6\u805a\u7126\u4e8e\u5f00\u6e90\u751f\u6001\u4f53\u7cfb\u5185\u7684\u53ef\u6301\u7eed\u6027\u53d1\u5c55\u8bae\u9898\u3002\u5176\u6838\u5fc3\u4ef7\u503c\u5728\u4e8e\uff0c\u901a\u8fc7\u6784\u5efa\u9ad8\u6548\u7684 \u201c\u4eba - \u9879\u76ee\u201d \u53cc\u5411\u5339\u914d\u673a\u5236\uff0c\u6709\u529b\u63a8\u52a8\u5f00\u6e90\u751f\u6001\u7cfb\u7edf\u7684\u7a33\u5065\u3001\u6301\u7eed\u53d1\u5c55\u3002</p>"},{"location":"Note/Project/OpenChain/#analysis","title":"Analysis","text":"<p>\u5ba2\u89c2\u6765\u8bf4\uff0c\u9879\u76ee\u7acb\u610f\u5c1a\u6d45\uff0c\u5728\u89c1\u8fc7\u5927\u98ce\u5927\u6d6a\u7684\u8bc4\u59d4\u9762\u524d\uff0c\u786e\u5b9e\u7565\u663e\u5355\u8584\uff0c\u5b9e\u9645\u610f\u4e49\u4e00\u822c\u3002\u6838\u5fc3\u96be\u70b9\u5728\u4e8e\u63a8\u8350\u7b97\u6cd5\u7684\u6709\u6548\u6027\u9a8c\u8bc1\u4e0e\u4f18\u5316\u3002\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u5f53\u4e0b\u6700\u6709\u7528\u6700\u5173\u952e\u7684\u63a8\u8350\u6570\u636e\u6e90\u662f\u4e2a\u4eba\u7684\u6d4f\u89c8\u5386\u53f2\u548c\u5bf9\u5e94\u9875\u9762\u7684\u505c\u7559\u65f6\u95f4\u3002\u7136\u800c\uff0cOpenChain \u76ee\u524d\u4ec5\u4f9d\u8d56\u4e8e\u6709\u9650\u7684\u6807\u7b7e\u6570\u636e\u8fdb\u884c\u63a8\u8350\uff0c\u5176\u80fd\u5426\u7cbe\u51c6\u6d1e\u5bdf\u5e76\u6ee1\u8db3\u7528\u6237\u7684\u591a\u5143\u9700\u6c42\uff0c\u5728\u7406\u8bba\u4e0e\u5b9e\u8df5\u5c42\u9762\u5747\u9700\u5f00\u5c55\u66f4\u4e3a\u6df1\u5165\u7684\u7814\u7a76\u4e0e\u9a8c\u8bc1\u3002</p> <p>\u4e3b\u89c2\u6765\u8bf4\uff0cOpenChain\u7684\u5b8c\u6210\uff08\u6216\u79f0\u4e4b\u4e3a\u9636\u6bb5\u6027\u6210\u529f\uff09\u5bf9\u6211\u4e2a\u4eba\u662f\u610f\u4e49\u975e\u51e1\u3002\u524d\u7aef\u6211\u662f\u501f\u52a9v0dev\uff0c\u540e\u7aef\u4ee5\u53ca\u524d\u540e\u7aef\u7684\u8fde\u63a5\u6211\u662f\u501f\u52a9cursor\u3002\u867d\u7136\u4ee3\u7801\u4e3b\u4f53\u57fa\u672c\u90fd\u662fAI\u5de5\u5177\u5b8c\u6210\u7684\uff0c\u4f46\u4f5c\u4e3a\u4f7f\u7528\u8005\u8fd8\u662f\u5b66\u5230\u4e86\u5f88\u591a\uff0c\u65e0\u8bba\u662f\u5bf9\u524d\u540e\u7aef\u6574\u4f53\u6846\u67b6\u8ba4\u77e5\u7684\u63d0\u5347\u8fd8\u662f\u4e2a\u4eba\u5fc3\u6001\u7684\u7a33\u5b9a\u3002</p> <p>\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u7528\u81ea\u7136\u8bed\u8a00\u5b9e\u73b0\u5168\u6808\u5f00\u53d1 \u662f\u53ef\u4ee5\u770b\u5f97\u5230\u7684\u672a\u6765\u3002\u81f3\u4e8e\u5f53\u4e0b\uff0c\u5bf9\u4e8e\u6709\u4e00\u5b9a\u7f16\u7a0b\u57fa\u7840\u7684\u521d\u7ea7\u7a0b\u5e8f\u5458\uff0c\u5168\u6808\u5f00\u53d1\u5df2\u7ecf\u4e0d\u50cf5\u5e74\u524d\u751a\u81f31\u5e74\u524d\u95e8\u69db\u4e4b\u9ad8\u3002\u9762\u5bf9 AI \u6280\u672f\u7684\u8fc5\u731b\u53d1\u5c55\uff0c\u4f20\u7edf\u610f\u4e49\u4e0a\u5bf9\u5197\u6742\u4ee3\u7801\u7ec6\u8282\u7684\u6df1\u5ea6\u94bb\u7814\uff0c\u662f\u5426\u4ecd\u4e3a\u5f00\u53d1\u8005\u5fc5\u5907\u6280\u80fd\uff0c\u503c\u5f97\u6df1\u601d\u3002\u6240\u4ee5\u6211\u4f1a\u5f88\u5766\u7136\u5730\u627f\u8ba4\u8fd9\u4e2a\u9879\u76ee\u662fcoded by ai but designed by Frank</p>"},{"location":"Note/Project/OpenChain/#process","title":"Process","text":"<p>\u4f5c\u4e3a\u9879\u76ee\u56e2\u961f\u7684\u8d1f\u8d23\u4eba\uff0c\u6211\u5168\u9762\u8d1f\u8d23\u9879\u76ee\u5168\u751f\u547d\u5468\u671f\u7684\u7ba1\u7406\u4e0e\u63a8\u8fdb\u3002 \u521d\u671f\uff0c\u9879\u76ee\u7684\u7acb\u610f\u6211\u653e\u4e86\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\uff0c\u539f\u56e0\u5728\u4e8e\u5bf9\u6211\u6765\u8bf4\uff0c\u6211\u53ea\u613f\u610f\u5728\u6211\u611f\u5174\u8da3\u7684\u4e0a\u9762\u6d6a\u8d39\u65f6\u95f4\u3002 \u524d\u671f\uff0c\u63a8\u8350\u7b97\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0\u8fed\u4ee3\u4e86\u6570\u6b21\uff0c\u4ece\u904d\u5386\u5171\u540c\u4f5c\u8005\u5230\u4f18\u5316\u7b97\u6cd5\u518d\u5230\u6700\u7ec8\u7684\u63a8\u8350\u6c60\u7b97\u6cd5\u3002\u4e2d\u95f4\u601d\u7ef4\u78b0\u649e\u7684\u8fc7\u7a0b\u8fd8\u662f\u5f88\u597d\u73a9\u7684\u3002</p> <p>\u540e\u671f\uff0c\u9879\u76ee\u7684\u524d\u540e\u7aef\u90fd\u6574\u597d\u4e86\uff0c\u67092\u4e2a\u65b9\u5411\uff0c\u5b8c\u5584\u524d\u7aef\uff08\u6700\u540e\u7684\u5c55\u793a\u6548\u679c\u4f1a\u5f88\u597d\u770b\uff09\uff0c\u5b8c\u5584\u540e\u7aef\uff08\u5c24\u5176\u662f\u5176\u4e2d\u7684\u63a8\u8350\u7b97\u6cd5\uff09\u3002\u6211\u59cb\u7ec8\u8ba4\u4e3a\uff0c\u4ee5\u63a8\u8350\u7b97\u6cd5\u4e3a\u6838\u5fc3\u7684\u63a8\u8350\u6d41\u7a0b\u6240\u5e26\u6765\u7684\u5b9e\u9645\u610f\u4e49\u548c\u5e94\u7528\u4ef7\u503c\u6700\u4e3a\u91cd\u8981\u3002\u6240\u4ee5\u8fd9\u4e2a\u9636\u6bb5\u7684\u4efb\u52a1\u5f88\u67af\u71e5\uff0c\u901a\u8fc7\u4e0d\u65ad\u7684\u8c03\u8bd5\u548c\u9a8c\u8bc1\uff0c\u6539\u53d8\u76f8\u4f3c\u5ea6\u6307\u6807\u5404\u4e2a\u7ef4\u5ea6\u7684\u6743\u91cd\u6765\u5c3d\u53ef\u80fd\u4f7f\u5f97\u7ed3\u679c\u6709\u610f\u4e49\u3002</p> <p>\u672b\u671f\uff0c\u6211\u6000\u7591\u8fd9\u4e2a\u9636\u6bb5\u624d\u662f\u6211\u4eec\u83b7\u5956\u7684\u5173\u952e\u3002\u539f\u56e0\u5728\u4e8e\u590d\u8d5b\u8fdbtop16\u662f\u53ea\u75312\u4e2a\u8bc4\u59d4\u51b3\u5b9a\uff0c\u90a3\u4e48\u8fd0\u6c14\u5360\u5f88\u5927\u4e00\u90e8\u5206\u3002\u540c\u65f6\uff0c\u8bc4\u59d4\u7684\u5b9e\u529b\u4e5f\u6709\u9650\u3002\u6240\u4ee5\u5bf9\u4e8e\u9879\u76ee\u4ef7\u503c\u7684\u5206\u6790\u7edd\u5927\u7a0b\u5ea6\u4e0a\u4ece\u9879\u76ee\u7684\u8bf4\u660e\u6587\u4ef6\u4e0a\u83b7\u53d6\u3002\u6240\u4ee5\u6211\u505a\u4e86\u201c\u8fc7\u4e8e\u201d\u8be6\u7ec6\u7684readme\uff0c\u6211\u7684\u961f\u53cb\u505a\u4e86\u201c\u8fc7\u4e8e\u201d\u8be6\u7ec6\u7684\u6f14\u793a\u89c6\u9891\u3002</p> <p>\u8def\u6f14\uff0c\u56e0\u4e3a\u65f6\u95f4\u7684\u51b2\u7a81\u561b\uff0c\u5f88\u591a\u5b66\u957f\u5b66\u59d0\u53ea\u80fd\u901a\u8fc7\u7ebf\u4e0a\u7b54\u7591+\u7ebf\u4e0b\u627e\u4eba\u5c55\u793a\u7684\u5f62\u5f0f\u5b8c\u6210\u6700\u7ec8\u7684\u8def\u6f14\u3002\u51fa\u4e8e\u5bf9\u66f4\u9ad8\u5956\u91d1\u7684\u8ffd\u6c42\uff0c\u540c\u65f6\u518d\u6211\u6743\u8861\u4e4b\u540e\uff0c\u6211\u51b3\u5b9a\u98de\u5230\u6b66\u6c49\u53c2\u52a0\u3002\u4ece\u6574\u4e2a\u4f53\u9a8c\u6765\u8bf4\uff0c\u8fd9\u4e2a\u7ecf\u5386\u5f88\u5b9d\u8d35\u3002\u4ece\u8def\u6f14\u7684\u6548\u679c\u6765\u8bf4\uff0c\u4e0d\u592a\u7406\u60f3\u3002\u4e00\u65b9\u9762\u662f\u9879\u76eeppt\u8fd8\u662f\u4e0d\u591f\u4f18\u79c0\uff0c\u4e00\u65b9\u9762\u662f\u9879\u76ee\u672c\u8eab\u4e5f\u786e\u5b9e\u4e00\u822c\uff0c\u4e00\u65b9\u9762\u662f\u6211\u4e2a\u4eba\u5c55\u793a\u5b9e\u529b\u7684\u6709\u9650\uff0c\u5bf9\u9ea6\u514b\u98ce\u7684\u719f\u7ec3\u5ea6\u4e0d\u591f\uff0c\u5bfc\u81f4\u6574\u4e2a\u97f3\u91cf\u4e0d\u591f\u5145\u8db3\uff0c\u53e6\u5916 \u4e3a\u4e86\u8d76\u65f6\u95f4 \u6211\u628a26min\u7684\u5c55\u793a\u89c6\u9891\u7f29\u51cf\u52303min\uff0c\u4ee3\u4ef7\u662f\u573a\u9986\u7684\u97f3\u54cd\u6839\u672c\u542c\u4e0d\u6e05\u3002\u5728\u6700\u540e\u76845min\u63d0\u95ee\u4e2d\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u8fd8\u662f\u5f88\u6709\u6761\u7406\u76f4\u9762\u5730\u56de\u7b54\u4e86\u8bc4\u59d4\u8001\u5e08\u7684\u63d0\u95ee\u3002\u73b0\u5728\u60f3\u60f3\uff0c\u597d\u50cf\u5f53\u65f6\u4e5f\u6ca1\u6709\u5f88\u7d27\u5f20</p>"},{"location":"Note/Project/OpenChain/#values","title":"Values","text":"<ul> <li>\u5de5\u7a0b\u601d\u7ef4\u7684\u9b45\u529b     \u5c06\u590d\u6742\u7684\u9879\u76ee\u62c6\u89e3\u4e3a\u4e00\u4e2a\u4e2a\u53ef\u64cd\u4f5c\u7684\u6b65\u9aa4\uff0c\u4ece\u9879\u76ee\u7684\u7acb\u610f\u786e\u5b9a\u3001\u7b97\u6cd5\u7684\u9010\u6b65\u4f18\u5316\u3001\u65b9\u5411\u7684\u6289\u62e9\u5230\u6700\u7ec8\u6210\u679c\u7684\u5c55\u793a\uff0c\u6bcf\u4e2a\u9636\u6bb5\u90fd\u80fd\u6709\u6761\u4e0d\u7d0a\u5730\u63a8\u8fdb\u3002</li> </ul>"},{"location":"Note/Project/OpenChain/#future","title":"Future","text":"<p>\u540e\u9762\u7684\u8bdd\uff0c\u8981\u5c3d\u53ef\u80fd\u72ec\u7acb\u5b8c\u6210\u66f4\u9ad8\u96be\u5ea6\u7684\u9879\u76ee \u8fd9\u79cd\u7b80\u5355\u7684\u524d\u540e\u7aef\u9879\u76ee\u8fd8\u662f\u5c11\u78b0</p>"},{"location":"Note/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB%E7%9A%84%E6%80%9D%E8%80%83/","title":"\u5173\u4e8e\u7ec8\u8eab\u5b66\u4e60\u4f53\u7cfb\u7684\u601d\u8003","text":""},{"location":"Note/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB%E7%9A%84%E6%80%9D%E8%80%83/#_1","title":"\u5173\u4e8e\u7ec8\u8eab\u5b66\u4e60\u4f53\u7cfb\u7684\u601d\u8003","text":"<p> \u7ea6 1328 \u4e2a\u5b57  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>\u8fd9\u51e0\u5929\u770b\u5230\u4e00\u4e9b\u5927\u4f6c\u7684\u6587\u7ae0\uff0c\u5f88\u6709\u611f\u609f\uff0c\u7ed3\u5408\u81ea\u5df1\u7684\u4eb2\u8eab\u7ecf\u5386\uff0c\u4e5f\u8bd5\u7740\u8f93\u51fa\u4e00\u4e9b\u81ea\u5df1\u7684\u611f\u53d7\u3002</p>"},{"location":"Note/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB%E7%9A%84%E6%80%9D%E8%80%83/#_2","title":"\u5173\u4e8e\u6211","text":"<p>\u7ed9\u81ea\u5df12025\u5e74\u7684\u76ee\u6807\u662f\u201c\u522b\u6025\uff0c\u6162\u6162\u6765\u201d\uff0c\u4f46\u4f5c\u4e3a\u5927\u5b66\u56db\u5e74\u7684\u7b2c\u4e00\u5e74\uff0c\u6211\u9700\u8981\u6253\u7834\u8fc7\u53bb12\u5e74\u5b66\u751f\u601d\u7ef4\u7684\u684e\u688f\uff0c\u540c\u65f6\u4e5f\u8981\u5c55\u671b\u672a\u6765\u7684\u65b9\u5411\u3002\u4e0e\u9876\u5c16\u9662\u6821\u7684\u4f6c\u4e0d\u540c\uff0c\u666e\u901a985\u7684\u6211\u5728\u8003\u7814\u3001\u4fdd\u7814\u548c\u5c31\u4e1a\u4e4b\u95f4\u9700\u8981\u66f4\u591a\u6743\u8861\u3002\u5728\u4e0e\u8bb8\u591a\u4f18\u79c0\u7684\u5b66\u957f\u5b66\u59d0\u548c\u8001\u5e08\u4ea4\u6d41\u540e\uff0c\u6211\u53d1\u73b0\u50cf\u4fdd\u7814\u53bb\u4ea4\u5927\u8fd9\u6837\u7684\u76ee\u6807\u4f3c\u4e4e\u6709\u4e9b\u4e0d\u73b0\u5b9e\u3002\u66fe\u7ecf\u56e0\u4e3a\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4e00\u5ea6\u9677\u5165\u8ff7\u832b\u548c\u505c\u6ede\u7684\u72b6\u6001\u3002\u4f46\u73b0\u5728\u56de\u5934\u60f3\u60f3\uff0c\u7126\u8651\u662f\u65e0\u7528\u7684\u3002\u4e0e\u5176\u7126\u8651\uff0c\u4e0d\u5982\u811a\u8e0f\u5b9e\u5730\u3002</p> <p>\u6162\u6162\u6765\u5427\uff0c\u4ece\u820d\u5f03\u5b66\u751f\u601d\u7ef4\u5f00\u59cb\uff0c\u4ece\u4e3b\u52a8\u6784\u5efa\u81ea\u5df1\u7684\u7ec8\u8eab\u5b66\u4e60\u4f53\u7cfb\u5f00\u59cb\u3002</p>"},{"location":"Note/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB%E7%9A%84%E6%80%9D%E8%80%83/#_3","title":"\u820d\u5f03\u5b66\u751f\u601d\u7ef4","text":""},{"location":"Note/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB%E7%9A%84%E6%80%9D%E8%80%83/#_4","title":"\u5b66\u751f\u601d\u7ef4\u7684\u5c40\u9650","text":"<p>\u5728\u6211\u770b\u6765\uff0c\u5b66\u751f\u601d\u7ef4\u5b58\u5728\u4ee5\u4e0b\u51e0\u70b9\u95ee\u9898\uff1a</p> <ul> <li>\u7406\u60f3\u5316\u7684\u89c6\u89d2\uff1a\u5b66\u751f\u5e38\u5e38\u5c06\u4e16\u754c\u60f3\u8c61\u5f97\u8fc7\u4e8e\u7406\u60f3\u5316\uff0c\u8ba4\u4e3a\u4e00\u5207\u90fd\u53ef\u4ee5\u6309\u7167\u903b\u8f91\u548c\u89c4\u5219\u63a8\u5bfc\u3002</li> <li>\u76ee\u6807\u9519\u4f4d\uff1a\u5927\u5b66\u5e76\u4e0d\u662f\u7814\u7a76\u5982\u4f55\u8d5a\u94b1\u7684\u573a\u6240\u3002\u5982\u679c\u6211\u4eec\u53ea\u987e\u201c\u5377\u201d\u5b66\u4e1a\uff0c\u5ffd\u89c6\u4e86\u5b9e\u8df5\u7684\u610f\u4e49\uff0c\u53cd\u800c\u4f1a\u8ba9\u81ea\u5df1\u7684\u8fb9\u9645\u6548\u5e94\u9012\u51cf\uff0c\u540c\u65f6\u4e5f\u4f1a\u8ba9\u81ea\u5df1\u627f\u53d7\u66f4\u591a\u75db\u82e6\u3002</li> </ul>"},{"location":"Note/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB%E7%9A%84%E6%80%9D%E8%80%83/#_5","title":"\u5982\u4f55\u8f6c\u53d8","text":"<p>\u8981\u6446\u8131\u5b66\u751f\u601d\u7ef4\uff0c\u9700\u8981\u505a\u5230\uff1a</p> <ol> <li>\u591a\u8f93\u51fa\uff1a\u901a\u8fc7\u5199\u535a\u5ba2\u6765\u6574\u7406\u548c\u8868\u8fbe\u81ea\u5df1\u7684\u601d\u8003\u3002</li> <li>\u591a\u4ea4\u6d41\uff1a\u867d\u7136\u5728\u56fd\u5185\u7684\u6559\u80b2\u73af\u5883\u4e2d\uff0c\u540c\u7ea7\u4e4b\u95f4\u7684\u7ade\u4e89\u5173\u7cfb\u8f83\u4e3a\u75c5\u6001\uff0c\u4f46\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u5c1d\u8bd5\u5efa\u7acb\u771f\u8bda\u7684\u8fde\u63a5\uff1a<ul> <li>\u771f\u8bda\u5bf9\u5f85\u90a3\u4e9b\u771f\u8bda\u5bf9\u5f85\u4f60\u7684\u4eba\u3002</li> <li>\u591a\u4e0e\u5b66\u957f\u5b66\u59d0\u4ea4\u6d41\uff0c\u6253\u7834\u5e74\u7ea7\u4e4b\u95f4\u7684\u9694\u9602\u3002</li> </ul> </li> <li>\u591a\u53cd\u601d\uff1a\u8fd9\u79cd\u53cd\u601d\u4e0d\u5e94\u53ea\u662f\u7a7a\u60f3\uff0c\u800c\u662f\u4ee5\u6587\u5b57\u7b49\u5177\u4f53\u5f62\u5f0f\u8868\u73b0\u51fa\u6765\u3002</li> <li>\u6539\u53d8\u601d\u7ef4\u6a21\u5f0f\uff1a\u8ba4\u8bc6\u5230\u7406\u60f3/\u903b\u8f91\u7684\u4e16\u754c\u4e0e\u73b0\u5b9e/\u7269\u7406\u7684\u4e16\u754c\u5e76\u4e0d\u76f8\u540c\u3002\u63a5\u53d7\u8fd9\u4e00\u70b9\u540e\uff0c\u6211\u4eec\u624d\u80fd\u66f4\u7075\u6d3b\u5730\u5e94\u5bf9\u590d\u6742\u7684\u73b0\u5b9e\u3002</li> </ol>"},{"location":"Note/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB%E7%9A%84%E6%80%9D%E8%80%83/#_6","title":"\u5de5\u7a0b\u601d\u7ef4\u4e0e\u6d41\u5f0f\u89c4\u5212","text":""},{"location":"Note/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB%E7%9A%84%E6%80%9D%E8%80%83/#_7","title":"\u4ec0\u4e48\u662f\u5de5\u7a0b\u601d\u7ef4\u548c\u6d41\u5f0f\u89c4\u5212\uff1f","text":"<ol> <li>\u5de5\u7a0b\u601d\u7ef4\uff1a\u5c06\u4efb\u4f55\u4efb\u52a1\u89c6\u4e3a\u4e00\u4e2a\u5206\u9636\u6bb5/\u5206\u6b65\u9aa4\u7684\u9879\u76ee\uff0c\u901a\u8fc7\u5206\u89e3\u6b65\u9aa4\u6765\u9ad8\u6548\u5b8c\u6210\u4efb\u52a1\u7684\u601d\u7ef4\u65b9\u5f0f\u3002</li> <li>\u6d41\u5f0f\u89c4\u5212\uff1a\u5c06\u751f\u6d3b\u4e2d\u7684\u4e0d\u540c\u4efb\u52a1\u5212\u5206\u4e3a\u591a\u4e2a\u7c7b\u522b\uff08\u79f0\u4e3a\u201c\u6d41\u201d\uff09\uff0c\u5e76\u5728\u8fd9\u4e9b\u6d41\u4e4b\u95f4\u8fc5\u901f\u5207\u6362\u7684\u89c4\u5212\u65b9\u5f0f\u3002</li> </ol>"},{"location":"Note/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB%E7%9A%84%E6%80%9D%E8%80%83/#_8","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u5b83\u4eec\uff1f","text":"<ul> <li> <p>\u5de5\u7a0b\u601d\u7ef4\u7684\u4f18\u52bf\u5728\u4e8e\u80fd\u591f\u5feb\u901f\u4e0a\u624b\u5e76\u6295\u5165\u5b9e\u8df5\u3002\u73b0\u5b9e\u4e16\u754c\u4e0d\u540c\u4e8e\u8003\u8bd5\uff0c\u4f60\u6c38\u8fdc\u65e0\u6cd5\u5b8c\u5168\u9884\u6599\u9700\u8981\u54ea\u4e9b\u51c6\u5907\uff0c\u53ea\u80fd\u6839\u636e\u60c5\u51b5\u52a8\u6001\u8c03\u6574\u3002\u540c\u65f6\uff0c\u673a\u4f1a\u7a0d\u7eb5\u5373\u901d\uff0c\u8fc7\u5ea6\u51c6\u5907\u53cd\u800c\u53ef\u80fd\u8ba9\u4f60\u9519\u8fc7\u73cd\u8d35\u7684\u673a\u9047\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u53ef\u4ee5\u5ffd\u7565\u57fa\u7840\u77e5\u8bc6\u7684\u79ef\u7d2f\uff1a\u624e\u5b9e\u7684\u57fa\u7840\u662f\u5b8c\u6210\u4e00\u5207\u4efb\u52a1\u7684\u524d\u63d0\u3002</p> </li> <li> <p>\u6d41\u5f0f\u89c4\u5212\u7684\u76ee\u7684\u662f\u907f\u514d\u8fb9\u9645\u6548\u5e94\u9012\u51cf\uff1a\u957f\u65f6\u95f4\u4e13\u6ce8\u4e8e\u540c\u4e00\u4efb\u52a1\uff0c\u6548\u7387\u4f1a\u9010\u6e10\u4e0b\u964d\uff1b\u800c\u65f6\u95f4\u6295\u5165\u8fc7\u5c11\u53c8\u96be\u4ee5\u6709\u5b9e\u9645\u4ea7\u51fa\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6bcf\u5929\u7684\u65f6\u95f4\u5212\u5206\u4e3a\u591a\u4e2a\u201c\u6d41\u201d\uff0c\u5e76\u50cf\u7ba1\u7406\u8fdb\u7a0b\u4e00\u6837\u53ca\u65f6\u5207\u6362\u3002</p> </li> </ul> <p>\u5b9e\u73b0\u8fd9\u4e24\u70b9\u9700\u8981\u57f9\u517b\u81ea\u6211\u611f\u77e5\uff0c\u5373\u5b9a\u671f\u95ee\u81ea\u5df1\uff1a</p> <ul> <li>\u6211\u73b0\u5728\u5728\u505a\u4ec0\u4e48\uff1f</li> <li>\u76ee\u524d\u5904\u4e8e\u67d0\u4e2a\u9879\u76ee\u7684\u54ea\u4e2a\u9636\u6bb5\uff1f</li> <li>\u5f53\u524d\u4efb\u52a1\u5c5e\u4e8e\u54ea\u4e2a\u6d41\uff1f</li> </ul> <p>\u5982\u679c\u6ca1\u6709\u8fd9\u4e9b\u53cd\u601d\uff0c\u5c31\u5f88\u5bb9\u6613\u9677\u5165\u4f4e\u6548\u7684\u72b6\u6001\u3002</p>"},{"location":"Note/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB%E7%9A%84%E6%80%9D%E8%80%83/#_9","title":"\u6784\u5efa\u4e2a\u4eba\u7ec8\u8eab\u5b66\u4e60\u4f53\u7cfb","text":""},{"location":"Note/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB%E7%9A%84%E6%80%9D%E8%80%83/#_10","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\uff1f","text":"<ol> <li>\u4fe1\u606f\u7206\u70b8\uff1a\u5f53\u4eca\u4e16\u754c\u77e5\u8bc6\u66f4\u65b0\u8fed\u4ee3\u7684\u901f\u5ea6\u8d8a\u6765\u8d8a\u5feb\u3002</li> <li>\u8bb0\u5fc6\u9057\u5fd8\uff1a\u4eba\u7c7b\u7684\u8bb0\u5fc6\u529b\u6709\u9650\u3002</li> <li>\u6548\u7387\u9700\u6c42\uff1a\u73b0\u4ee3\u793e\u4f1a\u5bf9\u5b66\u4e60\u6548\u7387\u7684\u8981\u6c42\u9010\u6b65\u63d0\u5347\u3002</li> </ol>"},{"location":"Note/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB%E7%9A%84%E6%80%9D%E8%80%83/#_11","title":"\u5982\u4f55\u5b9e\u73b0\uff1f","text":""},{"location":"Note/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB%E7%9A%84%E6%80%9D%E8%80%83/#_12","title":"\u8fdc\u79bb\u4f4e\u8d28\u91cf\u4fe1\u606f","text":"<p>\u73b0\u4ee3\u793e\u4f1a\u5e76\u4e0d\u7f3a\u4e4f\u4f18\u8d28\u4fe1\u606f\uff0c\u800c\u662f\u7f3a\u4e4f\u7b5b\u9009\u4f18\u8d28\u4fe1\u606f\u7684\u80fd\u529b\u3002\u6211\u7684\u4e00\u4e9b\u901a\u7528\u539f\u5219\u662f\uff1a - \u8d8a\u5927\u4f17\u7684\u6e20\u9053\u566a\u97f3\u8d8a\u5927\uff0c\u800c\u5c0f\u4f17\u5708\u5b50\u7684\u5185\u5bb9\u8d28\u91cf\u66f4\u9ad8\u3002 - \u5ffd\u7565\u7f3a\u4e4f\u57fa\u672c\u79d1\u5b66\u7d20\u517b\u7684\u4eba\u63d0\u4f9b\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u901a\u8fc7\u5e38\u8bc6\u6d4b\u8bd5\u67d0\u4eba\u7684\u53ef\u4fe1\u5ea6\u3002 - \u4e3a\u77e5\u8bc6\u4ed8\u8d39\u662f\u79d1\u5b66\u7684\u884c\u4e3a\uff0c\u9ad8\u8d28\u91cf\u7684\u4fe1\u606f\u5f80\u5f80\u4e0d\u662f\u514d\u8d39\u7684\u3002 - \u8c28\u614e\u8ffd\u70ed\u70b9\uff0c\u70ed\u70b9\u4fe1\u606f\u5f80\u5f80\u5145\u65a5\u7740\u4f4e\u8d28\u91cf\u5185\u5bb9\u3002 - \u533a\u5206\u4e8b\u5b9e\u4e0e\u89c2\u70b9\uff1a\u4e8b\u5b9e\u63a5\u53d7\u5373\u53ef\uff0c\u89c2\u70b9\u5219\u9700\u8981\u72ec\u7acb\u601d\u8003\u3002</p>"},{"location":"Note/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB%E7%9A%84%E6%80%9D%E8%80%83/#_13","title":"\u5199\u4f5c\u7684\u610f\u4e49","text":"<ol> <li>\u6df1\u5ea6\u5b66\u4e60\uff1a\u9605\u8bfb\u65f6\uff0c\u6211\u4eec\u88ab\u52a8\u63a5\u53d7\u4f5c\u8005\u7684\u89c2\u70b9\uff1b\u800c\u5199\u4f5c\u8981\u6c42\u6211\u4eec\u67e5\u9605\u8d44\u6599\u3001\u5206\u6790\u95ee\u9898\uff0c\u751a\u81f3\u603b\u7ed3\u591a\u5e74\u7ecf\u9a8c\uff0c\u4ece\u800c\u4fc3\u8fdb\u6df1\u5ea6\u601d\u8003\u3002</li> <li>\u9ad8\u8d28\u91cf\u793e\u4ea4\uff1a\u4e00\u7bc7\u597d\u7684\u6587\u7ae0\u80fd\u591f\u5efa\u7acb\u4fe1\u4efb\u5e76\u5f62\u6210\u6df1\u5ea6\u8fde\u63a5\uff0c\u800c\u704c\u6c34\u5f0f\u7684\u804a\u5929\u5219\u96be\u4ee5\u4ee4\u4eba\u4fe1\u670d\u3002</li> <li>\u521b\u9020\u673a\u4f1a\uff1a\u6211\u6709\u4e9b\u6587\u7ae0\u5e2e\u52a9\u6211\u627e\u5230\u65b0\u9886\u57df\u7684\u5de5\u4f5c\u673a\u4f1a\uff0c\u6709\u4e9b\u5438\u5f15\u4e86\u66f4\u6709\u7ecf\u9a8c\u7684\u4eba\u5408\u4f5c\uff0c\u6709\u4e9b\u6587\u7ae0\u8ba9\u6211\u7ed3\u8bc6\u4e86\u66f4\u591a\u5fd7\u540c\u9053\u5408\u7684\u670b\u53cb\u3002\u5199\u4f5c\u7684\u4ef7\u503c\u65e0\u6cd5\u5355\u7eaf\u7528\u9605\u8bfb\u91cf\u8861\u91cf\u3002</li> </ol>"},{"location":"Note/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB%E7%9A%84%E6%80%9D%E8%80%83/#reference","title":"reference","text":"<ol> <li>\u6784\u5efa\u7ec8\u8eab\u5b66\u4e60\u4f53\u7cfb\u8fdb\u884c\u81ea\u6211\u63d0\u5347\u00a0\u00b7 BMPI</li> </ol>"},{"location":"Note/%E8%80%83%E8%AF%95/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/","title":"\u7a0b\u5e8f\u8bbe\u8ba1","text":""},{"location":"Note/%E8%80%83%E8%AF%95/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/#_1","title":"\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p> \u7ea6 732 \u4e2a\u5b57  19 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>\u6bcf\u4e00\u6b21\u8003\u8bd5\u3001\u6bcf\u4e00\u4efd\u7b54\u5377\uff0c\u90fd\u662f\u4e00\u6bb5\u5386\u7a0b\uff0c\u4e5f\u662f\u4e00\u79cd\u6c89\u6dc0\u3002\u5e0c\u671b\u8fd9\u4e9b\u8bb0\u5f55\u4e0d\u4ec5\u662f\u5bf9\u81ea\u5df1\u7684\u590d\u76d8\uff0c\u66f4\u80fd\u4e3a\u5b66\u5f1f\u5b66\u59b9\u4eec\u63d0\u4f9b\u6709\u7528\u7684\u501f\u9274\uff0c\u8ba9\u540e\u6765\u7684\u4f60\u4eec\u5c11\u8d70\u5f2f\u8def\uff0c\u591a\u4e00\u4e9b\u4ece\u5bb9\u4e0e\u81ea\u4fe1\u3002</p> <ul> <li>\u56e0\u4e3a\u672c\u6587\u6240\u6709\u7684\u56fe\u7247\u90fd\u662f\u5b58\u653e\u5728github\u4e0a\u7684\u56fe\u5e8a\u4e0a\uff0c\u6240\u4ee5\u56fe\u7247\u6ca1\u663e\u793a\u51fa\u6765\u53ef\u80fd\u9700\u8981\u4f60\u7528\u70b9\u9b54\u6cd5\u3002\u4f5c\u4e3a\u6570\u636e\u5b66\u751f\uff0c\u8fd9\u662f\u5fc5\u5907\u6280\u80fd\u554a\uff01\u4e0d\u4f1a\u627e\u6211</li> </ul>"},{"location":"Note/%E8%80%83%E8%AF%95/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/#_2","title":"\u7a0b\u5e8f\u8bbe\u8ba1\u671f\u4e2d\u8003\u8bd5","text":"<ul> <li> <p>\u7eaf\u673a\u8bd5\u9898\uff0c\u5f88\u7b80\u5355</p> </li> <li> <p></p> </li> </ul> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"Note/%E8%80%83%E8%AF%95/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/#20241204","title":"\u7a0b\u5e8f\u8bbe\u8ba1\u671f\u672b\u8003\u8bd5 2024.12.04","text":"<ul> <li>\u5206\u5377\u60c5\u51b5\uff1a\u672c\u6b21\u8003\u8bd5\u5206\u4e3aA\u5377\u548cB\u5377\uff0c\u672c\u4eba\u4f5c\u7b54\u7684\u662fA\u5377\u3002</li> </ul>"},{"location":"Note/%E8%80%83%E8%AF%95/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/#_3","title":"\u7b14\u8bd5\u90e8\u5206","text":"<p>\u7b14\u8bd5\u7531 \u9009\u62e9\u9898\u3001\u586b\u7a7a\u9898\u3001\u7b80\u7b54\u9898\u3001\u624b\u5199\u51fd\u6570 \u56db\u90e8\u5206\u7ec4\u6210\uff0c\u5171\u8ba1 100 \u5206\u3002\u4ee5\u4e0b\u4e3a\u5177\u4f53\u60c5\u51b5\u548c\u6211\u7684\u4f5c\u7b54\u56de\u5fc6\uff1a</p>"},{"location":"Note/%E8%80%83%E8%AF%95/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/#1-10-40","title":"1. \u9009\u62e9\u9898\uff08\u5171 10 \u9898\uff0c40 \u5206\uff09","text":"<ol> <li>C\u8bed\u8a00\u662f\u4ec0\u4e48\u8bed\u8a00\uff1f</li> </ol> <p>- \u7b54\uff1a\u9ad8\u7ea7\u8bed\u8a00\u3002\uff08\u4e0d\u8981\u7b11\uff0c\u6211\u5ba4\u53cb\u5199\u4e86\u6c47\u7f16doge</p> <ol> <li>\u5728 32 \u4f4d\u7cfb\u7edf\u4e2d\uff0c<code>sizeof(double *)</code> \u7684\u503c\uff1f</li> </ol> <p>- \u7b54\uff1a4\uff08\u5b57\u8282\uff09\u3002</p> <ol> <li> <p><code>char ch = 'a + b'</code> \u9519\u8bef</p> </li> <li> <p>\u5faa\u73af\u7a0b\u5e8f\u5224\u65ad\u8f93\u51fa\u7ed3\u679c\u3002</p> </li> </ol> <p>- \u9898\u76ee\u8f83\u7b80\u5355\uff0c\u6309\u5faa\u73af\u903b\u8f91\u5206\u6790\u5373\u53ef\u5f97\u51fa\u7b54\u6848\u3002</p> <ol> <li>\u7ed3\u6784\u4f53\u6307\u9488 p\uff0c\u7528 <code>p.name</code>\u9519\u8bef</li> </ol> <p>- \u7b54\uff1a\u9700\u8981\u7528\u7bad\u5934\u8fd0\u7b97\u7b26 <code>p-&gt;name</code>\u3002</p> <ol> <li>\u6307\u9488 <code>File *fp</code> \u6b64\u65f6 <code>fp</code> \u6307\u5411\u7684\u662f\u4ec0\u4e48\uff1f</li> </ol> <p>- \u7b54\uff1a\u6587\u4ef6\u6570\u636e\u7c7b\u578b\u3002</p> <ol> <li>\u6307\u9488\u6570\u7ec4\u7684\u7406\u89e3\u3002</li> </ol> <p>- \u9700\u638c\u63e1\u6307\u9488\u548c\u6570\u7ec4\u7684\u5173\u7cfb\u3002</p> <ol> <li>\u5b9a\u4e49 <code>int s[10]</code>\uff0c\u4ee5\u4e0b\u54ea\u4e9b\u7b49\u4ef7\uff1a<code>&amp;s[1]</code>, <code>s + 1</code>, <code>&amp;s[0] + 1</code>\u3002</li> </ol> <p>- \u7b54\uff1a\u90fd\u7b49\u4ef7\u3002 \u00a0</p> <ol> <li> <p>\uff08\u5fd8\u4e86\uff09 \u00a0</p> </li> <li> <p>\uff08\u540c\u4e0a\uff09</p> </li> </ol>"},{"location":"Note/%E8%80%83%E8%AF%95/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/#2-5-20","title":"2. \u586b\u7a7a\u9898\uff08\u5171 5 \u9898\uff0c20 \u5206\uff09","text":"<ol> <li> <p>C\u8bed\u8a00\u7a0b\u5e8f\u9700\u8981\u7ecf\u8fc7\u7f16\u8bd1\u548c\u94fe\u63a5\uff0c\u624d\u80fd\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002</p> </li> <li> <p>\u52a8\u6001\u5206\u914d\u5185\u5b58\u9700\u8981\u5305\u542b\u7684\u5e93\u5934\u6587\u4ef6\u662f <code>stdlib.h</code>\u3002</p> </li> <li> <p>\u4e09\u7ef4\u6570\u7ec4\u7684\u5730\u5740\u95ee\u9898\uff08\u5177\u4f53\u9898\u76ee\u7565\uff09\u3002</p> </li> <li> <p>\u5b9a\u4e49\u5e38\u91cf\u7684\u5173\u952e\u5b57\u662f <code>const</code>\u3002</p> </li> <li> <p>\u8868\u8fbe\u5f0f <code>a *= b + c</code> \u7b49\u4ef7\u4e8e <code>a = a * (b + c)</code>\u3002</p> </li> </ol>"},{"location":"Note/%E8%80%83%E8%AF%95/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/#3-2-20","title":"3. \u7b80\u7b54\u9898\uff08\u5171 2 \u9898\uff0c20 \u5206\uff09","text":"<ol> <li>\u6570\u7ec4\u548c\u7ed3\u6784\u4f53\u7684\u533a\u522b\uff1f</li> </ol> <ul> <li> <p>\u6570\u7ec4\u662f\u5b58\u50a8\u76f8\u540c\u7c7b\u578b\u6570\u636e\u7684\u7ebf\u6027\u96c6\u5408\uff0c\u7ed3\u6784\u4f53\u53ef\u4ee5\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u3002</p> </li> <li> <p>\u6570\u7ec4\u5360\u7528\u7684\u5185\u5b58\u662f\u8fde\u7eed\u7684\uff0c\u7ed3\u6784\u4f53\u7684\u6210\u5458\u53ef\u80fd\u56e0\u5bf9\u9f50\u8981\u6c42\u5b58\u5728\u95f4\u9694\u3002</p> </li> </ul> <ol> <li>\u5c40\u90e8\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\u7684\u533a\u522b\uff1f</li> </ol> <ul> <li> <p>\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5728\u5b9a\u4e49\u5b83\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u4e2d\uff0c\u53ea\u5728\u51fd\u6570\u8c03\u7528\u65f6\u5206\u914d\u5185\u5b58\uff0c\u7528\u5b8c\u5373\u91ca\u653e\uff1b</p> </li> <li> <p>\u5168\u5c40\u53d8\u91cf\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u7a0b\u5e8f\uff0c\u4ece\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\u5230\u7ed3\u675f\u59cb\u7ec8\u5b58\u5728\u3002\uff08\u751f\u547d\u5468\u671f</p> </li> </ul>"},{"location":"Note/%E8%80%83%E8%AF%95/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/#4-1-20","title":"4. \u624b\u5199\u51fd\u6570\uff081 \u9898\uff0c20 \u5206\uff09","text":"<ol> <li>\u9898\u76ee\uff1a\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>str</code> \u548c\u4e00\u4e2a\u6574\u6570 <code>n</code>\uff0c\u5b9e\u73b0\u5c06\u5b57\u7b26\u4e32\u5411\u5de6\u79fb\u52a8 <code>n</code> \u4f4d\u7684\u529f\u80fd\u3002 \u00a0</li> </ol>"},{"location":"Note/%E8%80%83%E8%AF%95/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/#a","title":"A\u5377\u673a\u8bd5\u90e8\u5206","text":"<ul> <li> <p>B\u5377\u7684AC\u7387\u6574\u4f53\u9ad83%\uff0c\u95ee\u9898\u4e0d\u5927</p> </li> <li> <p>6\u9898</p> </li> <li> <p></p> </li> </ul> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"Note/%E8%80%83%E8%AF%95/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/#b","title":"B\u5377\u673a\u8bd5\u90e8\u5206","text":""},{"location":"Note/%E8%80%83%E8%AF%95/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/#_4","title":"\u672c\u4eba\u9510\u8bc4\uff1a","text":"<ul> <li> <p>\u672c\u4eba\u88ab\u5012\u6570\u7b2c\u4e8c\u9898\u5361\u4e86\u8fd150min\uff0c\u6b7b\u5728<code>char *str[]</code>\u7684\u5b9a\u4e49\u4e0a\u3002\u5bf9\u6307\u9488\u7684\u7406\u89e3\u8fd8\u662f\u4e0d\u591f\u5230\u4f4d</p> </li> <li> <p>\u5176\u5b83\u9898\u96be\u5ea6\u4e0d\u5927\uff0c\u5f88\u8003\u9a8c\u57fa\u7840</p> </li> </ul>"},{"location":"Note/%E8%80%83%E8%AF%95/%E9%A9%AC%E5%8E%9F/","title":"\u9a6c\u539f","text":""},{"location":"Note/%E8%80%83%E8%AF%95/%E9%A9%AC%E5%8E%9F/#_1","title":"\u9a6c\u539f","text":"<p> \u7ea6 288 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>\u9898\u76ee\u662f\u5b66\u957f\u5b66\u59d0\u56de\u5fc6\u6240\u5f97\uff0c\u7b54\u6848\u5c31\u4e0d\u9644\u4e0a\u4e86\uff0c\u8bf7\u81ea\u884c\u4e66\u4e0a\u83b7\u53d6</p>"},{"location":"Note/%E8%80%83%E8%AF%95/%E9%A9%AC%E5%8E%9F/#_2","title":"\u7b80\u8ff0\u9898","text":"<ul> <li>\u4e00\u98988\u5206\uff0c\u517140\u5206 1. \u8bf7\u7b80\u8ff0\u9a6c\u514b\u601d\u4e3b\u4e49\u5bf9\u7269\u8d28\u8303\u7574\u7684\u7406\u89e3 2. \u8bf7\u7b80\u8ff0\u5b9e\u8df5\u7684\u57fa\u672c\u7ed3\u6784 3. \u8bf7\u7b80\u8ff0\u8d44\u672c\u4e3b\u4e49\u57fa\u672c\u77db\u76fe 4. \u8bf7\u7b80\u8ff0\u793e\u4f1a\u4e3b\u4e49\u4ece\u7a7a\u60f3\u5230\u79d1\u5b66\u7684\u4e24\u5927\u7406\u8bba\u57fa\u77f3 5. \u8bf7\u7b80\u8ff0\u7fa4\u4f17\u5728\u5386\u53f2\u53d1\u5c55\u4e2d\u7684\u4f5c\u7528</li> </ul>"},{"location":"Note/%E8%80%83%E8%AF%95/%E9%A9%AC%E5%8E%9F/#_3","title":"\u5224\u65ad\u9898","text":"<ul> <li>\u4e00\u989810\u5206\uff0c\u517140\u5206 1. \u7269\u8d28\u4e0e\u610f\u8bc6\u7684\u53d1\u5c55\u5177\u6709\u4e0d\u5e73\u8861\u6027 2. \u793e\u4f1a\u5f62\u6001\u7684\u66f4\u66ff\u662f\u5fc5\u7136\u7684 3. \u5728\u8d44\u672c\u4e3b\u4e49\u793e\u4f1a\u4e2d\uff0c\u5de5\u4eba\u51fa\u5356\u52b3\u52a8\u529b\uff0c\u8d44\u672c\u5bb6\u4ed8\u7ed9\u5979\u4eec\u62a5\u916c\uff0c\u8fd9\u662f\u5e73\u7b49\u7684\u4ea4\u6362\u5173\u7cfb 4. \u56fd\u5bb6\u5784\u65ad\u8d44\u672c\u4e3b\u4e49\u662f\u5426\u6539\u53d8\u8d44\u672c\u4e3b\u4e49\u7684\u6027\u8d28</li> </ul>"},{"location":"Note/%E8%80%83%E8%AF%95/%E9%A9%AC%E5%8E%9F/#_4","title":"\u8bba\u8ff0\u9898","text":"<ul> <li>\u8fd9\u989820\u5206\uff0c\u7ed9\u4e862\u4e2a\u6750\u6599\uff0c\u8981\u6c42\u7ed3\u5408\u7406\u8bba\u548c\u5b9e\u9645\uff0c\u5206\u6790\u9a6c\u514b\u601d\u4e3b\u4e49\u7684\u5f53\u4ee3\u4ef7\u503c</li> <li>\u6750\u6599\u4e00\u5927\u81f4\u5185\u5bb9\u662f\u4e60\u603b\u4e66\u8bb0\u6307\u51fa\u9a6c\u514b\u601d\u4e3b\u4e49\u7684\u4f5c\u7528\u5927</li> <li>\u6750\u6599\u4e8c\u5927\u81f4\u5185\u5bb9\u662f\u897f\u65b9\u8bd5\u56fe\u5411\u9a6c\u514b\u601d\u4e3b\u4e49\u5bfb\u6c42\u5e2e\u52a9\u4ee5\u89e3\u51b3\u6027\u683c\u538b\u8feb\u3001\u81ea\u7136\u5371\u673a\u7b49\u95ee\u9898</li> </ul>"},{"location":"Tools/","title":"Tools","text":""},{"location":"Tools/#toolbox","title":"Toolbox","text":"<p>Abstract</p> <p>\u5b9e\u7528\u5de5\u5177\u548c\u6280\u5de7\u5206\u4eab\u3002</p> <p>.BEGIN_TOC at 0x7f9508f06de0&gt; - \"blog\u642d\u5efa\":     - \"\u56fe\u5e8a\u642d\u5efa\": blog/\u56fe\u5e8a\u642d\u5efa - \"Docker\":     - \"Docker\u4ece\u5165\u95e8\u5230\u5b9e\u8df5\uff1a\u4ee5DataLab\u73af\u5883\u914d\u7f6e\u4e3a\u4f8b\": docker .END_TOC at 0x7f9508f06e80&gt;</p>"},{"location":"Tools/docker/","title":"Docker\u4ece\u5165\u95e8\u5230\u5b9e\u8df5\uff1a\u4ee5DataLab\u73af\u5883\u914d\u7f6e\u4e3a\u4f8b","text":""},{"location":"Tools/docker/#dockerdatalab","title":"Docker\u4ece\u5165\u95e8\u5230\u5b9e\u8df5\uff1a\u4ee5DataLab\u73af\u5883\u914d\u7f6e\u4e3a\u4f8b","text":"<p> \u7ea6 956 \u4e2a\u5b57  14 \u884c\u4ee3\u7801  3 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>\u201c\u660e\u660e\u5728\u6211\u7684\u7535\u8111\u4e0a\u662f\u53ef\u4ee5\u8fd0\u884c\u7684\u201d \u3002 \u5728\u90e8\u7f72OpenChain\u65f6\uff0c\u6211\u66fe\u6df1\u9677\u73af\u5883\u914d\u7f6e\u7684\u6ce5\u6f6d\u3002\u867d\u7136VM\u53ef\u4ee5\u89e3\u51b3\u73af\u5883\u9694\u79bb\u95ee\u9898\uff0c\u4f46\u5176\u9ad8\u8d44\u6e90\u5360\u7528\u3001\u5197\u4f59\u64cd\u4f5c\u548c\u7f13\u6162\u542f\u52a8\u7b49\u75db\u70b9\u4fc3\u4f7f\u6211\u4eec\u5bfb\u627e\u66f4\u4f18\u89e3\u2014\u2014\u8fd9\u6b63\u662fDocker\u5bb9\u5668\u6280\u672f\u7684\u7528\u6b66\u4e4b\u5730\u3002</p> <p>\u53e6\u5916\u6478\u7d22\u7528 Docker \u914d\u7f6e Ubuntu \u7cfb\u7edf\u8fd0\u884c DataLab \u65f6\uff0c\u6211\u53d1\u73b0\u7f51\u4e0a\u6559\u7a0b\u5c11\u4e4b\u53c8\u5c11\u3002\u4ec5\u6709\u7684\u5185\u5bb9\u4e5f\u6ee1\u662f\u6666\u6da9\u672f\u8bed\u4e0e\u590d\u6742\u6b65\u9aa4\uff0c\u5bf9\u65b0\u624b\u6781\u4e0d\u53cb\u597d\u3002\u6240\u4ee5\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4ee5\u6700\u7ec6\u81f4\u3001\u6700\u6613\u61c2\u7684\u65b9\u5f0f\uff0c\u624b\u628a\u624b\u5e26\u4f60\u4e0a\u624b DataLab\u3002</p>"},{"location":"Tools/docker/#1-docker","title":"1. Docker\u4ecb\u7ecd","text":""},{"location":"Tools/docker/#11","title":"1.1 \u5bb9\u5668\u5316\u9769\u547d","text":"<p>Docker\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5bb9\u5668\u5316\u5e73\u53f0\uff0c\u5176\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7ea7\u865a\u62df\u5316\u6280\u672f\uff0c\u5c06\u5e94\u7528\u7a0b\u5e8f\u53ca\u5176\u4f9d\u8d56\u73af\u5883\uff08\u5305\u62ec\u4ee3\u7801\u3001\u8fd0\u884c\u65f6\u3001\u7cfb\u7edf\u5de5\u5177\u3001\u7cfb\u7edf\u5e93\u7b49\uff09\u6253\u5305\u6210\u6807\u51c6\u5316\u7684\u3001\u8f7b\u91cf\u7ea7\u7684\u5bb9\u5668\uff08Container\uff09\u3002\u76f8\u8f83\u4e8e\u4f20\u7edf\u865a\u62df\u673a\uff1a</p> \u7279\u6027 Docker\u5bb9\u5668 \u865a\u62df\u673a \u865a\u62df\u5316\u5c42\u7ea7 OS\u7ea7 \u786c\u4ef6\u7ea7 \u542f\u52a8\u901f\u5ea6 \u79d2\u7ea7 \u5206\u949f\u7ea7 \u8d44\u6e90\u5360\u7528 MB\u7ea7 GB\u7ea7 \u6027\u80fd\u635f\u8017 &lt;5% 15-20% \u955c\u50cf\u5927\u5c0f \u901a\u5e38&lt;100MB \u901a\u5e38&gt;1GB <p>\uff08\u6570\u636e\u6765\u6e90\uff1aDocker\u5b98\u65b9\u57fa\u51c6\u6d4b\u8bd5\u62a5\u544a\uff09</p>"},{"location":"Tools/docker/#12","title":"1.2 \u6838\u5fc3\u6982\u5ff5\u89e3\u6790","text":"<ul> <li>\u955c\u50cf\uff08Image\uff09\uff1a\u4e0d\u53ef\u53d8\u7684\u6a21\u677f\u6587\u4ef6\uff0c\u5305\u542b\u6784\u5efa\u5bb9\u5668\u7684\u5b8c\u6574\u6307\u4ee4\u96c6</li> <li>\u5bb9\u5668\uff08Container\uff09\uff1a\u955c\u50cf\u7684\u53ef\u8fd0\u884c\u5b9e\u4f8b\uff0c\u5177\u6709\u72ec\u7acb\u6587\u4ef6\u7cfb\u7edf\u548c\u8d44\u6e90\u9694\u79bb</li> <li>\u4ed3\u5e93\uff08Registry\uff09\uff1a\u7528\u4e8e\u5b58\u50a8\u548c\u5206\u53d1\u955c\u50cf\u7684\u4e2d\u592e\u670d\u52a1\uff08\u5982Docker Hub\uff09</li> <li>Volume\uff1a\u6301\u4e45\u5316\u6570\u636e\u5b58\u50a8\u65b9\u6848\uff0c\u7a81\u7834\u5bb9\u5668\u751f\u547d\u5468\u671f\u7684\u9650\u5236</li> </ul>"},{"location":"Tools/docker/#2-docker","title":"2. Docker\u5b89\u88c5","text":""},{"location":"Tools/docker/#21-windows-11","title":"2.1 Windows 11\u4e13\u4e1a\u7248\u5b89\u88c5\u6307\u5357","text":"<ol> <li>\u8bbf\u95eeDocker Desktop for Windows\u4e0b\u8f7d\u5b89\u88c5\u5305</li> <li>\u542f\u7528\u7cfb\u7edf\u7ea7\u652f\u6301\uff1a    - \u63a7\u5236\u9762\u677f \u2192 \u7a0b\u5e8f \u2192 \u542f\u7528\u6216\u5173\u95edWindows\u529f\u80fd    - \u52fe\u9009\u300cHyper-V\u300d\u548c\u300cWindows Subsystem for Linux\u300d</li> <li>\u5b89\u88c5\u65f6\u9009\u62e9WSL2\u540e\u7aef\uff1a PowerShell<pre><code># \u9a8c\u8bc1WSL\u7248\u672c\nwsl --list --verbose\n# \u8bbe\u7f6e\u9ed8\u8ba4\u7248\u672c\nwsl --set-default-version 2\n</code></pre>    - \u67b6\u6784\u9009\u62e9\u5efa\u8bae\uff1a<ul> <li>WSL2\uff1a\u63a8\u8350\u5f00\u53d1\u4f7f\u7528\uff0c\u63d0\u4f9b\u5b8c\u6574Linux\u5185\u6838\uff0cI/O\u6027\u80fd\u63d0\u53474-5\u500d</li> <li>Hyper-V\uff1a\u9002\u5408\u4f01\u4e1a\u7ea7\u5e94\u7528\uff0c\u652f\u6301\u9ad8\u7ea7\u865a\u62df\u5316\u529f\u80fd\uff08\u52a8\u6001\u5185\u5b58\u5206\u914d\u3001\u6545\u969c\u8f6c\u79fb\u96c6\u7fa4\u7b49\uff09</li> </ul> </li> </ol>"},{"location":"Tools/docker/#22","title":"2.2 \u955c\u50cf\u52a0\u901f\u914d\u7f6e","text":"<p>\u9488\u5bf9\u56fd\u5185\u7f51\u7edc\u73af\u5883\u4f18\u5316\uff0c\u5efa\u8bae\u914d\u7f6eUSTC\u955c\u50cf\u6e90\uff1a - \u4f5c\u7528\u662f\u589e\u52a0\u7a33\u5b9a\u6027\uff0c\u63d0\u9ad8\u4e0b\u8f7d\u955c\u50cf\u7684\u901f\u5ea6\uff0c\u4f18\u5316\u6784\u5efa\u529f\u80fd  4. \u6253\u5f00Docker Desktop \u2192 Settings \u2192 Docker Engine 5. \u66ff\u6362daemon.json\u914d\u7f6e\uff1a </p>JSON<pre><code>{\n  \"registry-mirrors\": [\"https://docker.mirrors.ustc.edu.cn\"],\n  \"features\": {\n    \"buildkit\": true  // \u542f\u7528\u65b0\u4e00\u4ee3\u6784\u5efa\u5de5\u5177\n  },\n  \"experimental\": false  // \u751f\u4ea7\u73af\u5883\u7981\u7528\u5b9e\u9a8c\u7279\u6027\n}\n</code></pre> 6. \u5e94\u7528\u914d\u7f6e\u5e76\u91cd\u542f\u670d\u52a1\uff1a Bash<pre><code>systemctl restart docker  # Linux\nGet-Service docker | Restart-Service  # PowerShell\n</code></pre>"},{"location":"Tools/docker/#3-docker","title":"3. \u914d\u7f6eDocker\u955c\u50cf","text":"<ol> <li>\u62c9\u53d6Ubuntu\u955c\u50cf<ul> <li>\u53ef\u4ee5\u76f4\u63a5\u5728\u56fe\u5f62\u5316\u754c\u9762\u641c\u7d22Ubuntu\u7136\u540epull\u6700\u65b0\u7684\u7248\u672c </li> <li>\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7ec8\u7aef\u547d\u4ee4\u884c\u7684\u5f62\u5f0f Bash<pre><code>docker pull ubuntu:lastest  # \u63a8\u8350\u4f7f\u7528LTS\u7248\u672c\n</code></pre></li> </ul> </li> <li> <p>\u521b\u5efa\u5bb9\u5668</p> <ul> <li> <p>\u56fe\u5f62\u5316\u754c\u9762 </p> </li> <li> <p>Container name\u81ea\u62df</p> </li> <li>Port \u7aef\u53e3\u8bbe\u7f6e</li> <li>Volume\u5377\u6302\u8f7d\uff0c\u4f5c\u7528\u662f\u8bbe\u7f6e\u4e3b\u673a\u548c\u5bb9\u5668\u4e4b\u95f4\u7684\u5377\u6302\u8f7d\uff0c\u597d\u5904\u662f\u4e3b\u673a\u548c\u5bb9\u5668\u53ef\u4ee5\u5171\u4eab\u8be5\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c\u65b9\u4fbf\u5728\u4e3b\u673a\u4e0a\u7f16\u8f91\u4ee3\u7801\u5e76\u5728\u5bb9\u5668\u5185\u8fd0\u884c\u6d4b\u8bd5\u7b49\u64cd\u4f5c</li> <li>Environment variables\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\uff0c\u6682\u65f6\u4e0d\u64cd\u4f5c</li> <li>\u7ec8\u7aef\u547d\u4ee4 <code>docker run -it -v &lt;Host path&gt;:&lt;Container path&gt; --name &lt;Container name&gt; ubuntu:latest</code></li> </ul> </li> </ol>"},{"location":"Tools/docker/#4-datalab","title":"4. \u914d\u7f6eDataLab\u73af\u5883","text":"<ol> <li>\u5148\u66f4\u65b0\u8f6f\u4ef6\u5305\u5217\u8868<code>apt-get update</code></li> <li>\u5b89\u88c5wget<code>apt-get install -y wget</code></li> <li>\u5207\u6362\u5230\u5171\u4eab\u6587\u4ef6\u5939<code>cd CSapp</code></li> <li>\u4ece\u5b98\u7f51\u4e0b\u8f7d\u6e90\u7801\u5b89\u88c5\u5305<code>wget http://csapp.cs.cmu.edu/3e/datalab-handout.tar</code></li> <li>\u5c06\u4ece\u5b98\u7f51\u4e0b\u8f7d\u7684tar\u5305\u89e3\u538b\uff0c\u6307\u4ee4\uff1a<code>tar xvf FileName.tar</code></li> <li>\u8fdb\u5165datalab-handout\u6587\u4ef6\u5939</li> <li>\u5b89\u88c5\u5fc5\u5907\u5de5\u5177<code>apt install -y build-essential</code> - \u8fd9\u4e2a\u8f6f\u4ef6\u5305\u7ec4\u5305\u542b\u4e86 GCC \u7f16\u8bd1\u5668\u3001G++ \u7f16\u8bd1\u5668\uff08\u7528\u4e8e C++ \u4ee3\u7801\uff09\u3001<code>make</code>\u00a0\u5de5\u5177\u4ee5\u53ca\u5176\u4ed6\u7f16\u8bd1\u6240\u9700\u7684\u57fa\u7840\u5e93\u548c\u5934\u6587\u4ef6\u3002</li> </ol>"},{"location":"Tools/docker/#5-finish","title":"5. Finish\uff01","text":"<ul> <li>\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5728\u672c\u673a\u7f16\u8bd1\u5668\u4e2d\u7f16\u5199bit.c\uff0c\u7136\u540e\u5728docker\u4e2d\u7684ubuntu\u7cfb\u7edf\u4e2d\u7f16\u8bd1\u548c\u8fd0\u884c\u4ee3\u7801\u4e86</li> </ul> <p>\u5bb9\u5668\u5316\u4e0d\u662f\u94f6\u5f39\uff0c\u4f46\u786e\u5b9e\u662f\u73b0\u4ee3\u8f6f\u4ef6\u5de5\u7a0b\u7684\u5fc5\u5907\u6280\u80fd\u3002\u5f53\u518d\u6b21\u9762\u5bf9\"Works on my machine\"\u7684\u56f0\u5883\u65f6\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u81ea\u4fe1\u5730\u8bf4\uff1a\"It works on Docker!\"</p>"},{"location":"Tools/docker/#references","title":"References","text":"<ul> <li>Docker\u5b98\u65b9\u6587\u6863</li> <li>CSAPP\u5b98\u7f51</li> <li>\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u955c\u50cf\u7ad9</li> </ul>"},{"location":"Tools/blog/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/","title":"\u56fe\u5e8a\u642d\u5efa","text":""},{"location":"Tools/blog/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/#_1","title":"\u56fe\u5e8a\u642d\u5efa","text":"<p> \u7ea6 500 \u4e2a\u5b57  3 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"Tools/blog/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/#problem","title":"PROBLEM","text":"<p>\u76f4\u63a5\u590d\u5236\u9ecf\u8d34\u8fdbobsidian\u7684\u56fe\u7247\uff0c\u5f53\u6211\u5728blog\u4e0a\u53d1\u8868\u8fd9\u4e2a\u7b14\u8bb0\u65f6\u65e0\u6cd5\u663e\u793a</p>"},{"location":"Tools/blog/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/#reason","title":"REASON","text":"<p>\u672c\u5730\u4e4b\u6240\u4ee5\u80fd\u770b\u89c1\u56fe\u7247\u662f\u56e0\u4e3amd\u6587\u4ef6\u6240\u5728\u6587\u4ef6\u5939\u4f1a\u81ea\u52a8\u4fdd\u5b58\u56fe\u7247\u3002\u5982\u679c\u6211\u4eec\u60f3\u8ba9\u522b\u4eba\u4e5f\u770b\u89c1\u5b8c\u6574\u7684md\u6587\u4ef6\uff0c\u9700\u8981\u628a\u6574\u4e2a\u6587\u4ef6\u5939\u53d1\u7ed9\u5bf9\u65b9\uff0c\u4f46\u8fd9\u4e2a\u5728blog\u53d1\u5e03\u7684\u65f6\u5019\u663e\u7136\u662f\u4e0d\u884c\u7684</p>"},{"location":"Tools/blog/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/#solution","title":"SOLUTION","text":"<p>\u4f7f\u7528obsidian\u7684\u63d2\u4ef6image auto upload\u3001picgo\u8fd9\u4e2a\u5f00\u6e90\u8f6f\u4ef6\u4ee5\u53ca\u7528\u6765\u5b58\u50a8\u7167\u7247\u7684github</p> <p>\u672c\u4eba\u4e00\u5f00\u59cb\u662f\u5c1d\u8bd5\u4e03\u725b\u4e91\u6765\u5b58\u50a8\u7167\u7247\uff0c\u6709\u4ee5\u4e0b\u539f\u56e0\uff1a 1. \u4e03\u725b\u4e91\u6bcf\u4e2a\u6708\u670950G\u5185\u5b58\u7a7a\u95f4\uff0c\u5bf9\u4e8e\u4e2a\u4eba\u4f7f\u7528\u7ef0\u7ef0\u6709\u4f59 2. \u4e03\u725b\u4e91\u9700\u8981\u5907\u6848\u8fc7\u7684\u57df\u540d\uff0c\u800c\u672c\u4eba\u6b63\u597d\u6709\u4e00\u4e2a 3. \u4e03\u725b\u4e91\u5bf9\u4e8e\u56fd\u5185\u7f51\u7edc\u66f4\u52a0\u53cb\u597d \u5feb\u642d\u5efa\u5b8c\u624d\u53d1\u73b0\u4e00\u4e9b\u95ee\u9898\uff1a 1. \u6211\u7684\u57df\u540d\u662fhttps\u534f\u8bae\uff0c\u4f46\u4e03\u725b\u4e91\u53ea\u5bf9http\u514d\u8d39\uff0c\u6240\u4ee5\u6211\u653e\u5f03\u81ea\u5b9a\u4e49\u57df\u540d 2. \u4e03\u725b\u4e91\u4e5f\u63d0\u4f9b\u514d\u8d39\u7684\u6d4b\u8bd5\u57df\u540d\uff0c\u671f\u9650\u662f30\u5929\uff0c\u6bcf30\u5929\u5f97\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u7a7a\u95f4\uff0c\u4f1a\u6709\u4e00\u7cfb\u5217\u9ebb\u70e6</p> <ol> <li> <p>\u9996\u5148\u9700\u8981github\u4e0a\u521b\u5efa\u81ea\u5df1\u4e13\u95e8\u7528\u6765\u5b58\u653e\u56fe\u7247\u7684\u4ed3\u5e93 </p> </li> <li> <p>\u521b\u5efa\u540e\u53bb\u83b7\u53d6github token\u76f4\u63a5<code>generate new token</code>\u5373\u53ef\uff0cclassic -&gt; \u9009\u4e2drepo\uff0c\u63d0\u4ea4\u3002\u590d\u5236token\u5907\u7528</p> </li> <li>\u4e0b\u8f7dpicgo\uff0c\u9009\u62e9\u4e00\u4e2a\u7248\u672c\u4e0b\u8f7d\u5373\u53ef\uff0c\u6253\u5f00\u540e\u5728\u56fe\u5e8a\u8bbe\u7f6e\u4e2d\u9009\u5b9agithub\uff0c\u521b\u5efa - \u914d\u7f6e\u540d\u79f0\uff1a\u81ea\u5b9a\u4e49 - \u4ed3\u5e93\u540d\uff1agithub\u7528\u6237\u540d/\u4ed3\u5e93\u540d\uff0c\u6bd4\u5982frank-whw/image - \u5206\u652f\u540d\uff1a\u9ed8\u8ba4\u662fmain - \u8bbe\u5b9atoken\uff1a\u6b65\u9aa42\u4e2d\u590d\u5236\u5907\u7528\u7684token - \u5b58\u50a8\u8def\u5f84\uff1a\u968f\u4fbf\u5199 \u6bd4\u5982\u201cblog/\u201d \u6587\u4ef6\u5939\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u751f\u6210 - \u81ea\u5b9a\u4e49\u57df\u540d\uff1a\u5199\u4e0d\u5199\u90fd\u884c \u786e\u8ba4\u5b8c\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\uff0c\u9000\u51fa\u5373\u53ef</li> <li>\u6253\u5f00obsidian\uff0c\u5728\u7b2c\u4e09\u65b9\u63d2\u4ef6\u91cc\u641c\u7d22image auto import\uff0c\u5b89\u88c5\u542f\u7528\u5373\u53ef\u3002\u7b2c\u4e00\u6b21\u5b89\u88c5\u7684\u670b\u53cb\u53ef\u80fd\u9700\u8981\u5173\u95ed\u5b89\u5168\u6a21\u5f0f\u3002\u542f\u7528\u540e\u52fe\u9009\u4e0a\u201c\u526a\u5207\u677f\u81ea\u52a8\u4e0a\u4f20\u201d\uff0c\u5176\u5b83\u8bbe\u7f6e\u9ed8\u8ba4\u5373\u53ef</li> </ol> <p></p>"},{"location":"cs_base/","title":"Computer Science","text":""},{"location":"cs_base/#cs","title":"CS\u57fa\u7840","text":"<p>Abstract</p> <p>\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\u5b66\u4e60\u7b14\u8bb0\u3002</p> <p>.BEGIN_TOC at 0x7f9508f06de0&gt; - \"\u7f16\u7a0b\u8bed\u8a00\":      - \"Java\": language/java/     - \"SQL\": language/SQL     - \"C\": language/c - \"\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\":     - \"Lecture01\": csapp/lecture/01     - \"Lecture02\": csapp/lecture/02     - \"Lecture03\": csapp/lecture/03     - \"Lecture04\": csapp/lecture/04     - \"Lecture05\": csapp/lecture/05 - \"cs61b\":     - \"notes\": cs61b/cs61b     - \"gitlet\u4e4b\u6211\u89c1\": cs61b/gitlet\u4e4b\u6211\u89c1 - \"CSAPP Lab\":     - \"DataLab\": csapp/Lab/DataLab     - \"BombLab\": csapp/Lab/BombLab - \"cs61c Lab\":     - \"Lab01\": cs61c/Lab/Lab01     - \"Lab02\": cs61c/Lab/Lab02 - \"cs61c Project\":     - \"Project01\": cs61c/proj/proj01 - \"cs61c Lecture\":     - \"Lecture07\uff1aRISC-V \u5bc4\u5b58\u5668\": cs61c/Lecture/lecture07     - \"Lecture08\uff1aRISC-V lw, sw, Decision 1\": cs61c/Lecture/lecture08     - \"Lecture09: \u4f4d\u64cd\u4f5c\u4e0e\u51fd\u6570\u8c03\u7528\": cs61c/Lecture/lecture09     - \"Lecture 10 \u51fd\u6570\u8c03\u7528\u4e0e\u5185\u5b58\u7ba1\u7406\": cs61c/Lecture/lecture10 .END_TOC at 0x7f9508f06e80&gt;</p>"},{"location":"cs_base/cs61b/cs61b/","title":"note","text":""},{"location":"cs_base/cs61b/cs61b/#note","title":"note","text":"<p> \u7ea6 3002 \u4e2a\u5b57  103 \u884c\u4ee3\u7801  8 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 16 \u5206\u949f</p>"},{"location":"cs_base/cs61b/cs61b/#9-disjointed-set","title":"9. Disjointed set","text":""},{"location":"cs_base/cs61b/cs61b/#91-introduction","title":"9.1 introduction","text":"<ol> <li>\u4e92\u65a5</li> <li>\u67092\u79cd\u8fd0\u7b97\uff1a<ol> <li><code>connect(x, y)</code>\u6216\u8005\u8bf4\u662f<code>union</code></li> <li><code>isConnected(x, y)</code></li> </ol> </li> <li>an interface determines what behaviors a data structure should have (but not how to accomplish it)  \u63a5\u53e3</li> <li>design decisions greatly affect asymptotic runtime and code complexity. Java<pre><code>public interface DisjointSets {\n    /** connects two items P and Q */\n    void connect(int p, int q);\n\n    /** checks to see if two items are connected */\n    boolean isConnected(int p, int q); \n}\n</code></pre></li> </ol>"},{"location":"cs_base/cs61b/cs61b/#92-quick-find","title":"9.2 Quick Find","text":"<ol> <li>\u540c\u4e00\u4e2aset\u7684\u5143\u7d20\u7684id\u76f8\u540c </li> <li>\u5224\u65adisConnected\uff08x, y)\u53ef\u4ee5\u76f4\u63a5\u5224\u65adid\u662f\u5426\u76f8\u540c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(1) Java<pre><code>public class QuickFindDS implements DisjointSets {\n\n    private int[] id;\n\n    /* \u0398(N) */\n    public QuickFindDS(int N){\n        id = new int[N];\n        for (int i = 0; i &lt; N; i++){\n            id[i] = i;\n        }\n    }\n\n    /* need to iterate through the array =&gt; \u0398(N) */\n    public void connect(int p, int q){\n        int pid = id[p];\n        int qid = id[q];\n        for (int i = 0; i &lt; id.length; i++){\n            if (id[i] == pid){\n                id[i] = qid;\n            }\n        }\n    }\n\n    /* \u0398(1) */\n    public boolean isConnected(int p, int q){\n        return (id[p] == id[q]);\n    }\n}\n</code></pre></li> </ol>"},{"location":"cs_base/cs61b/cs61b/#93-quick-union","title":"9.3 Quick Union","text":"<ol> <li>\u8f85\u52a9\u51fd\u6570<code>find(int item)</code> \u8fd4\u56de<code>item</code>\u6240\u5728\u7684\u6839 <ul> <li>find(4) = 0   find(5) = 3 Java<pre><code>public class QuickUnionDS implements DisjointSets {\n    private int[] parent;\n    public QuickUnionDS(int num) {\n        parent = new int[num];\n        for (int i = 0; i &lt; num; i++) {\n            parent[i] = i;\n        }\n    }\n\n    private int find(int p) {\n        while (parent[p] &gt;= 0) {\n            p = parent[p];\n        }\n        return p;\n    }\n\n    @Override\n    public void connect(int p, int q) {\n        int i = find(p);\n        int j= find(q);\n        parent[i] = j;\n    }\n\n    @Override\n    public boolean isConnected(int p, int q) {\n        return find(p) == find(q);\n    }\n}\n</code></pre></li> </ul> </li> </ol>"},{"location":"cs_base/cs61b/cs61b/#94-weighted-quick-unionwqu","title":"9.4 Weighted Quick Union(WQU)","text":"<ol> <li>\u4f18\u5316QU\uff0c\u9488\u5bf9<code>find</code>\u51fd\u6570\u5728\u8fd0\u884c\u662f\u8981climb to the root of a tree\uff0c\u663e\u7136\u662f\u4f4e\u6548\u7684\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u63d0\u51fa\u4e86\u4e2a\u5173\u952e\u601d\u8def\uff1a\u5728\u6bcf\u6b21connect\u65f6\uff0c\u5224\u65ad2\u4e2atrees\u7684\u9ad8\u5ea6\uff0c\u628a\u9ad8\u5ea6\u5c0f\u7684tree links to \u9ad8\u7684\u3002</li> <li>\u6811\u7684maximum height\u53ef\u4ee5\u63a7\u5236\u5728logN\u5185</li> </ol>"},{"location":"cs_base/cs61b/cs61b/#95-wqu-with-path-compression","title":"9.5 WQU with Path Compression","text":"<ol> <li>\u6709\u70b9\u62bd\u8c61\uff0c\u8ba9\u6240\u6709\u7684<code>item</code>\u90fd\u8fde\u63a5\u5230\u6839</li> <li>\u7406\u89e3\u4e86</li> <li>\u6838\u5fc3\u601d\u8def\u662f\u5728find\u64cd\u4f5c\u65f6\uff0c\u5728\u7ecf\u8fc7\u6cbf\u9014\u7684<code>item</code>\u65f6\u628a\u5b83\u76f4\u63a5\u8fde\u63a5\u5230\u6839\u8282\u70b9\uff0c\u4f7f\u5f97\u540e\u7eed\u7684\u67e5\u627e\u8def\u5f84\u66f4\u77ed</li> <li>\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u589e\u52a0\u989d\u5916\u7684\u6e10\u8fdb\u590d\u6742\u5ea6\uff1a<ol> <li>\u987a\u8def</li> <li>\u644a\u8fd8\u5206\u6790\uff08Amortized Analysis\uff09</li> </ol> </li> </ol>"},{"location":"cs_base/cs61b/cs61b/#10-adt","title":"10. ADT","text":""},{"location":"cs_base/cs61b/cs61b/#101-intro","title":"10.1 intro","text":"<ul> <li>Abstract Data Type\u62bd\u8c61\u6570\u636e\u7c7b\u578b</li> <li>\u4ec5\u7531\u5176\u64cd\u4f5c\u5b9a\u4e49\uff0c\u800c\u4e0d\u7531\u5176\u5b9e\u73b0\u5b9a\u4e49</li> <li>\u5e38\u89c1\u7684\uff1aStacks\u3001Lists\u3001Sets\u3001Maps</li> </ul>"},{"location":"cs_base/cs61b/cs61b/#102-trees","title":"10.2 trees","text":"<ul> <li>BST: Binary Search Tree</li> <li>**Hibbard deletion<ol> <li>\u627e\u5230\u8be5\u8282\u70b9\u7684\u76f4\u63a5\u540e\u7ee7\u8282\u70b9\uff08\u5373\u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u7684\u8282\u70b9\uff09\u6216\u76f4\u63a5\u524d\u9a71\u8282\u70b9\uff08\u5373\u5de6\u5b50\u6811\u4e2d\u6700\u5927\u7684\u8282\u70b9\uff09\u3002</li> <li>\u7528\u8be5\u540e\u7ee7\u8282\u70b9\u6216\u524d\u9a71\u8282\u70b9\u7684\u503c\u66ff\u6362\u5f85\u5220\u9664\u8282\u70b9\u7684\u503c\u3002</li> <li>\u7136\u540e\u5220\u9664\u8fd9\u4e2a\u540e\u7ee7\u6216\u524d\u9a71\u8282\u70b9\uff08\u6ce8\u610f\u5b83\u5fc5\u7136\u662f\u524d\u4e24\u79cd\u60c5\u51b5\u4e4b\u4e00\uff1a\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\uff09</li> </ol> </li> </ul>"},{"location":"cs_base/cs61b/cs61b/#11-balanced-trees","title":"11. Balanced Trees","text":""},{"location":"cs_base/cs61b/cs61b/#111-intro","title":"11.1 Intro","text":"<ul> <li>BigO is not synonymous to the Worst-case</li> <li>depth: the number of links between a node and the root.</li> <li>height: the lowest depth of a tree.</li> <li>average depth: average of the total depths in the tree. </li> </ul>"},{"location":"cs_base/cs61b/cs61b/#112-b-trees","title":"11.2 B-Trees","text":"<ul> <li>problem\uff1a\u6bcf\u6b21insert\u4e00\u4e2a\u6570\u636e\u65f6\u90fd\u4f1a\u589e\u52a0\u6811\u7684\u9ad8\u5ea6</li> <li>\u4e3a\u6539\u53d8\u8fd9\u70b9\uff0c\u5f15\u5165\u4e00\u4e2acrazy idea\uff1a**let's just never add a leaf node! **</li> <li> <p>When we insert, let's just add to a current leaf node. This way, the height will never increase. </p> </li> <li> <p>\u6211\u672c\u4eba\u662f\u4e0d\u592a\u559c\u6b22\u6216\u8005\u7406\u89e3\u8fd9\u4e00\u4e2aidea\uff0c\u539f\u56e0\u5728\u4e8e\u8fd9\u589e\u52a0\u4e86find\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u572816 17 18 19\u8fd9\u4e00\u4e2a\u53f6\u5b50\u4e2dfind\u6570\u636e\u8fd8\u662f\u9700\u8981traverse\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u53f6\u5b50\u7684\u5927\u5c0f</p> </li> </ul>"},{"location":"cs_base/cs61b/cs61b/#113-b-tree-invariants","title":"11.3 B-Tree invariants","text":"<ul> <li>\u540c\u6837\u4e00\u7ec4\u6570\u636e\uff0c\u63d2\u5165\u7684\u987a\u5e8f\u4f1a\u51b3\u5b9a\u6811\u7684\u9ad8\u5ea6</li> <li>B-Trees\u7684\u7279\u70b9\uff08invarants\uff09\uff1a<ol> <li>All leaves must be the same distance from the source.</li> <li>A non-leaf node with <code>k</code>items must have exactly <code>k+1</code> children.</li> </ol> </li> </ul>"},{"location":"cs_base/cs61b/cs61b/#114-rotating-trees","title":"11.4 Rotating Trees","text":"<ul> <li>\u5b58\u5728\u7684\u539f\u56e0\u5728\u4e8e\u901a\u8fc7rotating\u53bb\u7ef4\u6301\u6811\u7684invariant Java<pre><code>private Node rotateRight(Node h) {\n    // assert (h != null) &amp;&amp; isRed(h.left);\n    Node x = h.left;\n    h.left = x.right;\n    x.right = h;\n    return x;\n}\n\n// make a right-leaning link lean to the left\nprivate Node rotateLeft(Node h) {\n    // assert (h != null) &amp;&amp; isRed(h.right);\n    Node x = h.right;\n    h.right = x.left;\n    x.left = h;\n    return x;\n}\n</code></pre></li> </ul>"},{"location":"cs_base/cs61b/cs61b/#115-red-black-trees","title":"11.5 Red-Black Trees","text":"<ul> <li>\u7565</li> </ul>"},{"location":"cs_base/cs61b/cs61b/#12-hashing","title":"12 Hashing","text":""},{"location":"cs_base/cs61b/cs61b/#121-attempt","title":"12.1 attempt","text":"<ul> <li>limitation\uff1a<ol> <li>item\u9700\u8981\u53ef\u4ee5\u88ab\u6bd4\u8f83</li> <li>\u6700\u4f18\u53ea\u6709logn\u7684\u590d\u6742\u5ea6\uff0c\u80fd\u4e0d\u80fd\u66f4\u52a0\u4f18\u79c0</li> </ol> </li> <li>\u9488\u5bf9limitation2\u63d0\u51faDataIndexedIntergerSet</li> </ul>"},{"location":"cs_base/cs61b/cs61b/#122-inserting-words","title":"12.2 Inserting words","text":"<ul> <li>\u5176\u5b9e\u5c31\u662f\u5f15\u51fa\u4e86\u54c8\u5e0c\u8868\u7684\u6838\u5fc3\uff1ainput\u4e00\u4e2a\u4ec0\u4e48\u4e1c\u897f\uff0c\u628a\u5b83\u8f6c\u4e3a\u6210\u552f\u4e00\u4e14\u5bf9\u5e94\u7684hash\u503c\uff0c\u6839\u636e\u8fd9\u4e2ahash\u503c\u53ef\u4ee5\u5224\u65ad\u8fd9\u4e2a\u4e1c\u897f\u662f\u4e0d\u662f\u5b58\u5728</li> <li>\u89e3\u51b3\u4e86item\u53ef\u4ee5\u4e0d\u9700\u8981\u88ab\u6bd4\u8f83\u7684\u95ee\u9898\u4ee5\u53ca\u590d\u6742\u5ea6\u53d8\u4e3aO(1)</li> <li>\u4f46\u662f\u65b0\u95ee\u9898\uff1a\u6d6a\u8d39</li> </ul>"},{"location":"cs_base/cs61b/cs61b/#123-inserting-string-and-overflow","title":"12.3 Inserting String and Overflow","text":"<ul> <li>overflow\u4f1a\u5bfc\u81f42\u79cd\u4e0d\u540c\u7684string\u6709\u76f8\u540c\u7684\u8868\u793a</li> <li>\u56e0\u4e3ajava\u4e2d\u6700\u5927\u7684\u6570\u636e\u662f2,147,483,647</li> <li>java\u4e2d\u6700\u591a\u67094,294,967,296\u4e2a\u6574\u6570\uff0c\u4f46\u662fobject\u7684\u6570\u91cf\u6bd4\u8fd9\u591a</li> <li>\u6240\u4ee5collision\u4e0d\u53ef\u907f\u514d\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u4f1a\u963b\u6b62\u6211\u4eec\u5c06string\u8f6c\u6362\u6210int</li> <li>\u4ee5\u4e0a\u8fd9\u79cd\u8f6c\u6362\u79f0\u4e4b\u4e3a\"Computing the hash code of the object\"</li> <li>java\u7684\u6bcf\u4e00\u4e2aobject\u90fd\u5185\u7f6e\u4e86\u4e00\u4e2a\u51fd\u6570<code>.hashcode()</code>\uff0c\u8fd9\u662f\u901a\u8fc7object\u7684\u5730\u5740\uff08\u5730\u5740\u663e\u7136\u662f\u552f\u4e00\u4e14\u5bf9\u5e94\u7684\uff09\u751f\u6210hash\u503c</li> <li>\u6709\u65f6\u6211\u4eec\u4e5f\u81ea\u5df1create <code>hashcode</code> method</li> <li>properties of <code>hashCodes</code>:<ol> <li>\u5fc5\u987b\u662f\u6574\u6570</li> <li>\u5bf9\u540c\u4e00\u4e2aobject\u8fd0\u884c<code>.hashCode</code>\uff0c\u8fd4\u56de\u503c\u5fc5\u987b\u76f8\u540c</li> <li>2\u4e2aObject\u88ab\u8ba4\u4e3a<code>.equal()</code>\u5fc5\u987b\u6709\u76f8\u540c\u7684hash code</li> </ol> </li> <li>pending issues\uff1a<ul> <li>a lot of space</li> <li>hash collisions</li> </ul> </li> </ul>"},{"location":"cs_base/cs61b/cs61b/#124-handling-collisions","title":"12.4 handling collisions","text":"<ul> <li>\u4e3b\u8981\u7684\u60f3\u6cd5\u662f\u4e00\u4e2ahash\u503c\u5bf9\u5e94\u4e00\u4e2aLinkedList\uff0cso that\u5982\u679c\u5728\u6dfb\u52a0\u4e00\u4e2aitem\u65f6\uff0c\u5b83\u7684hash\u503c\u5df2\u7ecf\u5b58\u5728\u5728map\u4e2d\u8bf4\u660ehash collision\uff0c\u90a3\u4e48\u5c06\u8fd9\u4e2aitem\u653e\u5728hash\u503c\u5bf9\u5e94\u7684LinkedList\u4e2d\uff08\u56e0\u4e3aList\u663e\u7136\u662f\u53ef\u4ee5\u5b58\u591a\u4e2aitem\u7684\uff09</li> <li>create workflow\uff1a<ul> <li><code>add</code>item</li> <li><code>contains</code>item</li> </ul> </li> <li>\u4e8e\u662f\u53ef\u4ee5\u51cf\u5c11\u5bb9\u91cf\uff0c\u540c\u65f6\u4f7f\u7528mod\u8fd0\u7b97</li> <li>\u76ee\u524d\u7684\u60c5\u51b5\uff1a<ul> <li>space\u95ee\u9898\u89e3\u51b3\u4e86</li> <li>collision\u89e3\u51b3\u4e86</li> <li>runtime complexity\u6709\u95ee\u9898\u4e86</li> </ul> </li> </ul>"},{"location":"cs_base/cs61b/cs61b/#125-hash-table-and-fixing-runtime","title":"12.5 Hash Table and Fixing Runtime","text":"<ul> <li>\u6700\u7ec8\u7684\u6570\u636e\u7ed3\u6784\uff1a<code>HashTable</code><ul> <li>Inputs are converted by a hash function (<code>hashcode</code>) into an integer. Then, they're converted to a valid index using the modulus operator. Then, they're added at that index (dealing with collisions using LinkedList).</li> <li><code>contains</code> works in a similar fashion by figuring out the valid index, and looking in the corresponding LinkedList for the item.</li> </ul> </li> <li>\u5982\u4f55\u89e3\u51b3runtime\u95ee\u9898\uff1a<ol> <li>\u52a8\u6001\u589e\u957f\u54c8\u5e0c\u8868</li> <li>\u6539\u8fdb\u54c8\u5e0c\u7801</li> </ol> </li> </ul>"},{"location":"cs_base/cs61b/cs61b/#lab-7","title":"Lab 7","text":"<ul> <li>\u4ee5\u6811\u4e3a\u57fa\u7840\u521b\u5efa\u4e00\u4e2aMap</li> <li>\u521b\u5efa\u5b8c\u4e4b\u540e\u4e0eULLMap\u548cTreeMap\u6bd4\u8f83</li> <li>\u9700\u8981\u5b8c\u6210\u7684method\uff1a\u9664\u4e86<code>remove\u3001iterator\u3001keySet</code>\u90fd\u8981 + <code>printInOrder</code>()</li> <li>K\u5e94\u8be5\u7ee7\u627fComparable\uff1aassume that generic keys <code>K</code> have a <code>compareTo</code> method.</li> <li>use a private nested <code>BSTNode</code> class to help facilitate your implementation. \uff08recommend\uff09 finish at 2024\u5e7411\u670819\u65e5</li> </ul>"},{"location":"cs_base/cs61b/cs61b/#13-heaps-and-priority-queues","title":"13 Heaps and Priority Queues","text":""},{"location":"cs_base/cs61b/cs61b/#131-pq-interface","title":"13.1 PQ interface","text":"<ul> <li>\u5f15\u5165\uff1a\u5982\u4f55\u627e\u5230\u6700\u5927\u6216\u8005\u6700\u5c0f\u7684\u5143\u7d20\u800c\u4e0d\u53ea\u662f\u5feb\u901f\u641c\u7d22</li> <li>\u5f15\u51fa\uff1aPriority Queue\uff08\u4f18\u5148\u961f\u5217\uff09<ul> <li>\u5982\u4f55\u7406\u89e3\uff1a\u60f3\u8c61\u4e00\u4e2a\u5305\uff0c\u53ef\u4ee5\u52a0\u4e1c\u897f \u53ef\u4ee5\u51cf\u4e1c\u897f\uff0c\u4f46\u662f\u53ea\u80fd<code>interact with the smallest items of this bag</code> ```java /** (Min) Priority Queue: Allowing tracking and removal of </li> </ul> </li> <li>the smallest item in a priority queue. / public interface MinPQ {     / Adds the item to the priority queue. /     public void add(Item x);     / Returns the smallest item in the priority queue. */     public Item getSmallest();     / Removes the smallest item from the priority queue. /     public Item removeSmallest();     / Returns the size of the priority queue. /     public int size(); }     ```</li> </ul> <ul> <li>\u663e\u7136BST\u7684\u6548\u7387\u6700\u9ad8</li> </ul>"},{"location":"cs_base/cs61b/cs61b/#132-heaps","title":"13.2 Heaps","text":"<ul> <li>\u6839\u636eBST\u5f15\u51famin-heap\uff0c\u6709\u5982\u4e0b\u7279\u6027\uff1a<ul> <li>\u6bcf\u4e2a\u8282\u70b9\u90fd\u5c0f\u4e8e\u7b49\u4e8e\u5b83\u7684\u5b69\u5b50</li> <li>\u5982\u679c\u6709\u7f3a\u5931\uff0c\u53ea\u4f1a\u51fa\u73b0\u5728bottom level</li> </ul> </li> <li>\u6709\u5982\u4e0b\u64cd\u4f5c\uff1a<ol> <li><code>add</code>: Add to the end of heap temporarily. Swim up the hierarchy to the proper place</li> <li><code>getSmallest</code>: Return the root of the heap (This is guaranteed to be the minimum by our min-heap property</li> <li><code>removeSmallest</code>: Swap the last item in the heap into the root. Sink down the hierarchy to the proper place.</li> </ol> </li> </ul>"},{"location":"cs_base/cs61b/cs61b/#133-the-implementation","title":"13.3 The Implementation","text":"<ul> <li>\u901a\u8fc7\u5728\u4e00\u4e2a\u6570\u7ec4\u7684\u5f00\u5934\u7559\u4e00\u4e2a\u7a7a\u4f4d\u4ee5\u7b80\u5316\u8ba1\u7b97! </li> <li><code>leftChild(k)</code>=k\u22172=k\u22172</li> <li><code>rightChild(k)</code>=k\u22172+1=k\u22172+1</li> <li><code>parent(k)</code> =k/2=k/2</li> </ul> Methods Ordered Array Bushy BST Hash Table Heap <code>add</code> \u0398(N) \u0398(logN) \u0398(1) \u0398(logN) <code>getSmallest</code> \u0398(1) \u0398(logN) \u0398(N) \u0398(1) <code>removeSmallest</code> \u0398(N) \u0398(logN) \u0398(N) \u0398(logN) problem\uff1a 1. PQ\u600e\u4e48\u77e5\u9053\u5982\u4f55\u6392\u5e8f 2. \u6709\u4ec0\u4e48\u5141\u8bb8\u7075\u6d3b\u6392\u5e8f\u7684\u65b9\u6cd5\u5417 3. \u600e\u4e48\u6837\u624d\u80fd\u5c06MinPQ\u53d8\u4e3aMaxPQ"},{"location":"cs_base/cs61b/cs61b/#14-data-structures-summary","title":"14 Data Structures Summary","text":"Name Store Operation(s) Primary Retrieval Operation Retrieve By List <code>add(key)</code>, <code>insert(key, index)</code> <code>get(index)</code> index Map <code>put(key, value)</code> <code>get(key)</code> key identity Set <code>add(key)</code> <code>containsKey(key)</code> key identity PQ <code>add(key)</code> <code>getSmallest()</code> key order (aka key size) Disjoint Sets <code>connect(int1, int2)</code> <code>isConnected(int1, int2)</code> two integer values <ul> <li>we can often think of an ADT by the use of another ADT. </li> <li>And that Abstract Data Types have layers of abstraction, each defining a behavior that is more specific than the idea that came before it.</li> </ul>"},{"location":"cs_base/cs61b/cs61b/#17-tree-traversals-and-graphs","title":"17 Tree Traversals and Graphs","text":""},{"location":"cs_base/cs61b/cs61b/#171-tree-recap","title":"17.1 Tree recap","text":"<ul> <li>\u6811\u7684\u4f5c\u7528\uff1a <code>speeding up searching for items, allowing prefixing, checking connectedness, and so on</code></li> <li>\u6811\u7684\u5e94\u7528\u5728\u751f\u6d3b\u4e2d\u5f88\u666e\u904d</li> </ul>"},{"location":"cs_base/cs61b/cs61b/#172-tree-traversal","title":"17.2 Tree Traversal","text":"<ul> <li>\u5c42\u904d\u5386 + \u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff08\u524d\u5e8f\u3001\u4e2d\u5e8f\u548c\u540e\u5e8f\uff09</li> <li>\u524d\u5e8f\u904d\u5386 Java<pre><code>preOrder(BSTNode x) {\n    if (x == null) return;\n    print(x.key)\n    preOrder(x.left)\n    preOrder(x.right)\n}\n</code></pre></li> </ul>"},{"location":"cs_base/cs61b/cs61b/#173-graphs","title":"17.3 Graphs","text":"<ul> <li>\u6811\u7684\u5c40\u9650\uff1a2\u4e2a\u8282\u70b9\u4e4b\u95f4\u53ea\u80fd\u6709\u4e00\u6761\u8def\u5f84</li> <li>\u56fe\u7684\u7ec4\u6210\uff1a\u70b9+\u8fb9</li> <li>\u6811 \u771f\u5305\u542b\u4e8e \u56fe</li> <li>Graphs can be divided into two categories: simple graphs and multigraphs (or complicated graphs, a term I invented, because that's how I like to think of them.)</li> <li>\u672c\u8282\u8bfe\u7814\u7a76simple graphs\uff0c\u7b80\u5355\u56fe\u53c8\u5206\u4e3a\u65e0\u5411+\u6709\u5411</li> </ul>"},{"location":"cs_base/cs61b/cs61b/#174-graph-problems","title":"17.4 Graph Problems","text":"<ul> <li>s-t Path: Is there a path between vertices s and t?</li> <li>Connectivity: Is the graph connected, i.e. is there a path between all vertices?</li> <li>Biconnectivity: Is there a vertex whose removal disconnects the graph?</li> <li>Shortest s-t Path: What is the shortest path between vertices s and t?</li> <li>Cycle Detection: Does the graph contain any cycles?</li> <li>Euler Tour: Is there a cycle that uses every edge exactly once?</li> <li>Hamilton Tour: Is there a cycle that uses every vertex exactly once?</li> <li>Planarity: Can you draw the graph on paper with no crossing edges?</li> <li>Isomorphism: Are two graphs isomorphic (the same graph in disguise)?</li> </ul>"},{"location":"cs_base/cs61b/cs61b/#18-bfs","title":"18. BFS","text":""},{"location":"cs_base/cs61b/cs61b/#181-bfs","title":"18.1 BFS","text":"<ul> <li>Breadth First Search(also known as Level Order Traversal)</li> <li>The pseudocode for BFS is as follows: Text Only<pre><code>Initialize the fringe (a queue with the starting vertex) and mark that vertex.\nRepeat until fringe is empty:\nRemove vertex v from the fringe.\nFor each unmarked neighbor n of v:\nMark n.\nAdd n to fringe.\nSet edgeTo[n] = v.\nSet distTo[n] = distTo[v] + 1.\n</code></pre></li> </ul> <p>fringe\u5728\u8fd9\u8fb9\u6307\u4e00\u4e2a\u961f\u5217\uff0c\u5148\u5165\u5148\u51fa</p> <ul> <li>dfs\u548cbfs\u7684\u533a\u522b\uff1a<ul> <li>dfs\u662f\u4e00\u4e2a\u65b9\u5411\u53bb\u641c\uff0c\u4e0d\u5230\u9ec4\u6cb3\u4e0d\u56de\u5934\uff0c\u76f4\u5230\u9047\u5230\u7edd\u5883</li> <li>bfs\u662f\u5148\u628a\u672c\u8282\u70b9\u6240\u8fde\u63a5\u7684\u6240\u6709\u8282\u70b9\u90fd\u904d\u5386\u4e00\u904d\uff0c\u8d70\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u5019\uff0c\u518d\u628a\u8fde\u63a5\u8282\u70b9\u7684\u6240\u6709\u8282\u70b9\u904d\u5386\u4e00\u904d</li> </ul> </li> </ul>"},{"location":"cs_base/cs61b/cs61b/#182-representing-graphs","title":"18.2 Representing Graphs","text":"<ul> <li>\u6709\u4e2a\u96be\u70b9\uff1a<ul> <li>\u539f\u8bdd\uff1aFor our Graph API, let's use the common convention of assigning each unique node to an integer number. This can be done by maintaining a map which can tell us the integer assigned to each original node label. Doing so allows us to define our API to work with integers specifically, rather than introducing the need for generic types.</li> <li>\u6211\u7684\u7406\u89e3\uff1a\u7528\u552f\u4e00\u5bf9\u5e94\u7684\u6574\u6570\u8868\u793a\u8282\u70b9\uff0c\u800c\u4e0d\u662f\u8282\u70b9\u7684\u539f\u59cb\u6807\u7b7e\uff0c\u6709\u70b9\u50cfHash\u7b97\u6cd5</li> </ul> </li> </ul>"},{"location":"cs_base/cs61b/cs61b/#lab-8","title":"Lab 8","text":""},{"location":"cs_base/cs61b/cs61b/#key-things","title":"key things","text":"<ul> <li>\u4e0elab7\u5f88\u50cf\uff0c\u4e0d\u540c\u70b9\u5728\u4e8e\u8fd9\u6b21\u5c06\u5efa\u9020\u4e00\u4e2aHash Map\u800c\u4e0d\u662fTree Map</li> <li>\u5b8c\u6210\u540e \u9700\u8981\u4e0e\u57fa\u4e8e\u5217\u8868\u7684Map \u4ee5\u53ca \u5185\u7f6e\u7684Java HashMap\u8fdb\u884c\u6bd4\u8f83\uff0c\u53e6\u5916\u8981\u548c\u57fa\u4e8e\u4e0d\u540c\u6570\u636e\u7ed3\u6784\u7684map\u5bf9\u6bd4</li> <li>\u65b0\u5efa\u4e00\u4e2aclass MyHashMap\uff0c\u5b8c\u6210Map61B\u4e2d\u6240\u6709\u7684methods\uff0c\u5176\u4e2dremove\u7528\u62a5\u9519\u4ee3\u66ff\uff0citerator\u8fd4\u56de\u8fed\u4ee3\u5668\uff0c\u5efa\u8bae\u65b0\u5efa\u4e00\u4e2aHashSet\u5b9e\u4f8b\u5c5e\u6027</li> <li>\u90a3\u4e48\u5982\u4f55\u8ba9hash table\u57fa\u4e8e\u4e0d\u540c\u7684\u6570\u636e\u7ed3\u6784\u5462\uff1f\u5982\u679c\u53ea\u662f\u4f7f\u7528 Find + Replace \u9700\u8981\u4ed8\u51fa\u5f88\u591a\u52aa\u529b\u624d\u80fd\u5c06\u5b58\u50a8\u6876\u7c7b\u578b\u66f4\u6539\u4e3a\u4e0d\u540c\u7684\u5b58\u50a8\u6876\u7c7b\u578b\u3002\u6240\u4ee5\u6211\u4eec\u8fd9\u8fb9\u8981\u4f7f\u7528polymorphism\u548cinheritance</li> <li>\u7ee7\u627f\u7ed3\u6784\u5982\u4e0b\uff1a </li> <li>In the starter code, we give the instance variable <code>private Collection&lt;Node&gt;[] buckets</code>, which is the underlying data structure of the hash table.     \u89e3\u8bfb<ul> <li>buckets\u662fMyHashMap\u7684\u4e00\u4e2aprivate\u53d8\u91cf</li> <li>\u8fd9\u662fCollection\u5bf9\u8c61\u7684\u6570\u7ec4\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2aCollection\u4ee3\u8868\u4e00\u4e2abucket</li> <li>Node\u662f\u4e2aprivate\u8f85\u52a9\u7684\u7c7b\uff0c\u7528\u6765\u5b58\u50a8\u5355\u4e2akey-value\u5bf9\u3002starter code\u5e94\u8be5\u6613\u4e8e\u7406\u89e3\u4e14\u4e0d\u9700\u8981\u4efb\u4f55\u4fee\u6539</li> <li>java.util.Collection\u662f\u5927\u591a\u6570\u636e\u7ed3\u6784\u7ee7\u627f\u81ea\u7684\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u652f\u6301\u5f88\u591amethods\uff0c\u5982add\u3001remove\u3001iterate\u3002\u6709\u4ee5\u4e0b\u6570\u636e\u7ed3\u6784\u7ee7\u627f\u4e86\u8be5\u63a5\u53e3\uff1aArrayList\u3001LinkedList\u3001TreeSet\u3001HashSet\u3001PriorityQueue\u7b49\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5assign them to a variable of static type Collection with polymorphism\uff08\u591a\u6001\uff09</li> <li>\u7531\u4e8e Java \u7684\u9650\u5236\uff0c\u4e0d\u80fd\u76f4\u63a5\u521b\u5efa\u53c2\u6570\u5316\u7c7b\u578b\uff08\u4f8b\u5982 <code>Collection&lt;Node&gt;</code>)\u7684\u6570\u7ec4\u3002\u4e3a\u4e86\u5b9e\u73b0\u7c7b\u4f3c\u529f\u80fd\uff0c\u53ef\u4ee5\u521b\u5efa\u539f\u59cb\u7c7b\u578b\u7684 <code>Collection[]</code> \u6570\u7ec4\uff0c\u5e76\u901a\u8fc7\u7f16\u7a0b\u7ea6\u5b9a\uff0c\u786e\u4fdd\u6570\u7ec4\u4e2d\u53ea\u5b58\u50a8\u7279\u5b9a\u7c7b\u578b\uff08\u5982 <code>Collection&lt;Node&gt;</code>\uff09\u7684\u5143\u7d20\u3002 \u4e0d\u592a\u7406\u89e3<ul> <li>\u4e0d\u80fd\u521b\u5efa\u53c2\u6570\u5316\u7c7b\u578b\u7684\u6570\u7ec4\uff1a     \u5728 Java \u4e2d\uff0c\u4e0d\u80fd\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u53c2\u6570\u5316\u7c7b\u578b\uff08Parameterized Type\uff0c\u4f8b\u5982 <code>Collection&lt;Node&gt;</code>\uff09\u7684\u6570\u7ec4\u3002\u6bd4\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u662f\u4e0d\u5408\u6cd5\u7684\uff1a <code>Collection&lt;Node&gt;[] buckets = new Collection&lt;Node&gt;[size];</code>     \u8fd9\u662f\u56e0\u4e3a Java \u7684\u6cdb\u578b\u662f\u901a\u8fc7\u7c7b\u578b\u64e6\u9664\uff08Type Erasure\uff09\u5b9e\u73b0\u7684\uff0c\u5728\u8fd0\u884c\u65f6\uff0c<code>Collection&lt;Node&gt;</code> \u5176\u5b9e\u53ea\u88ab\u5f53\u4f5c\u4e00\u4e2a\u666e\u901a\u7684 <code>Collection</code>\u3002\u5982\u679c\u5141\u8bb8\u76f4\u63a5\u521b\u5efa\u53c2\u6570\u5316\u7c7b\u578b\u6570\u7ec4\uff0c\u4f1a\u5bfc\u81f4\u7c7b\u578b\u5b89\u5168\u95ee\u9898\uff0c\u65e0\u6cd5\u4fdd\u8bc1\u6570\u7ec4\u4e2d\u5b58\u50a8\u7684\u5143\u7d20\u7c7b\u578b\u4e00\u81f4\u3002</li> <li>\u89e3\u51b3\u65b9\u6cd5\uff1a     \u4e3a\u4e86\u7ed5\u8fc7\u8fd9\u4e2a\u9650\u5236\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6ca1\u6709\u6307\u5b9a\u5177\u4f53\u7c7b\u578b\u7684 <code>Collection[]</code> \u6570\u7ec4\uff08\u5373\u539f\u59cb\u7c7b\u578b\u7684\u6570\u7ec4\uff09\uff0c\u7136\u540e\u5728\u4f7f\u7528\u65f6\u53ea\u5411\u6570\u7ec4\u4e2d\u6dfb\u52a0\u7c7b\u578b\u4e3a <code>Collection&lt;Node&gt;</code> \u7684\u5143\u7d20\u3002\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a<code>Collection&lt;Node&gt;[] buckets = new Collection[size];</code>     \u8fd9\u91cc\u7684 <code>new Collection[size]</code> \u521b\u5efa\u4e86\u4e00\u4e2a\u53ea\u80fd\u5b58\u50a8 <code>Collection</code> \u7684\u6570\u7ec4\uff0c\u4f46\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\u7684 <code>Collection</code>\uff08\u4f8b\u5982 <code>Collection&lt;Integer&gt;</code> \u6216 <code>Collection&lt;Node&gt;</code>\uff09\u3002\u901a\u8fc7\u7f16\u7a0b\u7ea6\u5b9a\uff0c\u6211\u4eec\u53ea\u5f80\u5176\u4e2d\u6dfb\u52a0 <code>Collection&lt;Node&gt;</code>\u3002</li> <li>\u4fdd\u8bc1\u7c7b\u578b\u5b89\u5168\uff1a     \u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0c\u5c3d\u7ba1\u6570\u7ec4\u5141\u8bb8\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u96c6\u5408\uff08<code>Collection</code>\uff09\uff0c\u4f46\u6211\u4eec\u8981\u786e\u4fdd\u53ea\u5c06 <code>Collection&lt;Node&gt;</code> \u5b58\u5165\u6570\u7ec4\uff0c\u4ee5\u4fdd\u6301\u903b\u8f91\u4e0a\u7684\u7c7b\u578b\u4e00\u81f4\u6027\u3002</li> </ul> </li> <li>\u4e3a\u4e86\u4ee3\u7801\u4fbf\u6377\u6027\uff0c\u6211\u4eec\u8981\u4f7f\u7528createBucket\u8fd9\u4e2a\u65b9\u6cd5\uff1a Java<pre><code>protected Collection&lt;Node&gt; createBucket() {\n    return new LinkedList&lt;&gt;();\n}\n</code></pre> \u8fd9\u4e2a\u65b9\u6cd5\u5141\u8bb8<code>MyHashMap*Buckets.java</code> \u8986\u76d6 <code>createBucket</code></li> </ul> </li> </ul>"},{"location":"cs_base/cs61b/cs61b/#implementation-requirements","title":"implementation Requirements","text":"<ul> <li>\u4f7f\u75283\u79cdconstructors Java<pre><code>public MyHashMap();\npublic MyHashMap(int initialSize);\npublic MyHashMap(int initialSize, double loadFactor);\n</code></pre></li> <li>\u8d1f\u8f7d\u56e0\u5b50\uff08load factor\uff09= N / M\uff0cN\u662f\u5143\u7d20\u7684\u6570\u91cf\uff0cM\u662f\u5b58\u50a8\u6876\u6570</li> <li>\u5f53\u8d1f\u8f7d\u56e0\u5b50\u8d85\u8fc7loadFactor\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u589e\u52a0size\uff08\u4f7f\u7528\u4e58\u6cd5\u8c03\u6574\u5927\u5c0f\uff0c\u4e0d\u9700\u8981\u8c03\u5c0f\uff09</li> <li>\u9ed8\u8ba4\u503cinitialSize = 16\uff0c loadFactor = 0.75</li> <li>\u6bcf\u4e2abucket\u4e0d\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5bf9\u8c61\uff0c\u800c\u662f\u53ef\u4ee5\u5b58\u50a8\u591a\u4e2a\u952e\u503c\u5bf9\u7684\u6570\u636e\u7ed3\u6784</li> </ul>"},{"location":"cs_base/cs61b/cs61b/#19-shortest-paths","title":"19 Shortest Paths","text":""},{"location":"cs_base/cs61b/cs61b/#191-recap","title":"19.1 Recap","text":"<ul> <li>DFS\u4e0d\u9002\u7528\u7ec6\u957f\u7684\u56fe\uff0c\u56e0\u4e3a\u6bcf\u6b21\u9012\u5f52\u8c03\u7528\u4f1a\u5360\u7528\u5f88\u5927\u7684\u7a7a\u95f4</li> <li>BFS\u4e0d\u9002\u7528bushy\u7684\u56fe\uff0c\u56e0\u4e3a\u961f\u5217\u4f1a\u88ab\u5927\u91cf\u4f7f\u7528</li> <li>\u4f46\u662f\u8fd9\u4e9b\u53ea\u9002\u7528\u4e8e\u201c\u8fb9\u201d\u6ca1\u6709\u6743\u91cd\u7684\u56fe</li> </ul>"},{"location":"cs_base/cs61b/cs61b/#192-dijkstras-algorithm","title":"19.2 Dijkstra's Algorithm","text":"<ul> <li>\u8fea\u6770\u65af\u7279\u62c9\u7b97\u6cd5</li> <li>\u901a\u8fc7\u4f18\u5148\u7ea7\u961f\u5217\uff0c\u5f53\u961f\u5217\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5f39\u51fa\u4e00\u4e2a\u9876\u70b9\u5e76relax\u5230\u4ece\u8fd9\u4e2a\u70b9\u51fa\u53d1\u7684\u6240\u6709\u8fb9</li> </ul>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/","title":"Gitlet\u4e4b\u6211\u89c1","text":""},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#gitlet","title":"Gitlet\u4e4b\u6211\u89c1","text":"<p> \u7ea6 2984 \u4e2a\u5b57  29 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 15 \u5206\u949f</p>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#what-is-gitlet","title":"what is Gitlet","text":"<p>A version-control system is essentially a backup system for related collections of files. Gitlet is a simple version-control system that mimics some core functionalities of Git.</p>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#the-commands","title":"the commands","text":""},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#init","title":"init","text":"<ol> <li>\u81ea\u52a8\u751f\u4ea7\u4e00\u4e2acommit\u6587\u4ef6 \u6ca1\u6709\u522b\u7684\u6587\u4ef6\u5e76\u4e14\u6709\u63d0\u4ea4\u4fe1\u606f</li> <li>\u6709\u4e2a\u5355\u4e00\u7684\u5206\u652f master \uff0cpoints to the initial commit</li> <li>timestamp?     \u8981\u5224\u65ad\u662f\u4e0d\u662f\u5df2\u7ecfinit\u8fc7\u4e86</li> </ol>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#add","title":"add","text":"<ol> <li> <p>\u628a\u6587\u4ef6\u6dfb\u52a0\u5230\u6682\u5b58\u533a\uff1a    - \u5f53\u4f60\u8c03\u7528 <code>add</code> \u547d\u4ee4\u65f6\uff0c\u5b83\u4f1a\u628a\u6587\u4ef6\u5f53\u524d\u7684\u5185\u5bb9\u590d\u5236\u5230\u6682\u5b58\u533a\uff08\u901a\u5e38\u5728 <code>.gitlet</code> \u76ee\u5f55\u4e2d\u5b58\u653e\uff09\u3002    - \u6682\u5b58\u533a\u5c31\u662f\u4e00\u4e2a\u4e34\u65f6\u5b58\u653e\u4f60\u60f3\u63d0\u4ea4\u7684\u6587\u4ef6\u4fee\u6539\u7684\u5730\u65b9\u3002</p> </li> <li> <p>\u91cd\u590d\u6dfb\u52a0\u7684\u5904\u7406\uff1a    - \u5982\u679c\u4e00\u4e2a\u6587\u4ef6\u5df2\u7ecf\u88ab\u6dfb\u52a0\uff08\u6682\u5b58\uff09\u8fc7\uff0c\u518d\u6b21\u8c03\u7528 <code>add</code> \u4f1a\u7528\u65b0\u7248\u672c\u7684\u6587\u4ef6\u5185\u5bb9\u8986\u76d6\u6682\u5b58\u533a\u4e2d\u5df2\u6709\u7684\u7248\u672c\u3002</p> </li> <li> <p>\u6587\u4ef6\u6ca1\u6709\u53d8\u5316\u65f6\u4e0d\u9700\u8981\u6dfb\u52a0\uff1a    - \u5982\u679c\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u548c\u4e0a\u4e00\u6b21\u63d0\u4ea4\u7684\u7248\u672c\u5b8c\u5168\u4e00\u6837\uff0c\u5c31\u4e0d\u9700\u8981\u518d\u6b21\u6682\u5b58\u8fd9\u4e2a\u6587\u4ef6\u3002\u56e0\u6b64\u4f60\u9700\u8981\u6bd4\u8f83\uff1a</p> <ul> <li>\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\uff08\u672a\u63d0\u4ea4\u7684\u7248\u672c\uff09\u548c</li> <li>\u5f53\u524d\u63d0\u4ea4\u4e2d\u7684\u6587\u4ef6\uff08\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u7684\u7248\u672c\uff09</li> </ul> </li> </ol> <ul> <li>\u5982\u679c\u4e24\u8005\u76f8\u540c\uff0c\u76f4\u63a5\u8df3\u8fc7\u8fd9\u4e2a\u6587\u4ef6\uff0c\u4e0d\u9700\u8981\u628a\u5b83\u52a0\u5165\u6682\u5b58\u533a\u3002</li> </ul> <ol> <li> <p>\u5904\u7406\u5df2\u7ecf\u6682\u5b58\u7684\u6587\u4ef6\uff1a    - \u5982\u679c\u6587\u4ef6\u5df2\u7ecf\u88ab\u6682\u5b58\u4e86\uff0c\u4f46\u540e\u6765\u88ab\u4fee\u6539\u56de\u4e86\u548c\u63d0\u4ea4\u4e2d\u4e00\u6837\u7684\u72b6\u6001\uff0c\u4f60\u9700\u8981\u628a\u5b83\u4ece\u6682\u5b58\u533a\u79fb\u9664\uff0c\u56e0\u4e3a\u4e0d\u518d\u9700\u8981\u63d0\u4ea4\u8fd9\u4e2a\u6587\u4ef6\u3002</p> </li> <li> <p>\u53d6\u6d88\u5220\u9664\u7684\u6682\u5b58\uff1a    - \u5982\u679c\u8fd9\u4e2a\u6587\u4ef6\u4e4b\u524d\u88ab\u6807\u8bb0\u4e3a\u201c\u5220\u9664\u201d\uff08\u7528 <code>gitlet rm</code> \u6682\u5b58\u5220\u9664\uff09\uff0c\u4f46\u73b0\u5728\u4f60\u7528 <code>add</code> \u91cd\u65b0\u6dfb\u52a0\u4e86\u6587\u4ef6\uff0c\u90a3\u4e48\u5b83\u5c06\u4e0d\u518d\u88ab\u6807\u8bb0\u4e3a\u5220\u9664\uff0c\u4f60\u9700\u8981\u53d6\u6d88\u8fd9\u4e2a\u5220\u9664\u7684\u6682\u5b58\u3002</p> </li> </ol>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#commit","title":"commit","text":"<ul> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6b21\u63d0\u4ea4\u7684\u6587\u4ef6\u5feb\u7167\u8ddf\u4e0a\u4e00\u6b21\u63d0\u4ea4\u7684\u5feb\u7167\u662f\u4e00\u6837\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6587\u4ef6\u7248\u672c\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\u3002</li> <li>\u53ea\u6709\u90a3\u4e9b\u5df2\u7ecf\u88ab\u6682\u5b58\uff08staged\u7684\u6587\u4ef6\u4f1a\u5728\u65b0\u7684\u63d0\u4ea4\u4e2d\u66f4\u65b0\u4e3a\u6682\u5b58\u7684\u7248\u672c\u3002</li> <li>\u65b0\u6587\u4ef6\uff08\u8fd8\u6ca1\u6709\u88ab\u8ffd\u8e2a\u7684\u6587\u4ef6\uff09\u5982\u679c\u6682\u5b58\u4e86\uff0c\u65b0\u7684\u63d0\u4ea4\u4f1a\u5f00\u59cb\u8ffd\u8e2a\u5b83\u4eec\u3002</li> <li>\u5982\u679c\u6709\u6587\u4ef6\u88abrm\u547d\u4ee4\u6807\u8bb0\u4e3a\u5220\u9664\uff0c\u5b83\u4eec\u5c31\u4e0d\u4f1a\u518d\u88ab\u65b0\u7684\u63d0\u4ea4\u8ffd\u8e2a\u3002</li> </ul> <p>\u5f53\u4f60\u628a\u6587\u4ef6\u6682\u5b58\uff08staging\uff09\u597d\u540e\uff0c\u63d0\u4ea4\u65f6\u53ea\u4f1a\u4fdd\u5b58\u8fd9\u4e9b\u6682\u5b58\u7684\u5185\u5bb9\uff0c\u4efb\u4f55\u5728\u6682\u5b58\u4e4b\u540e\u5bf9\u6587\u4ef6\u7684\u66f4\u6539\u90fd\u4e0d\u4f1a\u88ab\u63d0\u4ea4\u547d\u4ee4\u5305\u542b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u63d0\u4ea4\uff08commit\uff09\u64cd\u4f5c\u53ea\u8bb0\u5f55\u6682\u5b58\u533a\u4e2d\u7684\u6587\u4ef6\u72b6\u6001\uff0c\u4e0d\u4f1a\u7ba1\u4f60\u5728\u6682\u5b58\u540e\u505a\u4e86\u4ec0\u4e48\u4fee\u6539\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u7528Unix\u7cfb\u7edf\u7684<code>rm</code>\u547d\u4ee4\u5220\u9664\u4e86\u4e00\u4e2a\u6587\u4ef6\uff08\u800c\u4e0d\u662f\u4f7f\u7528Gitlet\u7684\u5220\u9664\u547d\u4ee4\uff09\uff0cGitlet\u4e0d\u4f1a\u610f\u8bc6\u5230\u8fd9\u4e2a\u5220\u9664\u64cd\u4f5c\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u53d8\u5316\u6ca1\u6709\u88ab\u6682\u5b58\uff08staged\uff09\u3002\u56e0\u6b64\uff0c\u4e0b\u4e00\u6b21\u63d0\u4ea4\u65f6\uff0c\u8fd9\u4e2a\u88ab\u5220\u9664\u7684\u6587\u4ef6\u7684\u65e7\u7248\u672c\u4ecd\u7136\u4f1a\u51fa\u73b0\u5728\u63d0\u4ea4\u8bb0\u5f55\u4e2d\uff0c\u6587\u4ef6\u4e0d\u4f1a\u88ab\u771f\u6b63\u5220\u9664\u3002</p> <p>\u7b80\u5316\u6765\u8bf4\u5c31\u662f\uff1a</p> <ul> <li>\u63d0\u4ea4\u65f6\u53ea\u770b\u6682\u5b58\u533a\u7684\u5185\u5bb9\u3002</li> <li>\u5728\u6682\u5b58\u4e4b\u540e\u5bf9\u6587\u4ef6\u505a\u7684\u4efb\u4f55\u4fee\u6539\uff0c\u4e0d\u4f1a\u5f71\u54cd\u672c\u6b21\u63d0\u4ea4\u3002</li> <li>\u5982\u679c\u4f60\u6ca1\u6709\u7528Gitlet\u7684\u547d\u4ee4\u5220\u9664\u6587\u4ef6\uff0c\u800c\u662f\u7528\u7cfb\u7edf\u547d\u4ee4\u76f4\u63a5\u5220\u9664\uff0cGitlet\u4e0d\u4f1a\u77e5\u9053\uff0c\u63d0\u4ea4\u65f6\u8fd8\u662f\u4f1a\u4fdd\u5b58\u65e7\u7684\u6587\u4ef6\u7248\u672c\u3002</li> </ul> <p>each commit should contain the date and time it was made</p>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#_1","title":"\u6838\u5fc3\u529f\u80fd","text":"<ul> <li>\u4fdd\u5b58\u6587\u4ef6\u7684\u72b6\u6001</li> <li>\u8bb0\u5f55\u63d0\u4ea4\u7684\u4fe1\u606f</li> <li>\u66f4\u65b0\u7248\u672c\u5386\u53f2</li> <li>\u5904\u7406\u6682\u5b58\u533a</li> </ul>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#rm","title":"rm","text":""},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#-add","title":"- \u8ddfadd\u53cd\u4e00\u4e0b\u5c31\u597d\uff0c\u96be\u5ea6\u4e0d\u5927","text":""},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#log","title":"log","text":"<ul> <li>\u8981\u60f3\u6e05\u695aCommit\u7684\u5b58\u50a8\u5f62\u5f0f\uff0c\u4ee5\u4fbf\u901a\u8fc7getparent()\u8fd4\u56de\u7684String\u7c7b\u578b\u627e\u5230\u4e0a\u4e00\u4e2aCommit\uff0c\u96be\u5ea6\u4e0d\u5927</li> <li>\u6211\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff1acommitId\u662f\u7531commit\u7c7b\u578b\u7684\u65f6\u95f4\u6233sha1\u540e\u7684String\uff0c\u4ee5\u6b64\u4e3a\u6587\u4ef6\u540d\uff0c\u6587\u4ef6\u5185\u5bb9\u662f\u7528writeObject\u628acommit\u7c7b\u578b\u52a0\u5bc6\u540e\u5199\u5165\u3002\u6240\u4ee5\u53ef\u4ee5\u8c03\u7528readObject\uff08\u4ee5commitId\u4e3a\u540d\u7684\u6587\u4ef6\uff0cCommit.Class)\u8fd4\u56decommit\u7c7b\u578b</li> </ul>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#global-log","title":"global-log","text":"<ul> <li>\u548clog\u903b\u8f91\u7c7b\u4f3c</li> <li>\u4e3b\u8981\u662f\u5229\u7528plainFilenamesIn()\u8fd4\u56dedir\u4e0b\u7684\u6587\u4ef6\uff0c\u4ee5List&lt;String\u7684\u5f62\u5f0f</li> </ul>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#find","title":"find","text":""},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#-messagecommit","title":"- \u7ed9\u5b9amessage\u53bb\u627eCommit\uff0c\u4e0d\u96be","text":""},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#status","title":"Status","text":"<ul> <li>\u9700\u8981\u7406\u4e00\u4e0b 1. Branches part \u5f53\u524d\u7684branch\u524d\u8981\u52a0* 2. \u6240\u6709\u7684\u8f93\u51fa\u90fd\u9700\u8981\u6309\u7167lexicographic order</li> <li>\u670d\u4e86\uff0c\u5199\u5230\u8fd9\u91cc\u53d1\u73b0\u81ea\u5df1\u5bf9head\u548cmaster\u7684\u7406\u89e3\u6709\u8bef\u3002</li> <li>\u5e94\u8be5\u662f\uff1ahead\u6307\u5411\u4e00\u4e2a\u5206\u652f\uff0c\u6bd4\u5982head\u6307\u5411master\uff0c\u7136\u540emaster\u6307\u5411\u5f53\u524d\u5206\u652f\u7684\u6700\u65b0\u63d0\u4ea4\u3002\u8fd9\u6837\u5b50\u5728\u51fa\u73b0\u591a\u5206\u652f\u7684\u65f6\u5019\uff0c\u4e00\u4e2ahead\u4ee5\u53ca\u591a\u4e2a\u5206\u652f\u540d\u5c31\u53ef\u4ee5\u5b9e\u73b0\u591a\u7ebf\u7a0b\u63a8\u8fdb</li> </ul>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#checkout","title":"checkout","text":"<ul> <li>3\u79cd\u5e94\u7528\u65b9\u5f0f<ol> <li>checkout -- [filename]     \u628ahead commit\u4e2d\u7684filename\u6587\u4ef6\u5199\u5165CWD</li> <li>checkout [commit id] -- [filename]     \u628a\u6307\u5b9acommit\u4e2d\u7684filename\u6587\u4ef6\u5199\u5165CWD<ul> <li>\u8fd9\u6837\u770b\u6765\uff0c\u6211\u5b8c\u5168\u53ef\u4ee5\u5148\u5199\u7b2c2\u949f\u60c5\u51b5\uff0c\u7b2c\u4e00\u79cd\u65e0\u975e\u5c31\u662f\u4f20\u5165\u4e00\u4e2aheadcommitID\u53c2\u6570\u5373\u53ef</li> </ul> </li> <li>checkout [branch name]<ol> <li>\u628a\u6307\u5b9a\u5206\u652f\u7684commit\u4e2d\u7684\u6587\u4ef6\u5168\u90e8\u5199\u5165\u5230CWD</li> <li>\u628aHEAD\u66f4\u65b0\u4e3a\u6307\u5b9a\u7684branch</li> <li>\u88ab\u5f53\u524dbranch\u8ddf\u8e2a\u7684\u6587\u4ef6\u5982\u679c\u4e0d\u5728\u6307\u5b9a\u7684branch\u4e2d\u5219\u5220\u9664</li> <li>staging area\u8981\u88ab\u6e05\u7a7a</li> </ol> </li> </ol> </li> <li>failure cases:<ol> <li>file\u4e0d\u5b58\u5728</li> <li>no commit with the given id</li> <li>no branch with that name; \u6307\u5b9a\u7684branch\u662fcurrent branch</li> </ol> </li> </ul> <p>problem \u5199\u5230\u8fd9\u91cc \u53c8\u53d1\u73b0\u6211\u4e00\u5904\u903b\u8f91\u9519\u8bef\uff0c\u6211\u4e00\u5f00\u59cb\u7684\u5206\u914d\u662fcommit\u7c7b\u578b\u7684\u5c5e\u6027blobs\u662fHashMap\u7c7b\u578b\u7684\uff0c\u4f1a\u6709\u4e00\u4e2akey-&gt;value\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u800c\u6211\u51fa\u4e8e\u5e8f\u5217\u548c\u53cd\u5e8f\u5217\u4e4b\u95f4\u7684\u76f8\u4e92\u8f6c\u6362\uff0c\u8ba4\u4e3a\u6211\u53ef\u4ee5\u628akey\u8bbe\u7f6e\u6210\u6587\u4ef6\u540d\uff0cvalue\u8bbe\u7f6e\u6210\u5e8f\u5217\u5316\u540e\u6587\u4ef6\u5185\u5bb9\uff0c\u6b64\u65f6\u6211\u53d1\u73b0blobs\u6587\u4ef6\u5939\u65e0\u7528\u3002\u9519\u8bef\u4e4b\u5904\u5728\u4e8e\uff0c\u6211\u8bd5\u56fe\u901a\u8fc7readObject\u53bb\u6062\u590d\u7528sha1\u5e8f\u5217\u5316\u7684\u539f\u59cb\u6587\u4ef6\u5185\u5bb9\u3002</p>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#branch","title":"branch","text":"<ul> <li>\u5728BRANCHES_DIR\u4e0b\u521b\u5efa\u4e00\u4e2a\u65b0\u7684branch\uff0c\u6587\u4ef6\u5185\u5bb9\u662f\u5f53\u524d\u7684commit</li> <li>\u4e0d\u96be</li> </ul>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#rm-branch","title":"rm-branch","text":"<ul> <li>\u53ea\u8981\u5220\u9664branches\u6587\u4ef6\u4e0b\u7684\u76f8\u5e94\u6587\u4ef6\u5373\u53ef</li> <li>\u6ce8\u610f2\u4e2a\u62a5\u9519\u60c5\u51b5</li> </ul>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#reset","title":"reset","text":"<ul> <li>\u628a\u7ed9\u5b9acommit\u8ffd\u8e2a\u7684\u6587\u4ef6\u6dfb\u52a0\u5230CWD</li> <li>\u5f53\u524dcommit\u8ffd\u8e2a\u7684\u6587\u4ef6\u5982\u679c\u4e0d\u5728\u7ed9\u5b9acommit\u91cc\uff0c\u5219\u5220\u9664</li> <li>\u901a\u8fc7HEAD\u627e\u5230\u5f53\u524dbranch\uff0c\u7136\u540e\u66f4\u65b0branch\u6307\u5411\u4e3a\u7ed9\u5b9a\u7684commit</li> </ul>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#merge","title":"merge","text":"<p>(More to come here. It's one of the more complex features, so it\u2019s still a work in progress.)</p> <p>\u4e8e2024.11.11\u7ee7\u7eed\u542f\u52a8\uff0c\u88ab\u6570\u5b66\u7ade\u8d5b\u803d\u6401\u4e862\u5468\uff0c\u8fd0\u6c14\u597d\u7684\u8bdd\u6709\u4e2a\u7701\u4e00\uff1f\u53ef\u60dc\u8fdb\u4e0d\u4e86\u51b3\u8d5b</p> <ul> <li>split point\uff1a\u5f53\u524dbranch\u548cgiven branch heads\u6700\u8fd1\u7684\u5171\u540c\u201c\u7956\u5148\u201d</li> <li>\u6240\u6709\u7684file\u90fd\u9700\u8981figure out</li> <li>\u5982\u4f55\u627e\u5230split point?</li> <li> <p>\u627e\u5230\u4e4b\u540e\u5224\u65ad\uff1a</p> <ol> <li>If the split point\u00a0is the same commit as the given branch, then we do nothing; the merge is complete, and the operation ends with the message\u00a0<code>Given branch is an ancestor of the current branch.</code> <ul> <li>\u5982\u679c\u7ed9\u5b9a\u5206\u652f\u7684commit\u5c31\u662fsplit commit\uff0c\u90a3\u4e48\u4e0d\u9700\u8981merge\uff0c\u8fd4\u56demessage\u7ed3\u675f</li> </ul> </li> <li>If the split point is the current branch, then the effect is to check out the given branch, and the operation ends after printing the message\u00a0<code>Current branch fast-forwarded.</code> <ul> <li>\u5982\u679csplit commit\u662f\u5728\u5f53\u524d\u5206\u652f\u4e0a\uff0c\u610f\u5473\u7740\u5f53\u524d\u5206\u652f\u843d\u540e\u4e8egiven branch\uff08\u4f60\u8981\u5207\u6362\u5230\u7684\u5206\u652f\uff09\uff0c\u5e76\u4e14\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5feb\u8fdb\u7684\u65b9\u5f0f\u5c06\u5176\u66f4\u65b0\u4e3a\u76ee\u6807\u5206\u652f\u7684\u6700\u65b0\u72b6\u6001\u3002\u8fd9\u79cd\u60c5\u51b5\u65e0\u9700\u4ea7\u751f\u65b0\u7684\u5408\u5e76\u63d0\u4ea4\uff0c\u53ea\u9700\u7b80\u5355\u5730\u5c06\u5f53\u524d\u5206\u652f\u6307\u9488\u79fb\u52a8\u5230\u76ee\u6807\u5206\u652f\u7684\u6700\u65b0\u63d0\u4ea4\u4f4d\u7f6e\u3002</li> </ul> </li> <li>\u5426\u5219 \u4e0b\u97627\u79cd\u60c5\u51b5\u6267\u884cmerge </li> </ol> <p>         1. \u4efb\u4f55\u5728given branch\u4e2d\u88ab\u4fee\u6539\uff0c\u5728current branch\u4e2d\u6ca1\u6709\u88ab\u4fee\u6539\u7684\u6587\u4ef6 -&gt;given branch\u3002\u7136\u540e\u8fd9\u4e9b\u6587\u4ef6\u5e94\u8be5\u88ab\u81ea\u52a8staged         2. \u4efb\u4f55\u5728current branch\u4e2d\u88ab\u4fee\u6539\uff0c\u5728given branch\u4e2d\u6ca1\u6709\u88ab\u4fee\u6539\u7684\u6587\u4ef6 -&gt;\u4fdd\u6301\u539f\u6837\uff0c\u65e2current branch         3. \u5982\u679c\u4e00\u4e2a\u6587\u4ef6\u5728current branch\u548cgiven branch\u4e2d\u88ab\u4fee\u6539\u7684\u65b9\u5f0f\u76f8\u540c\uff08\u90fd\u88ab\u5220\u9664\u6216\u6216\u8005\u5177\u6709\u76f8\u540c\u7684\u5185\u5bb9\uff09\uff0c\u90a3\u4e48\u4fdd\u6301\u4e0d\u53d8\u3002\u5982\u679c\u5df2\u7ecf\u88ab\u5220\u9664\u4e14\u5728CWD\u4e2d\u5b58\u5728\u540c\u540d\u6587\u4ef6\uff0c\u4f9d\u65e7\u662f\u4fdd\u6301\u4e0d\u53d8         4. \u4efb\u4f55\u4e0d\u5728split commit\u548cgiven branch\u4e2d\uff0c\u800c\u53ea\u5728current branch\u4e2d\u7684\u6587\u4ef6 -&gt; current branch         5. \u4efb\u4f55\u4e0d\u5728split commit\u548ccurrent branch\u4e2d\uff0c\u800c\u53ea\u5728given branch\u4e2d\u7684\u6587\u4ef6 -&gt; given branch         6. \u4efb\u4f55\u5728spilit commit\u4e2d\u4e14\u4e0d\u5728given branch\u4e2d\uff0c\u5728current branch \u4e2d\u6ca1\u6709\u88ab\u4fee\u6539\u7684\u6587\u4ef6 -&gt; \u5220\u9664         7. \u4efb\u4f55\u5728spilit commit\u4e2d\u4e14\u4e0d\u5728current branch\u4e2d\uff0c\u5728given branch \u4e2d\u6ca1\u6709\u88ab\u4fee\u6539\u7684\u6587\u4ef6 -&gt; \u5220\u9664         8. \u5982\u679c\u4e00\u4e2a\u6587\u4ef6\u5728current branch\u548cgiven branch\u4e2d\u88ab\u4fee\u6539\u7684\u65b9\u5f0f\u4e0d\u540c -&gt; CONFLICT - failure massage\uff1a     1. \u6682\u5b58\u533a\u6709\u4e1c\u897f\u7684\u8bdd\uff0c\u62a5\u9519\u5e76\u9000\u51fa     2. given branch\u4e0d\u5b58\u5728\uff0c\u62a5\u9519\u5e76\u9000\u51fa     3. given branch == current branch\uff0c\u62a5\u9519\u5e76\u9000\u51fa     4. \u5982\u679c\u5728\u6267\u884c\u5408\u5e76\uff08merge\uff09\u64cd\u4f5c\u65f6\uff0c\u7cfb\u7edf\u4f1a\u56e0\u4e3a\u5408\u5e76\u7684\u63d0\u4ea4\uff08commit\uff09\u6ca1\u6709\u5b9e\u9645\u66f4\u6539\u800c\u62a5\u9519\uff0c\u90a3\u4e48\u5c31\u8ba9\u7cfb\u7edf\u6309\u7167\u6b63\u5e38\u7684\u63d0\u4ea4\u9519\u8bef\u4fe1\u606f\u6765\u5904\u7406\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u4e00\u4e9b\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff08\u5982Git\uff09\u4e2d\uff0c\u5f53\u4f60\u5c1d\u8bd5\u5408\u5e76\u4e24\u4e2a\u5206\u652f\u65f6\uff0c\u5982\u679c\u8fd9\u6b21\u5408\u5e76\u4e0d\u4f1a\u5f15\u5165\u4efb\u4f55\u65b0\u7684\u66f4\u6539\uff08\u5373\u6ca1\u6709\u5b9e\u9645\u4ee3\u7801\u5dee\u5f02\uff09\uff0c\u7cfb\u7edf\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u65e0\u610f\u4e49\u7684\u5408\u5e76\uff0c\u5e76\u629b\u51fa\u9519\u8bef\u3002\u6b64\u53e5\u7684\u610f\u601d\u662f\uff0c\u4e0d\u9700\u8981\u4e13\u95e8\u4e3a\u8fd9\u79cd\u60c5\u51b5\u8bbe\u8ba1\u989d\u5916\u7684\u9519\u8bef\u5904\u7406\u903b\u8f91\uff0c\u800c\u662f\u8ba9\u7cfb\u7edf\u9ed8\u8ba4\u7684\u63d0\u4ea4\u9519\u8bef\u4fe1\u606f\u663e\u793a\u5373\u53ef\u3002     5. \u5982\u679c\u4e00\u4e2a\u6ca1\u6709\u88abcurrent commit\u8ffd\u8e2a\u7684\u6587\u4ef6\u5373\u5c06\u88ab\u8986\u5199\u6216\u5220\u9664\uff0c\u62a5\u9519\u5e76\u9000\u51fa\u3002\u4f18\u5148\u68c0\u67e5\u8fd9\u4e00check</p> </li> </ul>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#some-tools-in-utils","title":"Some tools in Utils","text":""},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#1-sha-1-hash","title":"1. SHA-1 HASH \u51fd\u6570","text":"<ul> <li> <p><code>static String sha1(Object... vals)</code>:</p> <ul> <li>\u4f5c\u7528: \u8ba1\u7b97\u4f20\u5165\u7684\u4efb\u610f\u5b57\u8282\u6570\u7ec4\u6216\u5b57\u7b26\u4e32\u7684 SHA-1 \u54c8\u5e0c\u503c\uff0c\u5e76\u8fd4\u56de\u5176 40 \u5b57\u7b26\u957f\u5ea6\u7684\u5341\u516d\u8fdb\u5236\u8868\u793a\u3002</li> <li>\u7528\u9014: \u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u6587\u4ef6\u6216\u6570\u636e\uff0c\u5e38\u7528\u4e8e\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4e2d\u6807\u8bc6\u6587\u4ef6\u3001\u63d0\u4ea4\u7b49\u3002</li> <li>\u539f\u7406: \u5bf9\u6bcf\u4e2a\u8f93\u5165\uff08\u5b57\u7b26\u4e32\u6216\u5b57\u8282\u6570\u7ec4\uff09\u8fdb\u884c\u66f4\u65b0\uff0c\u6700\u7ec8\u901a\u8fc7 <code>MessageDigest</code> \u751f\u6210\u54c8\u5e0c\u503c\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a 16 \u8fdb\u5236\u5b57\u7b26\u4e32\u3002</li> <li> <p><code>static String sha1(List&lt;Object&gt; vals)</code>:</p> </li> <li> <p>\u4f5c\u7528: \u8fd9\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u548c\u4e0a\u4e00\u4e2a\u76f8\u540c\uff0c\u53ea\u662f\u63a5\u6536 <code>List&lt;Object&gt;</code> \u4f5c\u4e3a\u8f93\u5165\uff0c\u5185\u90e8\u8c03\u7528\u7b2c\u4e00\u4e2a <code>sha1</code> \u51fd\u6570\u3002</p> </li> </ul> </li> </ul>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#2","title":"2. \u6587\u4ef6\u5220\u9664\u51fd\u6570","text":"<ul> <li> <p><code>static boolean restrictedDelete(File file)</code>:</p> <ul> <li>\u4f5c\u7528: \u5220\u9664\u6307\u5b9a\u7684\u6587\u4ef6\uff0c\u524d\u63d0\u662f\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u4e2d\u5305\u542b <code>.gitlet</code> \u76ee\u5f55\uff0c\u5e76\u4e14\u76ee\u6807\u6587\u4ef6\u662f\u666e\u901a\u6587\u4ef6\u800c\u4e0d\u662f\u76ee\u5f55\u3002</li> <li>\u7528\u9014: \u9632\u6b62\u5728\u975e\u7248\u672c\u63a7\u5236\u76ee\u5f55\u4e2d\u5220\u9664\u6587\u4ef6\uff0c\u786e\u4fdd\u7528\u6237\u53ea\u80fd\u5728 <code>.gitlet</code> \u76ee\u5f55\u4e0b\u8fdb\u884c\u64cd\u4f5c\uff0c\u589e\u52a0\u5b89\u5168\u6027\u3002</li> <li> <p><code>static boolean restrictedDelete(String file)</code>:</p> </li> <li> <p>\u4f5c\u7528: \u548c\u4e0a\u4e00\u4e2a\u51fd\u6570\u4f5c\u7528\u76f8\u540c\uff0c\u53ea\u662f\u63a5\u53d7 <code>String</code> \u7c7b\u578b\u7684\u6587\u4ef6\u8def\u5f84\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u901a\u8fc7\u521b\u5efa <code>File</code> \u5bf9\u8c61\u8c03\u7528\u4e0a\u4e00\u4e2a\u51fd\u6570\u3002</p> </li> </ul> </li> </ul>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#3","title":"3. \u6587\u4ef6\u5185\u5bb9\u8bfb\u53d6\u4e0e\u5199\u5165","text":"<ul> <li> <p><code>static byte[] readContents(File file)</code>:</p> <ul> <li>\u4f5c\u7528: \u8bfb\u53d6\u4e00\u4e2a\u666e\u901a\u6587\u4ef6\u7684\u6240\u6709\u5185\u5bb9\uff0c\u5e76\u8fd4\u56de\u4e3a\u5b57\u8282\u6570\u7ec4\u3002</li> <li>\u7528\u9014: \u83b7\u53d6\u6587\u4ef6\u7684\u4e8c\u8fdb\u5236\u5185\u5bb9\uff0c\u5e38\u7528\u4e8e\u8bfb\u53d6\u6587\u4ef6\u6570\u636e\uff08\u5982 blobs\uff09\u3002</li> <li>\u5f02\u5e38\u5904\u7406: \u5982\u679c\u6587\u4ef6\u4e0d\u662f\u666e\u901a\u6587\u4ef6\u6216\u8bfb\u53d6\u5931\u8d25\uff0c\u4f1a\u629b\u51fa <code>IllegalArgumentException</code>\u3002</li> </ul> </li> <li> <p><code>static String readContentsAsString(File file)</code>:</p> <ul> <li>\u4f5c\u7528: \u8bfb\u53d6\u6587\u4ef6\u7684\u5185\u5bb9\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a UTF-8 \u7f16\u7801\u7684\u5b57\u7b26\u4e32\u3002</li> <li>\u7528\u9014: \u8bfb\u53d6\u6587\u672c\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u5e38\u7528\u4e8e\u5904\u7406\u6587\u672c\u6587\u4ef6\uff08\u5982 commit \u4fe1\u606f\uff09\u3002</li> </ul> </li> <li> <p><code>static void writeContents(File file, Object... contents)</code>:</p> <ul> <li>\u4f5c\u7528: \u5c06\u4f20\u5165\u7684\u5185\u5bb9\uff08\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216\u5b57\u8282\u6570\u7ec4\uff09\u5199\u5165\u6587\u4ef6\uff0c\u652f\u6301\u521b\u5efa\u6216\u8986\u76d6\u6587\u4ef6\u3002</li> <li>\u7528\u9014: \u5199\u5165\u6587\u4ef6\u5185\u5bb9\uff0c\u786e\u4fdd\u4e0d\u4f1a\u8986\u76d6\u76ee\u5f55\u6587\u4ef6\u3002</li> <li>\u5f02\u5e38\u5904\u7406: \u5982\u679c\u64cd\u4f5c\u5931\u8d25\u6216\u8005\u8bd5\u56fe\u8986\u76d6\u76ee\u5f55\u6587\u4ef6\uff0c\u4f1a\u629b\u51fa <code>IllegalArgumentException</code>\u3002</li> </ul> </li> </ul>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#4","title":"4. \u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316","text":"<ul> <li> <p><code>static &lt;T extends Serializable&gt; T readObject(File file, Class&lt;T&gt; expectedClass)</code>:</p> <ul> <li>\u4f5c\u7528: \u53cd\u5e8f\u5217\u5316\u6587\u4ef6\u5185\u5bb9\u4e3a Java \u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u5f3a\u5236\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u7c7b\u578b\u3002</li> <li>\u7528\u9014: \u4ece\u6587\u4ef6\u4e2d\u6062\u590d\u4e4b\u524d\u4fdd\u5b58\u7684 Java \u5bf9\u8c61\uff08\u5982\u4fdd\u5b58\u7684\u9879\u76ee\u72b6\u6001\u6216\u7248\u672c\u4fe1\u606f\uff09\u3002</li> <li>\u5f02\u5e38\u5904\u7406: \u5982\u679c\u8bfb\u53d6\u6216\u7c7b\u578b\u8f6c\u6362\u5931\u8d25\uff0c\u4f1a\u629b\u51fa <code>IllegalArgumentException</code>\u3002</li> </ul> </li> <li> <p><code>static void writeObject(File file, Serializable obj)</code>:</p> <ul> <li>\u4f5c\u7528: \u5c06\u4e00\u4e2a\u53ef\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u5199\u5165\u6587\u4ef6\u3002</li> <li>\u7528\u9014: \u4fdd\u5b58\u5bf9\u8c61\u72b6\u6001\u5230\u6587\u4ef6\uff08\u5982\u63d0\u4ea4\u4fe1\u606f\u3001\u6587\u4ef6\u5feb\u7167\u7b49\uff09\u3002</li> <li>\u8c03\u7528\u5185\u90e8\u51fd\u6570: \u4f7f\u7528 <code>writeContents</code> \u51fd\u6570\u5c06\u5e8f\u5217\u5316\u540e\u7684\u5b57\u8282\u6570\u636e\u5199\u5165\u6587\u4ef6\u3002</li> </ul> </li> <li> <p><code>static byte[] serialize(Serializable obj)</code>:</p> <ul> <li>\u4f5c\u7528: \u5c06\u5bf9\u8c61\u5e8f\u5217\u5316\u4e3a\u5b57\u8282\u6570\u7ec4\u3002</li> <li>\u7528\u9014: \u7528\u4e8e\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u53ef\u5b58\u50a8\u6216\u4f20\u8f93\u7684\u5b57\u8282\u683c\u5f0f\uff08\u5982\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff09\u3002</li> </ul> </li> </ul>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#5","title":"5. \u76ee\u5f55\u4e0e\u6587\u4ef6\u64cd\u4f5c","text":"<ul> <li> <p><code>static List&lt;String&gt; plainFilenamesIn(File dir)</code>:</p> <ul> <li>\u4f5c\u7528: \u83b7\u53d6\u6307\u5b9a\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u666e\u901a\u6587\u4ef6\uff08\u975e\u76ee\u5f55\uff09\u7684\u6587\u4ef6\u540d\uff0c\u5e76\u6309\u5b57\u5178\u987a\u5e8f\u6392\u5e8f\u3002</li> <li>\u7528\u9014: \u7528\u4e8e\u83b7\u53d6\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u5217\u8868\uff0c\u6392\u9664\u5b50\u76ee\u5f55\uff0c\u5e38\u7528\u4e8e\u7248\u672c\u63a7\u5236\u64cd\u4f5c\u4e2d\u5217\u51fa\u6587\u4ef6\u3002</li> <li>\u5f02\u5e38\u5904\u7406: \u5982\u679c\u4f20\u5165\u7684\u4e0d\u662f\u76ee\u5f55\uff0c\u8fd4\u56de <code>null</code>\u3002</li> <li> <p><code>static List&lt;String&gt; plainFilenamesIn(String dir)</code>:</p> </li> <li> <p>\u4f5c\u7528: \u548c\u4e0a\u4e00\u4e2a\u51fd\u6570\u4f5c\u7528\u76f8\u540c\uff0c\u53ea\u662f\u63a5\u53d7\u5b57\u7b26\u4e32\u8def\u5f84\uff0c\u5185\u90e8\u901a\u8fc7\u521b\u5efa <code>File</code> \u5bf9\u8c61\u8c03\u7528\u4e0a\u4e00\u4e2a\u51fd\u6570\u3002</p> </li> <li> <p><code>static File join(String first, String... others)</code>:</p> </li> <li> <p>\u4f5c\u7528: \u5c06\u591a\u4e2a\u8def\u5f84\u5b57\u7b26\u4e32\u62fc\u63a5\u6210\u4e00\u4e2a <code>File</code> \u5bf9\u8c61\u3002</p> </li> <li>\u7528\u9014: \u65b9\u4fbf\u6784\u5efa\u6587\u4ef6\u8def\u5f84\uff0c\u7c7b\u4f3c <code>Paths.get()</code> \u65b9\u6cd5\u3002</li> <li> <p><code>static File join(File first, String... others)</code>:</p> </li> <li> <p>\u4f5c\u7528: \u548c\u4e0a\u4e00\u4e2a\u51fd\u6570\u76f8\u540c\uff0c\u53ea\u662f\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f <code>File</code> \u5bf9\u8c61\u3002</p> </li> </ul> </li> </ul>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#6","title":"6. \u6d88\u606f\u4e0e\u9519\u8bef\u5904\u7406","text":"<ul> <li> <p><code>static GitletException error(String msg, Object... args)</code>:</p> <ul> <li>\u4f5c\u7528: \u6839\u636e\u6307\u5b9a\u7684\u6d88\u606f\u548c\u53c2\u6570\u521b\u5efa\u4e00\u4e2a <code>GitletException</code> \u5f02\u5e38\u3002</li> <li>\u7528\u9014: \u7528\u4e8e\u62a5\u544a\u81ea\u5b9a\u4e49\u9519\u8bef\uff0c\u629b\u51fa\u9879\u76ee\u4e2d\u5e38\u89c1\u7684\u5f02\u5e38\u3002</li> <li> <p><code>static void message(String msg, Object... args)</code>:</p> </li> <li> <p>\u4f5c\u7528: \u6253\u5370\u683c\u5f0f\u5316\u7684\u6d88\u606f\uff0c\u5e76\u5728\u672b\u5c3e\u6dfb\u52a0\u6362\u884c\u7b26\u3002</p> </li> <li>\u7528\u9014: \u7528\u4e8e\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u4fe1\u606f\u6216\u63d0\u793a\uff0c\u7c7b\u4f3c\u4e8e <code>System.out.printf()</code>\u3002</li> </ul> </li> </ul>"},{"location":"cs_base/cs61b/gitlet%E4%B9%8B%E6%88%91%E8%A7%81/#some-note","title":"some note","text":"<p>\u4e3a\u4e86\u4fbf\u4e8e\u8c03\u8bd5\uff0c\u81ea\u5df1\u5199\u4e86\u4e00\u4e2a\u7b80\u6613\u7684\u952e\u76d8\u8f93\u5165\u7684\u7a0b\u5e8f </p>Python<pre><code>import pyautogui\nimport time\n\ntime.sleep(1)\n\npyautogui.typewrite('javac gitlet/*.java', interval=0.001)\npyautogui.press('enter') \u00a0\ntime.sleep(0.5)\n\npyautogui.typewrite('java gitlet.Main init', interval=0.001)\npyautogui.press('enter') \u00a0\ntime.sleep(0.5)\n\npyautogui.typewrite('java gitlet.Main add \"123.txt\"', interval=0.001)\npyautogui.press('enter') \u00a0\ntime.sleep(0.5)\n\npyautogui.typewrite('java gitlet.Main commit \"123.txt\"', interval=0.001)\npyautogui.press('enter')\ntime.sleep(0.5) \u00a0\n\npyautogui.typewrite('java gitlet.Main log', interval=0.001)\npyautogui.press('enter')\ntime.sleep(0.5) \u00a0\n\npyautogui.typewrite('java gitlet.Main status', interval=0.001)\npyautogui.press('enter') \u00a0\ntime.sleep(0.5)\n</code></pre>"},{"location":"cs_base/cs61c/Lab/Lab01/","title":"Lab01: Debugging Tools &amp; C Programming","text":""},{"location":"cs_base/cs61c/Lab/Lab01/#lab01-debugging-tools-c-programming","title":"Lab01: Debugging Tools &amp; C Programming","text":"<p> \u7ea6 686 \u4e2a\u5b57  41 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"cs_base/cs61c/Lab/Lab01/#exercise-1-see-what-you-can-c","title":"Exercise 1: See what you can C","text":""},{"location":"cs_base/cs61c/Lab/Lab01/#_1","title":"\u76ee\u6807","text":"<p>\u5b66\u4e60C\u8bed\u8a00\u5b8f\u5b9a\u4e49\uff08Macro\uff09\u7684\u57fa\u7840\u7528\u6cd5\uff0c\u7406\u89e3\u9884\u5904\u7406\u9636\u6bb5\u7684\u4f5c\u7528\u3002</p>"},{"location":"cs_base/cs61c/Lab/Lab01/#_2","title":"\u5173\u952e\u6982\u5ff5","text":"<ul> <li>\u5b8f\u5b9a\u4e49\uff1a\u901a\u8fc7 <code>#define</code> \u66ff\u6362\u6587\u672c\uff0c\u5206\u4e3a\u65e0\u53c2\u5b8f\u548c\u5e26\u53c2\u5b8f\u3002 C<pre><code>#define PI 3.14              // \u65e0\u53c2\u5b8f\n#define SQUARE(x) ((x)*(x))  // \u5e26\u53c2\u5b8f\uff08\u6ce8\u610f\u62ec\u53f7\u907f\u514d\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u95ee\u9898\uff09\n</code></pre></li> <li>\u8c03\u8bd5\u5b8f\uff1a\u5229\u7528\u5b8f\u8f93\u51fa\u8c03\u8bd5\u4fe1\u606f\uff0c\u7ed3\u5408\u6761\u4ef6\u7f16\u8bd1\u63a7\u5236\u662f\u5426\u542f\u7528\uff1a C<pre><code>#ifdef DEBUG\n#define LOG(msg) printf(\"DEBUG: %s\\n\", msg)\n#else\n#define LOG(msg)\n#endif\n</code></pre></li> <li>\u9632\u6b62\u5934\u6587\u4ef6\u91cd\u590d\u5305\u542b\uff1a C<pre><code>#ifndef HEADER_H\n#define HEADER_H\n// \u5934\u6587\u4ef6\u5185\u5bb9\n#endif\n</code></pre></li> </ul>"},{"location":"cs_base/cs61c/Lab/Lab01/#exercise-2-catch-those-bugs-gdbcgdb","title":"Exercise 2: Catch those bugs (GDB/cgdb \u5b9e\u6218)","text":""},{"location":"cs_base/cs61c/Lab/Lab01/#_3","title":"\u76ee\u6807","text":"<p>\u638c\u63e1GDB\u8c03\u8bd5\u5668\u6838\u5fc3\u547d\u4ee4\uff0c\u7406\u89e3\u65ad\u70b9\u3001\u5355\u6b65\u6267\u884c\u3001\u53d8\u91cf\u76d1\u63a7\u7b49\u64cd\u4f5c\u3002</p>"},{"location":"cs_base/cs61c/Lab/Lab01/#_4","title":"\u6838\u5fc3\u547d\u4ee4\u5bf9\u6bd4\u8868","text":"\u64cd\u4f5c GDB\u547d\u4ee4 \u7b80\u5199 \u8bf4\u660e \u8bbe\u7f6e\u53c2\u6570 <code>set args &lt;...&gt;</code> - \u7a0b\u5e8f\u542f\u52a8\u53c2\u6570 \u8bbe\u7f6e\u65ad\u70b9 <code>break &lt;loc&gt;</code> <code>b</code> \u51fd\u6570\u540d/\u884c\u53f7/\u6587\u4ef6:\u884c\u53f7 \u5355\u6b65\u6267\u884c\uff08\u4e0d\u8fdb\u5165\u51fd\u6570\uff09 <code>next</code> <code>n</code> \u6267\u884c\u4e0b\u4e00\u884c\u4ee3\u7801 \u5355\u6b65\u8fdb\u5165\u51fd\u6570 <code>step</code> <code>s</code> \u8fdb\u5165\u51fd\u6570\u5185\u90e8 \u7ee7\u7eed\u8fd0\u884c <code>continue</code> <code>c</code> \u8fd0\u884c\u5230\u4e0b\u4e00\u4e2a\u65ad\u70b9 \u6253\u5370\u53d8\u91cf <code>print &lt;expr&gt;</code> <code>p</code> \u652f\u6301\u8868\u8fbe\u5f0f\u5982 <code>p *(arr+5)</code> \u81ea\u52a8\u663e\u793a\u53d8\u91cf <code>display &lt;var&gt;</code> - \u6bcf\u6b65\u540e\u81ea\u52a8\u663e\u793a\u503c \u67e5\u770b\u5c40\u90e8\u53d8\u91cf <code>info locals</code> - \u5f53\u524d\u6808\u5e27\u6240\u6709\u5c40\u90e8\u53d8\u91cf \u9000\u51faGDB <code>quit</code> <code>q</code> \u9000\u51fa\u8c03\u8bd5\u5668"},{"location":"cs_base/cs61c/Lab/Lab01/#_5","title":"\u9ad8\u7ea7\u6280\u5de7","text":"<ul> <li>\u6761\u4ef6\u65ad\u70b9\uff1a\u5f53\u53d8\u91cf\u6ee1\u8db3\u6761\u4ef6\u65f6\u6682\u505c Text Only<pre><code>break 20 if i == 5\n</code></pre></li> <li>\u4fee\u6539\u53d8\u91cf\u503c\uff1a\u52a8\u6001\u8c03\u8bd5\u65f6\u4fee\u6539\u8fd0\u884c\u72b6\u6001 Text Only<pre><code>set variable x = 10\n</code></pre></li> <li>\u67e5\u770b\u5185\u5b58\u5e03\u5c40\uff1a Text Only<pre><code>x/8wx &amp;array  # \u4ee516\u8fdb\u5236\u67e5\u770b\u6570\u7ec4\u524d8\u4e2a\u5b57\n</code></pre></li> <li>cgdb\u4f18\u52bf\uff1a\u5206\u5c4f\u754c\u9762\uff08\u4e0a\u4ee3\u7801/\u4e0b\u547d\u4ee4\uff09\uff0c\u652f\u6301Vi\u5feb\u6377\u952e\uff08\u6309<code>Esc</code>\u8fdb\u5165\u4ee3\u7801\u7a97\u53e3\uff0c\u65b9\u5411\u952e\u6d4f\u89c8\uff09\u3002</li> </ul>"},{"location":"cs_base/cs61c/Lab/Lab01/#exercise-3-debugging-with-user-input","title":"Exercise 3: Debugging with User Input (\u8f93\u5165\u91cd\u5b9a\u5411)","text":""},{"location":"cs_base/cs61c/Lab/Lab01/#_6","title":"\u76ee\u6807","text":"<p>\u907f\u514d\u8c03\u8bd5\u4ea4\u4e92\u5f0f\u7a0b\u5e8f\u65f6\u624b\u52a8\u8f93\u5165\uff0c\u901a\u8fc7\u91cd\u5b9a\u5411\u9884\u5b9a\u4e49\u8f93\u5165\u3002</p>"},{"location":"cs_base/cs61c/Lab/Lab01/#_7","title":"\u64cd\u4f5c\u6b65\u9aa4","text":"<ol> <li>\u521b\u5efa\u8f93\u5165\u6587\u4ef6 <code>input.txt</code>\uff1a Text Only<pre><code>John\nCS61C\n</code></pre></li> <li>\u547d\u4ee4\u884c\u91cd\u5b9a\u5411\uff1a Bash<pre><code>./int_hello &lt; input.txt\n</code></pre></li> <li>\u5728GDB\u4e2d\u4f7f\u7528\u91cd\u5b9a\u5411\uff1a Text Only<pre><code>(gdb) run &lt; input.txt\n# \u6216\u63d0\u524d\u8bbe\u7f6e\u53c2\u6570\n(gdb) set args &lt; input.txt\n(gdb) run\n</code></pre></li> </ol>"},{"location":"cs_base/cs61c/Lab/Lab01/#_8","title":"\u539f\u7406","text":"<ul> <li><code>&lt;</code> \u64cd\u4f5c\u7b26\uff1a\u5c06\u6587\u4ef6\u5185\u5bb9\u91cd\u5b9a\u5411\u5230\u7a0b\u5e8f\u7684\u6807\u51c6\u8f93\u5165\uff08stdin\uff09\u3002</li> <li>\u7ba1\u9053\u6280\u5de7\uff1a\u7ed3\u5408 <code>echo</code> \u5feb\u901f\u6d4b\u8bd5 Bash<pre><code>echo -e \"John\\nCS61C\" | ./int_hello\n</code></pre></li> </ul>"},{"location":"cs_base/cs61c/Lab/Lab01/#exercise-4-valgrinding-away","title":"Exercise 4: Valgrind'ing away (\u5185\u5b58\u68c0\u6d4b)","text":""},{"location":"cs_base/cs61c/Lab/Lab01/#_9","title":"\u76ee\u6807","text":"<p>\u4f7f\u7528Valgrind\u68c0\u6d4b\u5185\u5b58\u9519\u8bef\uff08\u5982\u8d8a\u754c\u8bbf\u95ee\u3001\u5185\u5b58\u6cc4\u6f0f\uff09\u3002</p>"},{"location":"cs_base/cs61c/Lab/Lab01/#_10","title":"\u5173\u952e\u547d\u4ee4","text":"Bash<pre><code>valgrind --tool=memcheck --leak-check=full ./your_program\n</code></pre>"},{"location":"cs_base/cs61c/Lab/Lab01/#_11","title":"\u5e38\u89c1\u9519\u8bef\u7c7b\u578b","text":"<ol> <li>Invalid read/write\uff1a\u8d8a\u754c\u8bbf\u95ee\u5185\u5b58 C<pre><code>int arr[5];\narr[5] = 10;  // \u8d8a\u754c\uff08\u5408\u6cd5\u7d22\u5f150-4\uff09\n</code></pre></li> <li>Memory leak\uff1a\u672a\u91ca\u653e\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58 C<pre><code>int *p = malloc(10 * sizeof(int));\n// \u5fd8\u8bb0 free(p);\n</code></pre></li> <li>Use of uninitialized value\uff1a\u4f7f\u7528\u672a\u521d\u59cb\u5316\u53d8\u91cf C<pre><code>int x;\nprintf(\"%d\", x);  // x\u672a\u521d\u59cb\u5316\n</code></pre></li> </ol>"},{"location":"cs_base/cs61c/Lab/Lab01/#valgrind","title":"Valgrind\u8f93\u51fa\u89e3\u8bfb","text":"<ul> <li>Definitely lost\uff1a\u660e\u786e\u7684\u5185\u5b58\u6cc4\u6f0f\uff08\u9700\u4f18\u5148\u4fee\u590d\uff09\u3002</li> <li>Indirectly lost\uff1a\u56e0\u7ed3\u6784\u4f53\u5d4c\u5957\u5bfc\u81f4\u6cc4\u6f0f\u3002</li> <li>Suppression\uff1a\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u5ffd\u7565\u7b2c\u4e09\u65b9\u5e93\u7684\u8bef\u62a5\u3002</li> </ul>"},{"location":"cs_base/cs61c/Lab/Lab01/#exercise-5-pointers-and-structures-in-c","title":"Exercise 5: Pointers and Structures in C (\u94fe\u8868\u73af\u68c0\u6d4b)","text":""},{"location":"cs_base/cs61c/Lab/Lab01/#_12","title":"\u76ee\u6807","text":"<p>\u5b9e\u73b0\u5feb\u6162\u6307\u9488\u7b97\u6cd5\u68c0\u6d4b\u94fe\u8868\u73af\u3002</p>"},{"location":"cs_base/cs61c/Lab/Lab01/#_13","title":"\u7b97\u6cd5\u601d\u8def","text":"C<pre><code>bool ll_has_cycle(node *head) {\n    node *fast = head, *slow = head;\n    while (fast &amp;&amp; fast-&gt;next) {\n        slow = slow-&gt;next;\n        fast = fast-&gt;next-&gt;next;\n        if (slow == fast) {\n            return true;\n        }\n    }\n    return false;\n}\n</code></pre>"},{"location":"cs_base/cs61c/Lab/Lab01/#_14","title":"\u6d4b\u8bd5\u6280\u5de7","text":"<ul> <li>\u7f16\u8bd1\u547d\u4ee4\uff1a Bash<pre><code>gcc -g -o test_ll_cycle test_ll_cycle.c ll_cycle.c\n</code></pre></li> <li>GDB\u8c03\u8bd5\u6307\u9488\uff1a Text Only<pre><code>(gdb) p *slow   # \u67e5\u770b\u8282\u70b9\u5185\u5bb9\n(gdb) x/3x slow # \u67e5\u770b\u5185\u5b58\u5730\u5740\u5904\u76843\u4e2a\u5b57\uff0816\u8fdb\u5236\uff09\n</code></pre></li> </ul>"},{"location":"cs_base/cs61c/Lab/Lab01/#_15","title":"\u9644\u5f55\uff1a\u5e38\u7528\u8c03\u8bd5\u7b56\u7565","text":"<ol> <li>\u6700\u5c0f\u5316\u590d\u73b0\uff1a\u5c06\u95ee\u9898\u4ee3\u7801\u5265\u79bb\u5230\u6700\u5c0f\u53ef\u7f16\u8bd1\u793a\u4f8b\u3002</li> <li>\u4e8c\u5206\u6cd5\u6392\u67e5\uff1a\u901a\u8fc7\u6ce8\u91ca\u4ee3\u7801\u9010\u6b65\u7f29\u5c0f\u95ee\u9898\u8303\u56f4\u3002</li> <li>\u9632\u5fa1\u6027\u7f16\u7a0b\uff1a\u4f7f\u7528 <code>assert()</code> \u9a8c\u8bc1\u5047\u8bbe\u6761\u4ef6\u3002</li> <li>\u65e5\u5fd7\u8f93\u51fa\uff1a\u5728\u5173\u952e\u8def\u5f84\u6dfb\u52a0 <code>printf</code> \u8c03\u8bd5\uff08\u63d0\u4ea4\u524d\u79fb\u9664\uff09\u3002</li> </ol>"},{"location":"cs_base/cs61c/Lab/Lab02/","title":"CS61C Lab02 \u5b8c\u5584\u7b14\u8bb0","text":""},{"location":"cs_base/cs61c/Lab/Lab02/#cs61c-lab02","title":"CS61C Lab02 \u5b8c\u5584\u7b14\u8bb0","text":"<p> \u7ea6 452 \u4e2a\u5b57  37 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>"},{"location":"cs_base/cs61c/Lab/Lab02/#1-makefiles","title":"1. Makefiles \u6df1\u5165\u89e3\u6790","text":""},{"location":"cs_base/cs61c/Lab/Lab02/#_1","title":"\u95ee\u9898\u89e3\u7b54","text":"<ol> <li>\u5220\u9664\u6240\u6709\u7f16\u8bd1\u6587\u4ef6\u7684\u76ee\u6807\uff1a<code>clean</code></li> <li>\u7f16\u8bd1\u6240\u6709\u7a0b\u5e8f\u7684\u76ee\u6807\uff1a<code>all</code></li> <li>\u5f53\u524d\u7f16\u8bd1\u5668\uff1a<code>gcc</code></li> <li>C\u6807\u51c6\u7248\u672c\uff1aC99\uff08<code>-std=c99</code>\uff09</li> <li>\u5f15\u7528\u53d8\u91cf\uff1a<code>$(FOO)</code></li> <li>Darwin\u7cfb\u7edf\uff1amacOS/OS X</li> <li>LFSR\u6784\u5efa\u884c\u53f7\uff1a\u901a\u8fc7\u5206\u6790\u5e94\u5b9a\u4f4d\u5230<code>$(LFSR_PROG): $(LFSR_OBJS)</code>\u89c4\u5219\u5b9a\u4e49\u7684\u884c\uff08\u5177\u4f53\u884c\u53f7\u9700\u67e5\u770b\u539f\u59cb\u6587\u4ef6\uff09</li> </ol>"},{"location":"cs_base/cs61c/Lab/Lab02/#_2","title":"\u5173\u952e\u77e5\u8bc6\u70b9","text":"<ul> <li>\u81ea\u52a8\u53d8\u91cf\uff1a</li> <li><code>$&lt;</code> \u8868\u793a\u7b2c\u4e00\u4e2a\u4f9d\u8d56\u6587\u4ef6</li> <li><code>$@</code> \u8868\u793a\u76ee\u6807\u6587\u4ef6</li> <li><code>$^</code> \u8868\u793a\u6240\u6709\u4f9d\u8d56\u6587\u4ef6</li> <li>\u6761\u4ef6\u6307\u4ee4\uff1a<code>ifeq/else/endif</code> \u5b9e\u73b0\u8de8\u5e73\u53f0\u517c\u5bb9</li> <li>\u540e\u7f00\u89c4\u5219\uff1a<code>.c.o</code> \u5b9a\u4e49\u901a\u7528\u7f16\u8bd1\u89c4\u5219</li> <li>\u5185\u5b58\u8c03\u8bd5\uff1a Makefile<pre><code>valgrind --leak-check=full  # \u5b8c\u6574\u5185\u5b58\u6cc4\u6f0f\u68c0\u67e5\n--track-origins=yes        # \u8ffd\u8e2a\u672a\u521d\u59cb\u5316\u503c\u7684\u6765\u6e90\n</code></pre></li> </ul>"},{"location":"cs_base/cs61c/Lab/Lab02/#_3","title":"\u5e38\u89c1\u9677\u9631","text":"<ul> <li>\u5fd8\u8bb0\u5728clean\u76ee\u6807\u524d\u52a0<code>-</code>\u5ffd\u7565\u9519\u8bef</li> <li>\u5934\u6587\u4ef6\u4f9d\u8d56\u7f3a\u5931\u5bfc\u81f4\u4fee\u6539\u540e\u4e0d\u91cd\u65b0\u7f16\u8bd1</li> <li>\u8de8\u5e73\u53f0\u7f16\u8bd1\u65f6\u5de5\u5177\u94fe\u5dee\u5f02\uff08\u5982macOS\u9700\u8981dsymutil\uff09</li> </ul>"},{"location":"cs_base/cs61c/Lab/Lab02/#2","title":"2. \u4f4d\u64cd\u4f5c\u6838\u5fc3\u6280\u5de7","text":""},{"location":"cs_base/cs61c/Lab/Lab02/#_4","title":"\u4ee3\u7801\u4f18\u5316\u5206\u6790","text":"C<pre><code>// \u83b7\u53d6\u7b2cn\u4f4d\nunsigned get_bit(unsigned x, unsigned n) {\n    return (x &gt;&gt; n) &amp; 1;  // \u53f3\u79fb\u540e\u53d6\u6700\u540e\u4e00\u4f4d\n}\n\n// \u8bbe\u7f6e\u7b2cn\u4f4d\nvoid set_bit(unsigned *x, unsigned n, unsigned v) {\n    *x = (*x &amp; ~(1 &lt;&lt; n)) | (v &lt;&lt; n);  // \u7ecf\u5178\u4f4d\u64cd\u4f5c\u6a21\u5f0f\n}\n\n// \u7ffb\u8f6c\u4f4d\nvoid flip_bit(unsigned *x, unsigned n) {\n    *x ^= (1 &lt;&lt; n);  // \u66f4\u7b80\u6d01\u7684\u5f02\u6216\u5b9e\u73b0\n}\n</code></pre>"},{"location":"cs_base/cs61c/Lab/Lab02/#_5","title":"\u4f4d\u64cd\u4f5c\u8981\u70b9","text":"<ul> <li>\u63a9\u7801\u6784\u5efa\uff1a</li> <li>\u8bbe\u7f6e\u4f4d\uff1a<code>mask = 1 &lt;&lt; n</code></li> <li>\u6e05\u9664\u4f4d\uff1a<code>~mask</code></li> <li>\u590d\u5408\u64cd\u4f5c\uff1a</li> <li>\u8bbe\u7f6e\u4f4d\uff1a<code>|=</code></li> <li>\u6e05\u9664\u4f4d\uff1a<code>&amp;= ~mask</code></li> <li>\u7ffb\u8f6c\u4f4d\uff1a<code>^= mask</code></li> <li>\u4f4d\u79fb\u9677\u9631\uff1a</li> <li>\u65e0\u7b26\u53f7\u6570\u4fdd\u8bc1\u903b\u8f91\u79fb\u4f4d</li> <li>\u6709\u7b26\u53f7\u6570\u53f3\u79fb\u662f\u7b97\u672f\u79fb\u4f4d\uff08\u8865\u7b26\u53f7\u4f4d\uff09</li> </ul>"},{"location":"cs_base/cs61c/Lab/Lab02/#3","title":"3. \u7ebf\u6027\u53cd\u9988\u79fb\u4f4d\u5bc4\u5b58\u5668\u539f\u7406","text":""},{"location":"cs_base/cs61c/Lab/Lab02/#lfsr","title":"LFSR\u5b9e\u73b0\u5206\u6790","text":"C<pre><code>void lfsr_calculate(uint16_t *reg) {\n    unsigned MSB = (*reg &gt;&gt; 0) ^ (*reg &gt;&gt; 2) ^ (*reg &gt;&gt; 3) ^ (*reg &gt;&gt; 5);\n    *reg = (MSB &lt;&lt; 15) | (*reg &gt;&gt; 1);\n}\n</code></pre>"},{"location":"cs_base/cs61c/Lab/Lab02/#_6","title":"\u5173\u952e\u6982\u5ff5","text":"<ul> <li>\u53cd\u9988\u591a\u9879\u5f0f\uff1ax^16 + x^5 + x^3 + x^2 + 1</li> <li>\u6700\u5927\u957f\u5ea6\u5e8f\u5217\uff1a2^n -1 \u4e2a\u4e0d\u91cd\u590d\u72b6\u6001\uff08\u672c\u5b9e\u73b0\u4e3a65535\uff09</li> <li>\u5e94\u7528\u573a\u666f\uff1a</li> <li>\u4f2a\u968f\u673a\u6570\u751f\u6210</li> <li>\u52a0\u5bc6\u7b97\u6cd5</li> <li>\u901a\u4fe1\u7f16\u7801</li> </ul>"},{"location":"cs_base/cs61c/Lab/Lab02/#_7","title":"\u4e0d\u540c\u62bd\u5934\u4f4d\u7f6e\u6548\u679c","text":"\u62bd\u5934\u7ec4\u5408 \u5468\u671f\u957f\u5ea6 \u968f\u673a\u6027 (0,2,3,5) 65535 \u4f18 (0,1) \u77ed \u5dee"},{"location":"cs_base/cs61c/Lab/Lab02/#4","title":"4. \u52a8\u6001\u5185\u5b58\u7ba1\u7406\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"cs_base/cs61c/Lab/Lab02/#_8","title":"\u6b63\u786e\u5b9e\u73b0\u8981\u70b9","text":"C<pre><code>vector_t *vector_new() {\n    vector_t *retval = malloc(sizeof(vector_t));  // \u5206\u914d\u7ed3\u6784\u4f53\n    retval-&gt;data = malloc(sizeof(int));           // \u5206\u914d\u6570\u636e\u7a7a\u95f4\n    if (!retval || !retval-&gt;data) {\n        free(retval);  // \u5173\u952e\uff1a\u91ca\u653e\u53ef\u80fd\u5206\u914d\u7684\u90e8\u5206\u5185\u5b58\n        allocation_failed();\n    }\n    // ...\u521d\u59cb\u5316...\n}\n</code></pre>"},{"location":"cs_base/cs61c/Lab/Lab02/#_9","title":"\u5185\u5b58\u64cd\u4f5c\u5bf9\u6bd4","text":"\u9519\u8bef\u7c7b\u578b \u95ee\u9898 \u6b63\u786e\u505a\u6cd5 \u8fd4\u56de\u6808\u5730\u5740 \u60ac\u5782\u6307\u9488 malloc\u5806\u5185\u5b58 \u6d45\u62f7\u8d1d\u7ed3\u6784\u4f53 \u53cc\u91cd\u91ca\u653e \u6df1\u62f7\u8d1d\u6570\u636e \u5fd8\u8bb0\u91ca\u653e \u5185\u5b58\u6cc4\u6f0f \u914d\u5bf9free"},{"location":"cs_base/cs61c/Lab/Lab02/#realloc","title":"realloc\u4f7f\u7528\u6a21\u5f0f","text":"C<pre><code>void vector_set(...) {\n    if (loc &gt;= v-&gt;size) {\n        int *new_data = realloc(v-&gt;data, (loc+1)*sizeof(int));\n        if (!new_data) { /* \u5904\u7406\u5931\u8d25 */ }\n        v-&gt;data = new_data;\n        // \u521d\u59cb\u5316\u65b0\u589e\u5143\u7d20...\n    }\n}\n</code></pre>"},{"location":"cs_base/cs61c/Lecture/lecture07/","title":"CS61C Lecture 07: RISC-V intro","text":""},{"location":"cs_base/cs61c/Lecture/lecture07/#cs61c-lecture-07-risc-v-intro","title":"CS61C Lecture 07: RISC-V intro","text":"<p> \u7ea6 534 \u4e2a\u5b57  18 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>"},{"location":"cs_base/cs61c/Lecture/lecture07/#_1","title":"\u4e00\u3001\u8ba1\u7b97\u673a\u62bd\u8c61\u5c42\u6b21","text":"Text Only<pre><code>\u9ad8\u7ea7\u8bed\u8a00 \u2192 \u6c47\u7f16\u8bed\u8a00 \u2192 \u673a\u5668\u7801 \u2192 \u5fae\u67b6\u6784 \u2192 \u7269\u7406\u7535\u8def\n</code></pre> \u5173\u952e\u7279\u6027\uff1a\u6bcf\u4e00\u5c42\u9690\u85cf\u4e0b\u5c42\u5b9e\u73b0\u7ec6\u8282\uff0c\u6307\u4ee4\u96c6\u67b6\u6784\uff08ISA\uff09\u662f\u8f6f\u786c\u4ef6\u7684\u63a5\u53e3\u5951\u7ea6"},{"location":"cs_base/cs61c/Lecture/lecture07/#risc-v","title":"\u4e8c\u3001RISC-V \u6838\u5fc3\u4f18\u52bf","text":"<ul> <li>\u5f00\u6e90\u81ea\u7531\uff1aBSD\u534f\u8bae\u5141\u8bb8\u4efb\u610f\u4fee\u6539\u548c\u5546\u7528</li> <li>\u6a21\u5757\u5316\u8bbe\u8ba1\uff1a\u57fa\u7840\u6307\u4ee4\u96c6 + \u53ef\u6269\u5c55\u6a21\u5757\uff08I/M/A/F/D\u7b49\uff09</li> <li>RV32I\uff08\u57fa\u7840\u6574\u6570\u6307\u4ee4\u96c6\uff09</li> <li>M\uff08\u4e58\u9664\u6269\u5c55\uff09\u3001A\uff08\u539f\u5b50\u64cd\u4f5c\uff09\u3001F/D\uff08\u5355/\u53cc\u7cbe\u5ea6\u6d6e\u70b9\uff09</li> <li>\u7cbe\u7b80\u9ad8\u6548\uff1a\u5178\u578bRISC\u7279\u5f81\uff0c\u5bf9\u6bd4x86\uff08CISC\uff09\uff1a</li> <li>\u5b9a\u957f32\u4f4d\u6307\u4ee4\uff08RV32\uff09</li> <li>\u4ec5load/store\u8bbf\u95ee\u5185\u5b58</li> <li>32\u4e2a\u901a\u7528\u5bc4\u5b58\u5668</li> <li>\u5e94\u7528\u5e7f\u6cdb\uff1aIoT \u2192 \u8d85\u7b97\u7684\u5168\u751f\u6001\u8986\u76d6</li> </ul>"},{"location":"cs_base/cs61c/Lecture/lecture07/#_2","title":"\u4e09\u3001\u5bc4\u5b58\u5668\u7cfb\u7edf\u8be6\u89e3","text":"<ol> <li> <p>\u57fa\u7840\u914d\u7f6e\uff1a    - 32\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\uff08x0-x31\uff09    - x0\u7279\u6b8a\u5bc4\u5b58\u5668\uff1a\u786c\u8fde\u7ebf\u96f6\u503c\uff0c\u5199\u64cd\u4f5c\u65e0\u6548    - \u5bc4\u5b58\u5668\u5bbd\u5ea6\uff1aRV32\uff0832bit\uff09\u3001RV64\uff0864bit\uff09</p> </li> <li> <p>ABI \u522b\u540d\u89c4\u8303\uff1a</p> </li> </ol> \u5bc4\u5b58\u5668 \u522b\u540d \u7528\u9014 x0 zero \u6052\u96f6\u503c x1 ra \u8fd4\u56de\u5730\u5740 x2 sp \u6808\u6307\u9488 x5-x7 t0-t2 \u4e34\u65f6\u5bc4\u5b58\u5668 x8-x9 s0-s1 \u4fdd\u5b58\u5bc4\u5b58\u5668 <ol> <li>\u6838\u5fc3\u7279\u6027\uff1a    - \u65e0\u7c7b\u578b\u7cfb\u7edf\uff1a\u64cd\u4f5c\u51b3\u5b9a\u6570\u636e\u5904\u7406\u65b9\u5f0f\uff08\u7b26\u53f7\u6269\u5c55/\u8865\u7801\u8fd0\u7b97\uff09    - \u4f7f\u7528\u9650\u5236\uff1a\u9ad8\u9891\u8bbf\u95ee\u8981\u6c42\uff0c\u9700\u5408\u7406\u5206\u914d\u5bc4\u5b58\u5668\u8d44\u6e90</li> </ol>"},{"location":"cs_base/cs61c/Lecture/lecture07/#_3","title":"\u56db\u3001\u6307\u4ee4\u683c\u5f0f\u4e0e\u7c7b\u578b","text":""},{"location":"cs_base/cs61c/Lecture/lecture07/#1","title":"1. \u7b97\u672f\u6307\u4ee4","text":"GAS<pre><code>add  x1, x2, x3   # x1 = x2 + x3\uff08\u5bc4\u5b58\u5668-\u5bc4\u5b58\u5668\uff09\nsub  x4, x5, x6   # x4 = x5 - x6\naddi x7, x8, -20  # x7 = x8 + (-20)\uff08\u7acb\u5373\u6570\u51cf\u6cd5\u66ff\u4ee3\u65b9\u6848\uff09\n</code></pre> \u7acb\u5373\u6570\u7279\u6027\uff1a - 12\u4f4d\u6709\u7b26\u53f7\u6570\uff08\u8303\u56f4\uff1a-2048 ~ 2047\uff09 - \u65e0subi\u6307\u4ee4\uff0c\u8d1f\u6570\u52a0\u6cd5\u5b9e\u73b0\u51cf\u6cd5"},{"location":"cs_base/cs61c/Lecture/lecture07/#2","title":"2. \u5185\u5b58\u8bbf\u95ee\u6307\u4ee4","text":"GAS<pre><code>lw  x9, 40(x10)   # x9 = MEM[x10+40]\uff0832bit\u52a0\u8f7d\uff09\nsw  x11, 80(x12)  # MEM[x12+80] = x11\uff0832bit\u5b58\u50a8\uff09\n</code></pre> \u5173\u952e\u9650\u5236\uff1aRISC-V\u91c7\u7528Load-Store\u67b6\u6784\uff0c\u7b97\u672f\u6307\u4ee4\u65e0\u6cd5\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58"},{"location":"cs_base/cs61c/Lecture/lecture07/#3","title":"3. \u63a7\u5236\u6d41\u6307\u4ee4","text":"GAS<pre><code>beq x1, x2, label  # if x1==x2 \u2192 jump to label\njal ra, func       # \u8df3\u8f6c\u81f3func\uff0cra\u4fdd\u5b58\u8fd4\u56de\u5730\u5740\njalr x0, 0(x1)     # \u95f4\u63a5\u8df3\u8f6c\u5230x1\u5730\u5740\n</code></pre> \u5bfb\u5740\u7279\u6027\uff1a\u5206\u652f\u504f\u79fb\u91cf\u4e3a12\u4f4d\u6709\u7b26\u53f7\u6570 \u00d7 2\uff08\u5b57\u8282\u5bf9\u9f50\uff09"},{"location":"cs_base/cs61c/Lecture/lecture07/#_4","title":"\u4e94\u3001\u8bbe\u8ba1\u539f\u5219\u4e0e\u4f18\u5316\u6280\u5de7","text":"<ol> <li> <p>\u4f2a\u6307\u4ee4\u4f18\u5316\uff1a </p>GAS<pre><code>mv   x5, x6     \u2192 addi x5, x6, 0\nli   x7, 0x1234 \u2192 lui + addi \u7ec4\u5408\n</code></pre>    \u6c47\u7f16\u5668\u81ea\u52a8\u8f6c\u6362\u4f2a\u6307\u4ee4\u4e3a\u5408\u6cd5\u673a\u5668\u7801 </li> <li> <p>\u7acb\u5373\u6570\u6269\u5c55\u7b56\u7565\uff1a    - \u5c0f\u7acb\u5373\u6570\uff1a\u76f4\u63a5\u4f7f\u7528addi    - \u5927\u7acb\u5373\u6570\uff1alui\uff08\u52a0\u8f7d\u9ad820\u4f4d\uff09 + addi/ori\uff08\u8bbe\u7f6e\u4f4e12\u4f4d\uff09</p> </li> <li> <p>\u6027\u80fd\u8003\u91cf\uff1a    - 4GHz CPU \u2192 0.25ns/cycle\uff0c\u5bc4\u5b58\u5668\u8bbf\u95ee\u53ea\u97001\u5468\u671f    - \u5185\u5b58\u8bbf\u95ee\u9700\u6570\u5341\u5230\u6570\u767e\u5468\u671f\uff0c\u51f8\u663e\u5bc4\u5b58\u5668\u4f18\u5316\u91cd\u8981\u6027</p> </li> </ol>"},{"location":"cs_base/cs61c/Lecture/lecture07/#x86-vs-risc-v","title":"\u516d\u3001\u5bf9\u6bd4\u5b9e\u9a8c\uff08x86 vs RISC-V\uff09","text":"C<pre><code>// C\u4ee3\u7801\u793a\u4f8b\nint a = b + 10;\n</code></pre> <p>x86\u5b9e\u73b0\uff1a </p>GAS<pre><code>mov eax, [b_addr]  ; \u5185\u5b58\u52a0\u8f7d\nadd eax, 10        ; \u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\u503c\nmov [a_addr], eax\n</code></pre> <p>RISC-V\u5b9e\u73b0\uff1a </p>GAS<pre><code>lw  t0, b_addr    # \u663e\u5f0f\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668\naddi t0, t0, 10   # \u5bc4\u5b58\u5668\u64cd\u4f5c\nsw  t0, a_addr    # \u663e\u5f0f\u5b58\u50a8\u7ed3\u679c\n</code></pre> \u5173\u952e\u5dee\u5f02\uff1aRISC-V\u5f3a\u5236\u663e\u5f0f\u6570\u636e\u79fb\u52a8\uff0c\u63d0\u5347\u6d41\u6c34\u7ebf\u6548\u7387"},{"location":"cs_base/cs61c/Lecture/lecture08/","title":"CS61C Lecture08: RISC-V lw, sw, Decision 1","text":""},{"location":"cs_base/cs61c/Lecture/lecture08/#cs61c-lecture08-risc-v-lw-sw-decision-1","title":"CS61C Lecture08: RISC-V lw, sw, Decision 1","text":"<p> \u7ea6 724 \u4e2a\u5b57  23 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"cs_base/cs61c/Lecture/lecture08/#risc-v","title":"\u4e00\u3001RISC-V \u5185\u5b58\u64cd\u4f5c\u6307\u4ee4","text":""},{"location":"cs_base/cs61c/Lecture/lecture08/#1","title":"1. \u5bc4\u5b58\u5668\u4e0e\u5185\u5b58\u7279\u6027","text":"<ul> <li>32\u4e2a\u5bc4\u5b58\u5668\uff08x0-x31\uff09\u901f\u5ea6\u6bd4\u5185\u5b58\u5feb\u7ea650\u500d</li> <li>\u7279\u6b8a\u7528\u9014\u5bc4\u5b58\u5668\uff1a</li> <li>x0 (zero): \u6052\u4e3a0</li> <li>sp (x2): \u6808\u6307\u9488</li> <li>ra (x1): \u8fd4\u56de\u5730\u5740</li> <li>a0-a7 (x10-x17): \u51fd\u6570\u53c2\u6570/\u8fd4\u56de\u503c</li> <li>s0-s11 (x8-x9, x18-x27): \u4fdd\u5b58\u5bc4\u5b58\u5668</li> <li>t0-t6 (x5-x7, x28-x31): \u4e34\u65f6\u5bc4\u5b58\u5668</li> </ul>"},{"location":"cs_base/cs61c/Lecture/lecture08/#2","title":"2. \u5185\u5b58\u8bbf\u95ee\u6307\u4ee4","text":"\u6307\u4ee4 \u683c\u5f0f \u529f\u80fd \u7279\u70b9 lw lw rd, offset(rs1) \u4ece\u5185\u5b58\u52a0\u8f7d32\u4f4d\u5b57 \u504f\u79fb\u91cf\u5fc5\u987b\u662f4\u7684\u500d\u6570 sw sw rs2, offset(rs1) \u5b58\u50a832\u4f4d\u5b57\u5230\u5185\u5b58 \u6570\u636e\u6d41\u5411\uff1a\u5bc4\u5b58\u5668 \u2192 \u5185\u5b58 lb lb rd, offset(rs1) \u52a0\u8f7d\u5b57\u8282\uff08\u7b26\u53f7\u6269\u5c55\uff09 \u7528\u4e8echar\u7c7b\u578b\u5904\u7406 lbu lbu rd, offset(rs1) \u52a0\u8f7d\u5b57\u8282\uff08\u96f6\u6269\u5c55\uff09 \u5904\u7406\u65e0\u7b26\u53f7\u5b57\u7b26 sb sb rs2, offset(rs1) \u5b58\u50a8\u5b57\u8282 \u4ec5\u5b58\u50a8\u4f4e8\u4f4d <p>\u5185\u5b58\u5bf9\u9f50\u539f\u5219\uff1a - 32\u4f4d\u5b57\u5fc5\u987b\u4f4d\u4e8e4\u5b57\u8282\u5bf9\u9f50\u5730\u5740 - \u793a\u4f8b\uff1aint\u6570\u7ec4\u8bbf\u95ee\u65f6\uff0c\u5730\u5740\u504f\u79fb\u91cf\u603b\u662f4\u7684\u500d\u6570\uff08\u5047\u8bbeint\u4e3a4\u5b57\u8282\uff09</p>"},{"location":"cs_base/cs61c/Lecture/lecture08/#_1","title":"\u4e8c\u3001\u7acb\u5373\u6570\u64cd\u4f5c","text":""},{"location":"cs_base/cs61c/Lecture/lecture08/#1-addi","title":"1. addi \u6307\u4ee4","text":"Text Only<pre><code>addi rd, rs1, imm  # rd = rs1 + sign_extend(imm)\n</code></pre> - \u7acb\u5373\u6570\u8303\u56f4\uff1a12\u4f4d\u6709\u7b26\u53f7\u6570\uff08-2048 ~ 2047\uff09 - \u6269\u5c55\u673a\u5236\uff1a\u7b26\u53f7\u6269\u5c55\u523032\u4f4d"},{"location":"cs_base/cs61c/Lecture/lecture08/#2_1","title":"2. \u5927\u7acb\u5373\u6570\u5904\u7406","text":"<ul> <li>\u4f7f\u7528lui\uff08Load Upper Immediate\uff09\u6307\u4ee4\u52a0\u8f7d\u9ad820\u4f4d\uff1a Text Only<pre><code>lui x5, 0x12345    # x5 = 0x12345 &lt;&lt; 12\naddi x5, x5, 0x678 # x5 = 0x12345678\n</code></pre></li> </ul>"},{"location":"cs_base/cs61c/Lecture/lecture08/#_2","title":"\u4e09\u3001\u6761\u4ef6\u5206\u652f\u6307\u4ee4","text":""},{"location":"cs_base/cs61c/Lecture/lecture08/#1_1","title":"1. \u57fa\u7840\u5206\u652f\u6307\u4ee4","text":"\u6307\u4ee4 \u529f\u80fd \u4f2a\u4ee3\u7801\u8868\u793a beq \u76f8\u7b49\u65f6\u8df3\u8f6c if (rs1 == rs2) PC += offset bne \u4e0d\u7b49\u65f6\u8df3\u8f6c if (rs1 != rs2) PC += offset blt \u6709\u7b26\u53f7\u5c0f\u4e8e\u65f6\u8df3\u8f6c if (rs1 &lt; rs2) PC += offset bltu \u65e0\u7b26\u53f7\u5c0f\u4e8e\u65f6\u8df3\u8f6c if (rs1 &lt; rs2) PC += offset bge \u6709\u7b26\u53f7\u5927\u4e8e\u7b49\u4e8e\u65f6\u8df3\u8f6c if (rs1 &gt;= rs2) PC += offset"},{"location":"cs_base/cs61c/Lecture/lecture08/#2_2","title":"2. \u5206\u652f\u6307\u4ee4\u7279\u70b9","text":"<ul> <li>\u5730\u5740\u8303\u56f4\u9650\u5236\uff1a\u00b14KB\u8303\u56f4\uff0812\u4f4d\u7acb\u5373\u6570 \u00d7 4\u5b57\u8282\uff09</li> <li>\u5ef6\u8fdf\u69fd\uff1aRISC-V\u65e0\u5ef6\u8fdf\u69fd\uff0c\u76f4\u63a5\u987a\u5e8f\u6267\u884c</li> </ul>"},{"location":"cs_base/cs61c/Lecture/lecture08/#3","title":"3. \u6761\u4ef6\u5224\u65ad\u6a21\u5f0f","text":"<p>if-else\u7ed3\u6784\u793a\u4f8b\uff1a </p>C<pre><code>if (i == j) { ... } else { ... }\n</code></pre> Text Only<pre><code>    bne x13, x14, Else  # \u76f8\u53cd\u6761\u4ef6\u5224\u65ad\n    # if-block\n    j Exit\nElse:\n    # else-block\nExit:\n</code></pre>"},{"location":"cs_base/cs61c/Lecture/lecture08/#_3","title":"\u56db\u3001\u5185\u5b58\u5c42\u6b21\u7ed3\u6784\u4e0e\u4f18\u5316","text":""},{"location":"cs_base/cs61c/Lecture/lecture08/#1_2","title":"1. \u5b58\u50a8\u6280\u672f\u5bf9\u6bd4","text":"\u7c7b\u578b \u901f\u5ea6 \u5bb9\u91cf \u7528\u9014 SRAM \u6700\u5feb \u6700\u5c0f CPU\u7f13\u5b58 DDR SDRAM \u4e2d\u7b49 \u5927 \u4e3b\u5185\u5b58 HBM \u8f83\u9ad8 \u8f83\u5927 GPU/\u9ad8\u6027\u80fd\u8ba1\u7b97"},{"location":"cs_base/cs61c/Lecture/lecture08/#2_3","title":"2. \u5c40\u90e8\u6027\u539f\u7406","text":"<ul> <li>\u65f6\u95f4\u5c40\u90e8\u6027\uff1a\u6700\u8fd1\u8bbf\u95ee\u7684\u6570\u636e\u53ef\u80fd\u518d\u6b21\u88ab\u8bbf\u95ee</li> <li>\u7a7a\u95f4\u5c40\u90e8\u6027\uff1a\u76f8\u90bb\u5185\u5b58\u4f4d\u7f6e\u53ef\u80fd\u88ab\u8bbf\u95ee</li> <li>\u7f16\u7a0b\u5b9e\u8df5\uff1a\u4f18\u5316\u6570\u636e\u8bbf\u95ee\u6a21\u5f0f\uff08\u5982\u884c\u4f18\u5148\u904d\u5386\u6570\u7ec4\uff09</li> </ul>"},{"location":"cs_base/cs61c/Lecture/lecture08/#_4","title":"\u4e94\u3001\u7f16\u8bd1\u5668\u4f18\u5316\u7b56\u7565","text":""},{"location":"cs_base/cs61c/Lecture/lecture08/#1_3","title":"1. \u5bc4\u5b58\u5668\u5206\u914d\u4f18\u5316","text":"<ul> <li>\u4f18\u5148\u4f7f\u7528\u4e34\u65f6\u5bc4\u5b58\u5668\uff08t0-t6\uff09</li> <li>\u51cf\u5c11\u4fdd\u5b58\u5bc4\u5b58\u5668\uff08s0-s11\uff09\u7684\u6ea2\u51fa\u64cd\u4f5c</li> <li>\u5faa\u73af\u5c55\u5f00\u51cf\u5c11\u5206\u652f\u6307\u4ee4</li> </ul>"},{"location":"cs_base/cs61c/Lecture/lecture08/#2_4","title":"2. \u5178\u578b\u4f18\u5316\u6848\u4f8b","text":"C<pre><code>// \u539f\u59cb\u4ee3\u7801\nfor (int i=0; i&lt;100; i++) {\n    sum += array[i];\n}\n\n// \u4f18\u5316\u540e\u6c47\u7f16\u53ef\u80fd\u4f7f\u7528\uff1a\n// 1. \u6307\u9488\u7b97\u672f\u66ff\u4ee3\u6570\u7ec4\u7d22\u5f15\n// 2. \u5faa\u73af\u5c55\u5f004\u6b21\u51cf\u5c11\u5206\u652f\u5224\u65ad\n// 3. \u5bc4\u5b58\u5668\u4fdd\u7559sum\u907f\u514d\u5185\u5b58\u8bbf\u95ee\n</code></pre>"},{"location":"cs_base/cs61c/Lecture/lecture08/#_5","title":"\u516d\u3001\u91cd\u70b9\u6982\u5ff5\u5bf9\u6bd4","text":"\u6982\u5ff5 \u6709\u7b26\u53f7\u5904\u7406 \u65e0\u7b26\u53f7\u5904\u7406 \u52a0\u8f7d\u5b57\u8282 lb\uff08\u7b26\u53f7\u6269\u5c55\uff09 lbu\uff08\u96f6\u6269\u5c55\uff09 \u6bd4\u8f83\u6307\u4ee4 blt/bge bltu/bgeu \u6ea2\u51fa\u5904\u7406 \u8865\u7801\u8fd0\u7b97 \u6a21\u8fd0\u7b97"},{"location":"cs_base/cs61c/Lecture/lecture08/#_6","title":"\u4e03\u3001\u5e38\u89c1\u95ee\u9898\u89e3\u6790","text":"<ol> <li> <p>\u4e3a\u4ec0\u4e48\u504f\u79fb\u91cf\u8981\u662f4\u7684\u500d\u6570\uff1f    - RISC-V\u91c7\u752832\u4f4d\u5b57\u957f\uff0c4\u5b57\u8282\u5bf9\u9f50\u63d0\u9ad8\u8bbf\u95ee\u6548\u7387    - \u975e\u5bf9\u9f50\u8bbf\u95ee\u9700\u8981\u591a\u6b21\u5185\u5b58\u64cd\u4f5c</p> </li> <li> <p>\u5982\u4f55\u5904\u7406\u8d85\u8fc712\u4f4d\u7684\u7acb\u5373\u6570\uff1f    - \u4f7f\u7528lui\u52a0\u8f7d\u9ad820\u4f4d    - \u914d\u5408addi/add\u5904\u7406\u4f4e12\u4f4d    - \u793a\u4f8b\uff1a\u52a0\u8f7d0x12345678 \u2192 lui + addi</p> </li> <li> <p>\u5982\u4f55\u5b9e\u73b0switch\u8bed\u53e5\uff1f    - \u4f7f\u7528\u8df3\u8f6c\u8868\uff08Jump Table\uff09    - \u901a\u8fc7slli\u8ba1\u7b97\u504f\u79fb\u91cf </p>Text Only<pre><code>slli x10, x5, 2   # \u7d22\u5f15\u00d74\uff08\u6bcf\u6761\u6307\u4ee44\u5b57\u8282\uff09\nadd x10, x10, x6   # x6\u5b58\u50a8\u8df3\u8f6c\u8868\u57fa\u5740\nlw x11, 0(x10)     # \u83b7\u53d6\u76ee\u6807\u5730\u5740\njr x11             # \u8df3\u8f6c\n</code></pre> </li> </ol>"},{"location":"cs_base/cs61c/Lecture/lecture09/","title":"CS61C Lecture09: RISC-V \u4f4d\u64cd\u4f5c\u4e0e\u51fd\u6570\u8c03\u7528","text":""},{"location":"cs_base/cs61c/Lecture/lecture09/#cs61c-lecture09-risc-v","title":"CS61C Lecture09: RISC-V \u4f4d\u64cd\u4f5c\u4e0e\u51fd\u6570\u8c03\u7528","text":"<p> \u7ea6 752 \u4e2a\u5b57  47 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"cs_base/cs61c/Lecture/lecture09/#_1","title":"\u4e00\u3001\u4f4d\u64cd\u4f5c\u6307\u4ee4\u8be6\u89e3","text":""},{"location":"cs_base/cs61c/Lecture/lecture09/#1","title":"1. \u4f4d\u63a9\u7801\u64cd\u4f5c","text":"Text Only<pre><code>andi x5, x6, 0xFF        # \u53d6\u6700\u4f4e\u5b57\u8282\uff08x5 = x6 &amp; 0x000000FF\uff09\nandi x7, x8, 0xFF000000  # \u53d6\u6700\u9ad8\u5b57\u8282\uff08x7 = x8 &amp; 0xFF000000\uff09\n</code></pre> \u63a9\u7801\u5e94\u7528\u573a\u666f\uff1a - \u63d0\u53d6\u989c\u8272\u901a\u9053\uff08ARGB\u683c\u5f0f\uff09 - \u7f51\u7edc\u534f\u8bae\u5934\u89e3\u6790 - \u5b57\u7b26\u7f16\u7801\u5904\u7406"},{"location":"cs_base/cs61c/Lecture/lecture09/#2","title":"2. \u903b\u8f91\u8fd0\u7b97\u6280\u5de7","text":"\u64cd\u4f5c \u5b9e\u73b0\u65b9\u5f0f \u793a\u4f8b \u6309\u4f4d\u53d6\u53cd XOR\u51681\u63a9\u7801 <code>xori x5, x6, 0xFFFFFFFF</code> \u6e05\u9664\u7279\u5b9a\u4f4d AND\u53d6\u53cd\u63a9\u7801 <code>andi x5, x6, 0xFFFFF0FF</code>\uff08\u6e05\u9664\u7b2c8-11\u4f4d\uff09 \u8bbe\u7f6e\u7279\u5b9a\u4f4d OR\u7f6e\u4f4d\u63a9\u7801 <code>ori x5, x6, 0x00000F00</code>"},{"location":"cs_base/cs61c/Lecture/lecture09/#3","title":"3. \u79fb\u4f4d\u6307\u4ee4\u5bf9\u6bd4","text":"\u6307\u4ee4 \u683c\u5f0f \u884c\u4e3a \u7528\u9014 sll sll rd, rs1, rs2 \u903b\u8f91\u5de6\u79fb\uff08\u88650\uff09 \u5feb\u901f\u4e58\u6cd5\uff082^n\u500d\uff09 slli slli rd, rs1, imm \u7acb\u5373\u6570\u903b\u8f91\u5de6\u79fb srl srl rd, rs1, rs2 \u903b\u8f91\u53f3\u79fb\uff08\u88650\uff09 \u65e0\u7b26\u53f7\u6570\u9664\u6cd5 sra sra rd, rs1, rs2 \u7b97\u672f\u53f3\u79fb\uff08\u7b26\u53f7\u6269\u5c55\uff09 \u6709\u7b26\u53f7\u6570\u9664\u6cd5 srai srai rd, rs1, imm \u7acb\u5373\u6570\u7b97\u672f\u53f3\u79fb <p>\u793a\u4f8b\uff1a </p>Text Only<pre><code>slli x5, x6, 3    # x5 = x6 * 8\nsrai x7, x8, 2    # x7 = x8 / 4\uff08\u6709\u7b26\u53f7\u6570\uff09\n</code></pre>"},{"location":"cs_base/cs61c/Lecture/lecture09/#_2","title":"\u4e8c\u3001\u7a0b\u5e8f\u63a7\u5236\u6838\u5fc3\u673a\u5236","text":""},{"location":"cs_base/cs61c/Lecture/lecture09/#1-pc","title":"1. \u7a0b\u5e8f\u8ba1\u6570\u5668\uff08PC\uff09","text":"<ul> <li>32\u4f4d\u5bc4\u5b58\u5668\uff0c\u5b58\u50a8\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5b57\u8282\u5730\u5740</li> <li>\u9ed8\u8ba4\u884c\u4e3a\uff1aPC += 4\uff08\u987a\u5e8f\u6267\u884c\uff09</li> <li>\u8df3\u8f6c\u65f6\uff1aPC = target_address</li> </ul>"},{"location":"cs_base/cs61c/Lecture/lecture09/#2_1","title":"2. \u5bc4\u5b58\u5668\u522b\u540d\u8868","text":"\u7269\u7406\u5bc4\u5b58\u5668 \u7b26\u53f7\u540d\u79f0 \u7528\u9014 x0 zero \u5e38\u65700 x1 ra \u8fd4\u56de\u5730\u5740 x2 sp \u6808\u6307\u9488 x10-x17 a0-a7 \u53c2\u6570/\u8fd4\u56de\u503c x5-x7, x28-x31 t0-t6 \u4e34\u65f6\u5bc4\u5b58\u5668"},{"location":"cs_base/cs61c/Lecture/lecture09/#_3","title":"\u4e09\u3001\u4f2a\u6307\u4ee4\u89e3\u6790","text":"\u4f2a\u6307\u4ee4 \u5b9e\u9645\u6307\u4ee4 \u529f\u80fd mv rd, rs addi rd, rs, 0 \u5bc4\u5b58\u5668\u590d\u5236 li rd, imm \u7ec4\u5408\u6307\u4ee4\uff08\u53ef\u80fd\u5305\u542blui+addi\uff09 \u52a0\u8f7d\u7acb\u5373\u6570 nop addi x0, x0, 0 \u7a7a\u64cd\u4f5c\uff08\u7528\u4e8e\u6d41\u6c34\u7ebf\u63a7\u5236\uff09 j label jal x0, label \u65e0\u6761\u4ef6\u8df3\u8f6c ret jalr x0, 0(x1) \u51fd\u6570\u8fd4\u56de <p>nop\u7684\u4e09\u5927\u4f5c\u7528\uff1a 1. \u586b\u5145\u6d41\u6c34\u7ebf\u6c14\u6ce1 2. \u5bf9\u9f50\u6307\u4ee4\u5730\u5740 3. \u8f6f\u4ef6\u5ef6\u65f6\uff08\u4e0d\u63a8\u8350\uff09</p>"},{"location":"cs_base/cs61c/Lecture/lecture09/#_4","title":"\u56db\u3001\u51fd\u6570\u8c03\u7528\u673a\u5236","text":""},{"location":"cs_base/cs61c/Lecture/lecture09/#1_1","title":"1. \u51fd\u6570\u8c03\u7528\u516d\u6b65\u66f2","text":"<ol> <li>\u53c2\u6570\u4f20\u9012\uff1aa0-a7\u5bc4\u5b58\u5668\uff08\u524d8\u4e2a\u53c2\u6570\uff09</li> <li>\u63a7\u5236\u8f6c\u79fb\uff1ajal\u6307\u4ee4\uff08\u4fdd\u5b58\u8fd4\u56de\u5730\u5740\u5230ra\uff09</li> <li>\u6808\u5e27\u5206\u914d\uff1a<code>addi sp, sp, -framesize</code></li> <li>\u5c40\u90e8\u5b58\u50a8\uff1a\u4fdd\u5b58\u88ab\u8c03\u7528\u8005\u4fdd\u5b58\u5bc4\u5b58\u5668\uff08s0-s11\uff09</li> <li>\u8fd4\u56de\u503c\u8bbe\u7f6e\uff1aa0/a1\u5bc4\u5b58\u5668</li> <li>\u8d44\u6e90\u91ca\u653e\uff1a<code>addi sp, sp, framesize</code> + ret</li> </ol>"},{"location":"cs_base/cs61c/Lecture/lecture09/#2_2","title":"2. \u5173\u952e\u8df3\u8f6c\u6307\u4ee4\u5bf9\u6bd4","text":"\u6307\u4ee4 \u683c\u5f0f \u884c\u4e3a \u7528\u9014 j jal x0, offset PC = PC + offset \u77ed\u8ddd\u79bb\u8df3\u8f6c jal jal rd, offset rd=PC+4; PC=PC+offset \u51fd\u6570\u8c03\u7528 jalr jalr rd, offset(rs1) rd=PC+4; PC=rs1+offset \u95f4\u63a5\u8df3\u8f6c jr jalr x0, 0(rs1) PC = rs1 \u5bc4\u5b58\u5668\u8df3\u8f6c <p>\u8c03\u7528\u793a\u4f8b\uff1a </p>Text Only<pre><code># \u8c03\u7528\u51fd\u6570func\n    addi a0, x0, 5     # \u8bbe\u7f6e\u53c2\u6570\n    jal ra, func        # \u8df3\u8f6c\u5e76\u4fdd\u5b58\u8fd4\u56de\u5730\u5740\n    ...                 # \u540e\u7eed\u4ee3\u7801\n\nfunc:\n    addi sp, sp, -16    # \u5206\u914d\u6808\u7a7a\u95f4\n    sw ra, 12(sp)       # \u4fdd\u5b58\u8fd4\u56de\u5730\u5740\n    ...                 # \u51fd\u6570\u4f53\n    lw ra, 12(sp)      # \u6062\u590d\u8fd4\u56de\u5730\u5740\n    addi sp, sp, 16     # \u91ca\u653e\u6808\u7a7a\u95f4\n    ret                 # \u8fd4\u56de\n</code></pre>"},{"location":"cs_base/cs61c/Lecture/lecture09/#_5","title":"\u4e94\u3001\u51fd\u6570\u8c03\u7528\u89c4\u8303","text":""},{"location":"cs_base/cs61c/Lecture/lecture09/#1_2","title":"1. \u5bc4\u5b58\u5668\u4fdd\u5b58\u89c4\u5219","text":"\u5bc4\u5b58\u5668\u7c7b\u578b \u4fdd\u5b58\u8d23\u4efb \u5bc4\u5b58\u5668\u5217\u8868 \u8c03\u7528\u8005\u4fdd\u5b58 \u8c03\u7528\u8005\u8d1f\u8d23\u4fdd\u5b58 t0-t6, a0-a7 \u88ab\u8c03\u7528\u8005\u4fdd\u5b58 \u88ab\u8c03\u7528\u8005\u8d1f\u8d23\u4fdd\u5b58 s0-s11, ra"},{"location":"cs_base/cs61c/Lecture/lecture09/#2_3","title":"2. \u6808\u5e27\u7ed3\u6784\u793a\u4f8b","text":"Text Only<pre><code>High Address\n|----------------|\n| \u4fdd\u5b58\u7684s1       | &lt;- sp + 24\n|----------------|\n| \u4fdd\u5b58\u7684s0       | &lt;- sp + 20\n|----------------|\n| \u4fdd\u5b58\u7684ra       | &lt;- sp + 16\n|----------------|\n| \u5c40\u90e8\u53d8\u91cf2      | &lt;- sp + 12\n|----------------|\n| \u5c40\u90e8\u53d8\u91cf1      | &lt;- sp + 8\n|----------------|\n| \u53c2\u6570\u6ea2\u51fa\u533a     | &lt;- sp + 4\n|----------------|\n| \u5f53\u524d\u6808\u5e27       | &lt;- sp\nLow Address\n</code></pre>"},{"location":"cs_base/cs61c/Lecture/lecture09/#_6","title":"\u516d\u3001\u9ad8\u7ea7\u7f16\u7a0b\u6280\u5de7","text":""},{"location":"cs_base/cs61c/Lecture/lecture09/#1_3","title":"1. \u5c3e\u8c03\u7528\u4f18\u5316","text":"Text Only<pre><code># \u666e\u901a\u9012\u5f52\u8c03\u7528\nfactorial:\n    addi sp, sp, -8\n    sw ra, 4(sp)\n    ...\n    jal factorial       # \u4ea7\u751f\u65b0\u6808\u5e27\n\n# \u5c3e\u9012\u5f52\u4f18\u5316\u7248\nfactorial_tail:\n    ...\n    mv a0, t0          # \u76f4\u63a5\u4fee\u6539\u53c2\u6570\n    j factorial_tail    # \u590d\u7528\u5f53\u524d\u6808\u5e27\n</code></pre>"},{"location":"cs_base/cs61c/Lecture/lecture09/#2_4","title":"2. \u591a\u7cbe\u5ea6\u8fd0\u7b97","text":"Text Only<pre><code># 64\u4f4d\u52a0\u6cd5\uff08x5:x4 = x5:x4 + x7:x6\uff09\nadd x4, x4, x6         # \u4f4e32\u4f4d\u76f8\u52a0\nsltu t0, x4, x6        # \u68c0\u6d4b\u8fdb\u4f4d\nadd x5, x5, x7         # \u9ad832\u4f4d\u76f8\u52a0\nadd x5, x5, t0         # \u52a0\u4e0a\u8fdb\u4f4d\n</code></pre>"},{"location":"cs_base/cs61c/Lecture/lecture09/#_7","title":"\u4e03\u3001\u5e38\u89c1\u9519\u8bef\u5206\u6790","text":"<ol> <li> <p>\u6808\u4e0d\u5e73\u8861\uff1a </p>Text Only<pre><code># \u9519\u8bef\u793a\u4f8b\nfunc:\n    addi sp, sp, -12\n    ... \n    ret  # \u5fd8\u8bb0\u6062\u590dsp!\n</code></pre>    \u540e\u679c\uff1a\u540e\u7eed\u51fd\u6570\u8c03\u7528\u6808\u635f\u574f </li> <li> <p>\u672a\u4fdd\u5b58\u8c03\u7528\u8005\u4fdd\u5b58\u5bc4\u5b58\u5668\uff1a </p>Text Only<pre><code># \u9519\u8bef\u793a\u4f8b\ncaller:\n    mv t0, a0\n    jal func\n    add a0, t0, a0  # t0\u53ef\u80fd\u88abfunc\u4fee\u6539\n</code></pre>    \u6b63\u786e\u505a\u6cd5\uff1a\u8c03\u7528\u524d\u4fdd\u5b58t0\u5230\u6808\u4e2d </li> <li> <p>\u9519\u8bef\u4f7f\u7528ra\u5bc4\u5b58\u5668\uff1a </p>Text Only<pre><code># \u9519\u8bef\u793a\u4f8b\nfunc:\n    jal helper    # \u8986\u76d6ra!\n    ret           # \u8fd4\u56de\u5730\u5740\u4e22\u5931\n</code></pre>    \u6b63\u786e\u505a\u6cd5\uff1a\u5d4c\u5957\u8c03\u7528\u524d\u4fdd\u5b58ra\u5230\u6808\u4e2d </li> </ol>"},{"location":"cs_base/cs61c/Lecture/lecture10/","title":"CS61C Lecture 10 \u51fd\u6570\u8c03\u7528\u4e0e\u5185\u5b58\u7ba1\u7406","text":""},{"location":"cs_base/cs61c/Lecture/lecture10/#cs61c-lecture-10","title":"CS61C Lecture 10 \u51fd\u6570\u8c03\u7528\u4e0e\u5185\u5b58\u7ba1\u7406","text":"<p> \u7ea6 1227 \u4e2a\u5b57  83 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p>"},{"location":"cs_base/cs61c/Lecture/lecture10/#risc-v","title":"\u4e00\u3001RISC-V\u51fd\u6570\u8c03\u7528\u6838\u5fc3\u673a\u5236","text":""},{"location":"cs_base/cs61c/Lecture/lecture10/#1","title":"1. \u5bc4\u5b58\u5668\u4fdd\u5b58\u7b56\u7565","text":"<ul> <li>Caller-saved\u5bc4\u5b58\u5668 (t0-t6)   \u8c03\u7528\u51fd\u6570\u524d\u7531caller\u4fdd\u5b58\uff08\u5982\u5c06\u53c2\u6570\u5b58\u5165a0-a7\uff09\uff0c\u53ef\u80fd\u88abcallee\u8986\u76d6</li> <li>Callee-saved\u5bc4\u5b58\u5668 (s0-s11)   \u88ab\u8c03\u51fd\u6570\u82e5\u9700\u8981\u4f7f\u7528\uff0c\u5fc5\u987b\u4fdd\u5b58\u539f\u59cb\u503c\u5e76\u5728\u8fd4\u56de\u524d\u6062\u590d</li> <li>\u7279\u6b8a\u5bc4\u5b58\u5668   ra (x1)\uff1a\u4fdd\u5b58\u8fd4\u56de\u5730\u5740   sp (x2)\uff1a\u6808\u6307\u9488   fp (x8)\uff1a\u5e27\u6307\u9488\uff08\u53ef\u9009\uff09</li> </ul>"},{"location":"cs_base/cs61c/Lecture/lecture10/#2-stack-frame","title":"2. \u5806\u6808\u5e27\uff08Stack Frame\uff09\u7ed3\u6784","text":"\u5185\u5b58\u533a\u57df \u5185\u5bb9\u793a\u4f8b \u5927\u5c0f \u9ad8\u5730\u5740 \u2192 Caller\u7684\u4fdd\u5b58\u5bc4\u5b58\u5668 \u53d8\u957f \u2193 \u5c40\u90e8\u53d8\u91cf \u53d8\u957f \u8fd4\u56de\u5730\u5740 (ra) 8\u5b57\u8282 \u65e7\u5e27\u6307\u9488 (fp) 8\u5b57\u8282 sp \u2192 \u53c2\u6570\u7a7a\u95f4\uff08\u9700\u8981\u65f6\uff09 \u53d8\u957f <p>\u5178\u578b\u64cd\u4f5c\u793a\u4f8b\uff1a </p>Text Only<pre><code>func:\n    addi sp, sp, -32     # \u5206\u914d32\u5b57\u8282\u6808\u7a7a\u95f4\n    sd ra, 24(sp)        # \u4fdd\u5b58\u8fd4\u56de\u5730\u5740\n    sd s0, 16(sp)       # \u4fdd\u5b58callee-saved\u5bc4\u5b58\u5668\n    # ... \u51fd\u6570\u4f53 ...\n    ld s0, 16(sp)       # \u6062\u590d\u5bc4\u5b58\u5668\n    ld ra, 24(sp)\n    addi sp, sp, 32      # \u91ca\u653e\u6808\u7a7a\u95f4\n    jr ra\n</code></pre>"},{"location":"cs_base/cs61c/Lecture/lecture10/#_1","title":"\u4e8c\u3001\u5185\u5b58\u7ba1\u7406\u6df1\u5ea6\u89e3\u6790","text":""},{"location":"cs_base/cs61c/Lecture/lecture10/#1_1","title":"1. \u4e09\u5927\u5185\u5b58\u533a\u57df\u5bf9\u6bd4","text":"\u533a\u57df \u589e\u957f\u65b9\u5411 \u5b58\u50a8\u5185\u5bb9 \u7ba1\u7406\u65b9\u5f0f \u6808 \u5411\u4e0b \u51fd\u6570\u8c03\u7528\u8bb0\u5f55/\u5c40\u90e8\u53d8\u91cf \u81ea\u52a8 \u5806 \u5411\u4e0a \u52a8\u6001\u5206\u914d\u5185\u5b58(malloc/new) \u624b\u52a8/GC \u9759\u6001\u533a - \u5168\u5c40\u53d8\u91cf/static\u53d8\u91cf/\u5b57\u7b26\u4e32\u5e38\u91cf \u7f16\u8bd1\u5668 ### 2. \u5185\u5b58\u5bf9\u9f50\u89c4\u8303 - 16\u5b57\u8282\u5bf9\u9f50\u539f\u5219\uff1aRISC-V\u8981\u6c42\u6240\u6709\u5185\u5b58\u8bbf\u95ee\u5730\u5740\u5fc5\u987b\u662f\u6570\u636e\u5927\u5c0f\u7684\u6574\u6570\u500d\uff08\u59828\u5b57\u8282\u6570\u636e\u97008\u5b57\u8282\u5bf9\u9f50\uff09 - \u5178\u578b\u5bf9\u9f50\u9519\u8bef\u793a\u4f8b\uff1a C<pre><code>struct BadAlign {\n    char c;     // 1 byte\n    int i;      // 4 bytes (\u9700\u89814\u5b57\u8282\u5bf9\u9f50)\n};  // \u5b9e\u9645\u5360\u75288 bytes\uff08\u5b58\u57283\u5b57\u8282\u586b\u5145\uff09\n</code></pre>"},{"location":"cs_base/cs61c/Lecture/lecture10/#_2","title":"\u4e09\u3001\u5173\u952e\u6982\u5ff5\u62d3\u5c55","text":""},{"location":"cs_base/cs61c/Lecture/lecture10/#1-procedure-call-standard","title":"1. \u8fc7\u7a0b\u8c03\u7528\u6807\u51c6\uff08Procedure Call Standard\uff09","text":"<ul> <li>\u53c2\u6570\u4f20\u9012\u89c4\u5219\uff1a</li> <li>\u524d8\u4e2a\u53c2\u6570\u901a\u8fc7a0-a7\u4f20\u9012</li> <li>\u8d85\u8fc78\u4e2a\u53c2\u6570\u4f7f\u7528\u6808\u4f20\u9012\uff08\u4ece\u53f3\u5411\u5de6\u538b\u6808\uff09</li> <li>\u8fd4\u56de\u503c\u59cb\u7ec8\u5b58\u653e\u5728a0/a1\u5bc4\u5b58\u5668</li> </ul>"},{"location":"cs_base/cs61c/Lecture/lecture10/#2","title":"2. \u5806\u6808\u64cd\u4f5c\u4f18\u5316\u6280\u5de7","text":"<ul> <li>Leaf Function\u4f18\u5316\uff1a\u4e0d\u8c03\u7528\u5176\u4ed6\u51fd\u6570\u7684\u6700\u5e95\u5c42\u51fd\u6570\u53ef\u4e0d\u4fdd\u5b58ra\u5bc4\u5b58\u5668</li> <li>\u5e27\u6307\u9488\u7701\u7565\uff1a\u901a\u8fc7\u7cbe\u786e\u8ba1\u7b97sp\u504f\u79fb\u53ef\u7701\u7565fp\u5bc4\u5b58\u5668\uff08\u9700\u7f16\u8bd1\u5668\u652f\u6301\uff09</li> </ul>"},{"location":"cs_base/cs61c/Lecture/lecture10/#3","title":"3. \u5185\u5b58\u7ba1\u7406\u9ad8\u7ea7\u8bdd\u9898","text":"<ul> <li>\u6808\u6ea2\u51fa\u68c0\u6d4b\uff1a\u901a\u8fc7MMU\u8bbe\u7f6e\u4fdd\u62a4\u9875\uff08Guard Page\uff09</li> <li>\u5806\u788e\u7247\u95ee\u9898\uff1a\u901a\u8fc7\u5185\u5b58\u6c60\uff08Memory Pool\uff09\u4f18\u5316</li> <li>Alloca\u51fd\u6570\u539f\u7406\uff1a\u52a8\u6001\u8c03\u6574\u6808\u7a7a\u95f4</li> </ul>"},{"location":"cs_base/cs61c/Lecture/lecture10/#_3","title":"\u56db\u3001\u5178\u578b\u573a\u666f\u5206\u6790","text":""},{"location":"cs_base/cs61c/Lecture/lecture10/#_4","title":"\u9012\u5f52\u51fd\u6570\u8c03\u7528\u793a\u4f8b","text":"C<pre><code>int factorial(int n) {\n    if (n &lt;= 1) return 1;\n    return n * factorial(n-1);\n}\n</code></pre> \u5bf9\u5e94\u7684\u6808\u53d8\u5316\uff1a Text Only<pre><code>| ...       | \n| n=3       | \u2190 sp\n| ra=0x1004 | \n-------------\n| ...       |\n| n=2       | \u2190 new sp\n| ra=0x2008 |\n-------------\n| n=1       | \u2190 base case\n</code></pre>"},{"location":"cs_base/cs61c/Lecture/lecture10/#_5","title":"\u4e94\u3001\u5173\u952e\u603b\u7ed3","text":"<ol> <li>\u51fd\u6570\u8c03\u7528\u65f6\u5fc5\u987b\u9075\u5b88\u7684\u5bc4\u5b58\u5668\u4fdd\u5b58\u89c4\u5219\u662f\u7a0b\u5e8f\u6b63\u786e\u6027\u7684\u57fa\u77f3</li> <li>\u6808\u5e27\u5927\u5c0f\u9700\u540c\u65f6\u8003\u8651\uff1a\u4fdd\u5b58\u5bc4\u5b58\u5668 + \u5c40\u90e8\u53d8\u91cf + \u53c2\u6570\u4f20\u9012 + \u5bf9\u9f50\u586b\u5145</li> <li>RISC-V\u5185\u5b58\u5e03\u5c40\u8bbe\u8ba1\u4fdd\u8bc1\u4e86\uff1a    - \u6808\u5806\u76f8\u5411\u589e\u957f\u53ef\u6700\u5927\u5316\u5229\u7528\u5185\u5b58\u7a7a\u95f4    - 16\u5b57\u8282\u5bf9\u9f50\u63d0\u5347\u8bbf\u5b58\u6548\u7387</li> <li>\u73b0\u4ee3\u7f16\u8bd1\u5668\u901a\u8fc7\u6808\u5e27\u4f18\u5316\u5e73\u5747\u53ef\u51cf\u5c1130%-50%\u7684\u6808\u7a7a\u95f4\u4f7f\u7528</li> </ol>"},{"location":"cs_base/cs61c/Lecture/lecture10/#_6","title":"\u516d\u3001\u81ea\u6211\u68c0\u6d4b\u95ee\u9898","text":""},{"location":"cs_base/cs61c/Lecture/lecture10/#1-89","title":"1. \u5f53\u51fd\u6570\u53c2\u6570\u8d85\u8fc78\u4e2a\u65f6\uff0c\u7b2c9\u4e2a\u53c2\u6570\u5982\u4f55\u4f20\u9012\uff1f","text":"<p>\u5728RISC - V\u67b6\u6784\u4e2d\uff0c\u524d8\u4e2a\u6574\u6570\u53c2\u6570\uff08\u6216\u6307\u9488\uff09\u901a\u8fc7\u5bc4\u5b58\u5668<code>a0 - a7</code>\u4f20\u9012\u3002\u5f53\u51fd\u6570\u53c2\u6570\u8d85\u8fc78\u4e2a\u65f6\uff0c\u7b2c9\u4e2a\u53ca\u540e\u7eed\u7684\u53c2\u6570\u4f1a\u901a\u8fc7\u6808\u6765\u4f20\u9012\u3002\u8c03\u7528\u8005\u9700\u8981\u5c06\u8fd9\u4e9b\u989d\u5916\u7684\u53c2\u6570\u4f9d\u6b21\u538b\u5165\u6808\u4e2d\uff0c\u7136\u540e\u88ab\u8c03\u7528\u51fd\u6570\u4ece\u6808\u4e0a\u8bfb\u53d6\u8fd9\u4e9b\u53c2\u6570\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u610f\u4ee3\u7801\uff08\u4f2a\u4ee3\u7801\uff09\uff1a </p>Python<pre><code># \u8c03\u7528\u8005\u4ee3\u7801\ndef caller_function():\n    # \u51c6\u5907\u524d8\u4e2a\u53c2\u6570\n    a0 = 1\n    a1 = 2\n    a2 = 3\n    a3 = 4\n    a4 = 5\n    a5 = 6\n    a6 = 7\n    a7 = 8\n    # \u7b2c9\u4e2a\u53c2\u6570\n    param9 = 9\n    # \u5c06\u7b2c9\u4e2a\u53c2\u6570\u538b\u5165\u6808\n    stack_push(param9)\n    # \u8c03\u7528\u51fd\u6570\n    callee_function()\n\n# \u88ab\u8c03\u7528\u8005\u4ee3\u7801\ndef callee_function():\n    # \u4ece\u5bc4\u5b58\u5668\u83b7\u53d6\u524d8\u4e2a\u53c2\u6570\n    arg1 = a0\n    arg2 = a1\n    arg3 = a2\n    arg4 = a3\n    arg5 = a4\n    arg6 = a5\n    arg7 = a6\n    arg8 = a7\n    # \u4ece\u6808\u4e0a\u83b7\u53d6\u7b2c9\u4e2a\u53c2\u6570\n    arg9 = stack_pop()\n    # \u51fd\u6570\u5904\u7406\u903b\u8f91\n    result = arg1 + arg2 + arg3 + arg4 + arg5 + arg6 + arg7 + arg8 + arg9\n    return result\n</code></pre>"},{"location":"cs_base/cs61c/Lecture/lecture10/#2-sdldswlw","title":"2. \u4e3a\u4ec0\u4e48\u4fdd\u5b58\u5bc4\u5b58\u5668\u65f6\u8981\u4f7f\u7528<code>sd</code>/<code>ld</code>\u800c\u4e0d\u662f<code>sw</code>/<code>lw</code>\uff1f","text":"<ul> <li><code>sd</code>\uff08Store Doubleword\uff09\u548c<code>ld</code>\uff08Load Doubleword\uff09\u7528\u4e8e\u5904\u740664\u4f4d\u6570\u636e\uff0c\u800c<code>sw</code>\uff08Store Word\uff09\u548c<code>lw</code>\uff08Load Word\uff09\u7528\u4e8e\u5904\u740632\u4f4d\u6570\u636e\u3002</li> <li>\u572864\u4f4d\u7684RISC - V\u67b6\u6784\u4e2d\uff0c\u5bc4\u5b58\u5668\u662f64\u4f4d\u7684\u3002\u5982\u679c\u4f7f\u7528<code>sw</code>/<code>lw</code>\u6765\u4fdd\u5b58\u548c\u6062\u590d\u5bc4\u5b58\u5668\uff0c\u53ea\u80fd\u4fdd\u5b58\u6216\u52a0\u8f7d\u5bc4\u5b58\u5668\u7684\u4f4e32\u4f4d\uff0c\u9ad832\u4f4d\u7684\u6570\u636e\u4f1a\u4e22\u5931\u3002\u4e3a\u4e86\u5b8c\u6574\u5730\u4fdd\u5b58\u548c\u6062\u590d\u5bc4\u5b58\u5668\u768464\u4f4d\u5185\u5bb9\uff0c\u5c31\u9700\u8981\u4f7f\u7528<code>sd</code>/<code>ld</code>\u6307\u4ee4\u3002</li> </ul>"},{"location":"cs_base/cs61c/Lecture/lecture10/#3-s0-s3a0-a3","title":"3. \u5982\u679c\u51fd\u6570\u4e2d\u540c\u65f6\u9700\u8981\u4fdd\u5b58s0 - s3\u548ca0 - a3\uff0c\u6808\u7a7a\u95f4\u5e94\u8be5\u5982\u4f55\u5206\u914d\uff1f","text":"<p>\u5728RISC - V\u67b6\u6784\u4e2d\uff0c\u6bcf\u4e2a\u5bc4\u5b58\u5668\u662f64\u4f4d\uff088\u5b57\u8282\uff09\u3002<code>s0 - s3</code>\u67094\u4e2a\u5bc4\u5b58\u5668\uff0c<code>a0 - a3</code>\u67094\u4e2a\u5bc4\u5b58\u5668\uff0c\u603b\u5171\u9700\u8981\u4fdd\u5b588\u4e2a\u5bc4\u5b58\u5668\u3002 \u6808\u662f\u5411\u4e0b\u589e\u957f\u7684\uff0c\u6240\u4ee5\u9700\u8981\u4e3a\u8fd98\u4e2a\u5bc4\u5b58\u5668\u5206\u914d\u7684\u6808\u7a7a\u95f4\u5927\u5c0f\u4e3a<code>8 * 8 = 64</code>\u5b57\u8282\u3002 \u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6b65\u9aa4\u5206\u914d\u6808\u7a7a\u95f4\uff1a </p>Text Only<pre><code>1. \u9996\u5148\uff0c\u5c06\u6808\u6307\u9488`sp`\u51cf\u53bb64\uff0c\u4e3a\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\u5206\u914d\u7a7a\u95f4\u3002\n2. \u7136\u540e\uff0c\u4f7f\u7528`sd`\u6307\u4ee4\u5c06`s0 - s3`\u548c`a0 - a3`\u4f9d\u6b21\u4fdd\u5b58\u5230\u6808\u4e0a\u3002\n3. \u5728\u51fd\u6570\u8fd4\u56de\u524d\uff0c\u4f7f\u7528`ld`\u6307\u4ee4\u4ece\u6808\u4e0a\u6062\u590d\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u503c\u3002\n4. \u6700\u540e\uff0c\u5c06\u6808\u6307\u9488`sp`\u52a0\u4e0a64\uff0c\u91ca\u653e\u6808\u7a7a\u95f4\u3002\n</code></pre>"},{"location":"cs_base/cs61c/Lecture/lecture10/#4-382","title":"4. \u8bbe\u8ba1\u4e00\u4e2a\u6808\u5e27\u7ed3\u6784\uff0c\u8981\u6c42\u80fd\u540c\u65f6\u4fdd\u5b583\u4e2a\u5c40\u90e8\u53d8\u91cf\uff08\u6bcf\u4e2a8\u5b57\u8282\uff09\u548c2\u4e2a\u9700\u8981\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668","text":"<p>\u6808\u5e27\u662f\u51fd\u6570\u8c03\u7528\u65f6\u5728\u6808\u4e0a\u5206\u914d\u7684\u4e00\u5757\u5185\u5b58\u533a\u57df\uff0c\u7528\u4e8e\u4fdd\u5b58\u5c40\u90e8\u53d8\u91cf\u3001\u5bc4\u5b58\u5668\u7b49\u4fe1\u606f\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u6ee1\u8db3\u8981\u6c42\u7684\u6808\u5e27\u7ed3\u6784\u8bbe\u8ba1\uff1a</p> \u504f\u79fb\u91cf\uff08\u4ece\u6808\u6307\u9488<code>sp</code>\u5f00\u59cb\uff09 \u5185\u5bb9 0 \u7b2c\u4e00\u4e2a\u9700\u8981\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668 8 \u7b2c\u4e8c\u4e2a\u9700\u8981\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668 16 \u7b2c\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf 24 \u7b2c\u4e8c\u4e2a\u5c40\u90e8\u53d8\u91cf 32 \u7b2c\u4e09\u4e2a\u5c40\u90e8\u53d8\u91cf <p>\u4e0b\u9762\u662f\u4e00\u6bb5\u7b80\u5355\u7684RISC - V\u6c47\u7f16\u4ee3\u7801\u793a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u5206\u914d\u548c\u4f7f\u7528\u8fd9\u4e2a\u6808\u5e27\uff1a </p>GAS<pre><code># \u51fd\u6570\u5f00\u59cb\nfunction_start:\n    # \u5206\u914d\u6808\u7a7a\u95f4\n    addi sp, sp, -32  # \u4e3a\u6808\u5e27\u5206\u914d32\u5b57\u8282\u7a7a\u95f4\n\n    # \u4fdd\u5b58\u5bc4\u5b58\u5668\n    sd s0, 0(sp)      # \u4fdd\u5b58\u7b2c\u4e00\u4e2a\u5bc4\u5b58\u5668\n    sd s1, 8(sp)      # \u4fdd\u5b58\u7b2c\u4e8c\u4e2a\u5bc4\u5b58\u5668\n\n    # \u521d\u59cb\u5316\u5c40\u90e8\u53d8\u91cf\n    li t0, 1          # \u7b2c\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u503c\n    sd t0, 16(sp)     # \u4fdd\u5b58\u7b2c\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\n    li t0, 2          # \u7b2c\u4e8c\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u503c\n    sd t0, 24(sp)     # \u4fdd\u5b58\u7b2c\u4e8c\u4e2a\u5c40\u90e8\u53d8\u91cf\n    li t0, 3          # \u7b2c\u4e09\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u503c\n    sd t0, 32(sp)     # \u4fdd\u5b58\u7b2c\u4e09\u4e2a\u5c40\u90e8\u53d8\u91cf\n\n    # \u51fd\u6570\u5904\u7406\u903b\u8f91\n\n    # \u6062\u590d\u5bc4\u5b58\u5668\n    ld s0, 0(sp)      # \u6062\u590d\u7b2c\u4e00\u4e2a\u5bc4\u5b58\u5668\n    ld s1, 8(sp)      # \u6062\u590d\u7b2c\u4e8c\u4e2a\u5bc4\u5b58\u5668\n\n    # \u91ca\u653e\u6808\u7a7a\u95f4\n    addi sp, sp, 32   # \u91ca\u653e\u6808\u5e27\u7a7a\u95f4\n\n    # \u51fd\u6570\u8fd4\u56de\n    ret\n</code></pre> <p>\u5728\u8fd9\u4e2a\u6808\u5e27\u7ed3\u6784\u4e2d\uff0c\u9996\u5148\u5206\u914d\u4e8632\u5b57\u8282\u7684\u6808\u7a7a\u95f4\uff0c\u7136\u540e\u4f9d\u6b21\u4fdd\u5b58\u4e862\u4e2a\u5bc4\u5b58\u5668\u548c3\u4e2a\u5c40\u90e8\u53d8\u91cf\u3002\u5728\u51fd\u6570\u7ed3\u675f\u65f6\uff0c\u6062\u590d\u5bc4\u5b58\u5668\u5e76\u91ca\u653e\u6808\u7a7a\u95f4\u3002 </p> <p></p>"},{"location":"cs_base/cs61c/proj/proj01/","title":"Proj1","text":""},{"location":"cs_base/cs61c/proj/proj01/#proj1","title":"Proj1","text":"<p> \u7ea6 383 \u4e2a\u5b57  324 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p>"},{"location":"cs_base/cs61c/proj/proj01/#1-ppm","title":"1. PPM \u56fe\u50cf\u683c\u5f0f\u8be6\u89e3","text":"<ul> <li>\u57fa\u672c\u6982\u5ff5</li> <li>PPM (Portable Pixmap)\uff1a\u4e00\u79cd\u65e0\u635f\u7684\u4f4d\u56fe\u56fe\u50cf\u683c\u5f0f\uff0c\u5c5e\u4e8e Netpbm \u683c\u5f0f\u5bb6\u65cf</li> <li> <p>\u4e24\u79cd\u7f16\u7801\u5f62\u5f0f\uff1a     | \u7c7b\u578b | \u6807\u8bc6\u5934 | \u5b58\u50a8\u65b9\u5f0f | \u7279\u70b9 |     |---|---|---|---|     | ASCII | <code>P3</code> | \u7eaf\u6587\u672c\u5b58\u50a8 RGB \u503c | \u53ef\u8bfb\u6027\u5f3a\uff0c\u6587\u4ef6\u4f53\u79ef\u5927 |     | Binary | <code>P6</code> | \u4e8c\u8fdb\u5236\u5b58\u50a8\u50cf\u7d20\u6570\u636e | \u6587\u4ef6\u5c0f\uff0c\u4e0d\u53ef\u76f4\u63a5\u9605\u8bfb |</p> </li> <li> <p>\u6587\u4ef6\u7ed3\u6784\u793a\u4f8b\uff1a </p>Text Only<pre><code>P3                  # \u683c\u5f0f\u6807\u8bc6\n4 4                 # \u5bbd\u5ea6(4\u50cf\u7d20) \u9ad8\u5ea6(4\u50cf\u7d20)\n255                 # \u989c\u8272\u6700\u5927\u503c\uff08\u901a\u5e38\u4e3a255\uff09\n255 0 0  0 255 0    # \u50cf\u7d20\u6570\u636e\uff08R G B \u503c\uff09\n0 0 255  255 255 0  # \u6bcf\u884c\u5efa\u8bae\u4e0d\u8d85\u8fc770\u5b57\u7b26\n</code></pre> </li> <li> <p>\u5185\u5b58\u5e03\u5c40 </p>C<pre><code>typedef struct {\n    uint8_t R, G, B; // \u6bcf\u4e2a\u901a\u9053\u53601\u5b57\u8282\uff080-255\uff09\n} Color;\n\ntypedef struct {\n    int rows, cols;\n    Color **image;   // \u4e8c\u7ef4\u6570\u7ec4\uff0crows\u884c\uff0ccols\u5217\n} Image;\n</code></pre> </li> </ul>"},{"location":"cs_base/cs61c/proj/proj01/#2","title":"2. \u4ee3\u7801\u5206\u6790\u4e0e\u6539\u8fdb","text":""},{"location":"cs_base/cs61c/proj/proj01/#imageloaderc","title":"imageloader.c \u5173\u952e\u70b9","text":"<ul> <li>\u5185\u5b58\u5206\u914d\u4fee\u6b63 C<pre><code>// \u9519\u8bef\u5199\u6cd5\uff08\u5206\u914d\u6307\u9488\u6570\u7ec4\uff09\nimg-&gt;image[row] = malloc(sizeof(Color*) * cols);\n\n// \u6b63\u786e\u5199\u6cd5\uff08\u5206\u914d\u7ed3\u6784\u4f53\u6570\u7ec4\uff09\nimg-&gt;image[row] = malloc(sizeof(Color) * cols);\n</code></pre></li> <li> <p>\u6bcf\u4e2a <code>image[row]</code> \u5e94\u6307\u5411 <code>Color</code> \u7ed3\u6784\u4f53\u6570\u7ec4\uff0c\u800c\u975e\u6307\u9488\u6570\u7ec4</p> </li> <li> <p>\u9519\u8bef\u5904\u7406\u589e\u5f3a </p>C<pre><code>FILE *fp = fopen(filename, \"r\");\nif (!fp) {\n    perror(\"Error opening file\");\n    return NULL;\n}\n\n// \u8bfb\u53d6\u65f6\u68c0\u67e5\u8fd4\u56de\u503c\nif (fscanf(fp, \"%d %d\", &amp;cols, &amp;rows) != 2) {\n    fprintf(stderr, \"Invalid image dimensions\");\n    fclose(fp);\n    return NULL;\n}\n</code></pre> </li> <li> <p>\u8df3\u8fc7\u6ce8\u91ca\u7684\u5b9e\u73b0 </p>C<pre><code>int ch;\nwhile ((ch = fgetc(fp)) == '#') { \n    while ((ch = fgetc(fp)) != '\\n'); // \u8df3\u8fc7\u6ce8\u91ca\u884c\n}\nungetc(ch, fp); // \u56de\u9000\u975e\u6ce8\u91ca\u5b57\u7b26\n</code></pre> </li> </ul>"},{"location":"cs_base/cs61c/proj/proj01/#3-steganography","title":"3. \u9690\u5199\u672f (Steganography) \u5b9e\u73b0","text":"<ul> <li>\u6838\u5fc3\u903b\u8f91 C<pre><code>Color* evaluateOnePixel(Image *image, int row, int col) {\n    Color *c = malloc(sizeof(Color));\n    if (!c) return NULL;\n\n    // \u63d0\u53d6 B \u901a\u9053\u6700\u4f4e\u6709\u6548\u4f4d\uff08LSB\uff09\n    uint8_t lsb = image-&gt;image[row][col].B &amp; 0x1;\n    c-&gt;R = c-&gt;G = c-&gt;B = (lsb ? 255 : 0);\n    return c;\n}\n</code></pre></li> <li>\u5173\u952e\u6280\u5de7\uff1a<code>&amp; 0x1</code> \u64cd\u4f5c\u5feb\u901f\u83b7\u53d6\u6700\u540e\u4e00\u4f4d</li> <li>\u5185\u5b58\u5b89\u5168\uff1a\u6bcf\u6b21\u5206\u914d\u540e\u68c0\u67e5\u6307\u9488\u6709\u6548\u6027</li> </ul>"},{"location":"cs_base/cs61c/proj/proj01/#4-game-of-life","title":"4. \u5eb7\u5a01\u751f\u547d\u6e38\u620f (Game of Life)","text":"<ul> <li>\u89c4\u5219\u8bf4\u660e</li> <li>\u6d3b\u7ec6\u80de\uff08\u767d\u8272\u50cf\u7d20\uff09\u5b58\u6d3b\u6761\u4ef6\uff1a2-3\u4e2a\u6d3b\u90bb\u5c45</li> <li>\u6b7b\u7ec6\u80de\uff08\u9ed1\u8272\u50cf\u7d20\uff09\u590d\u6d3b\u6761\u4ef6\uff1a\u6070\u597d3\u4e2a\u6d3b\u90bb\u5c45</li> <li> <p>\u4f7f\u7528\u73af\u5f62\u8fb9\u754c\uff08Toroidal Boundary\uff09\u5904\u7406\u8fb9\u7f18</p> </li> <li> <p>\u90bb\u5c45\u8ba1\u6570\u51fd\u6570 </p>C<pre><code>int countLiveNeighbors(Image *img, int row, int col) {\n    int count = 0;\n    for (int i = -1; i &lt;= 1; i++) {\n        for (int j = -1; j &lt;= 1; j++) {\n            if (i == 0 &amp;&amp; j == 0) continue;\n\n            int r = (row + i + img-&gt;rows) % img-&gt;rows;\n            int c = (col + j + img-&gt;cols) % img-&gt;cols;\n\n            if (img-&gt;image[r][c].B &amp; 1) count++;\n        }\n    }\n    return count;\n}\n</code></pre> </li> </ul>"},{"location":"cs_base/cs61c/proj/proj01/#5","title":"5. \u5e38\u89c1\u9519\u8bef\u4e0e\u8c03\u8bd5\u6280\u5de7","text":"<ul> <li> <p>\u5185\u5b58\u9519\u8bef\u6392\u67e5 </p>Bash<pre><code># \u4f7f\u7528 Valgrind \u68c0\u6d4b\u5185\u5b58\u6cc4\u6f0f\nvalgrind --leak-check=full ./steganography input.ppm\n</code></pre> </li> <li> <p>\u4e8c\u7ef4\u6570\u7ec4\u8bbf\u95ee\u7684\u6b63\u786e\u65b9\u5f0f </p>C<pre><code>// \u6b63\u786e\u8bbf\u95ee\u65b9\u5f0f\uff08\u7ed3\u6784\u4f53\u6570\u7ec4\uff09\nColor pixel = image-&gt;image[row][col];\n\n// \u9519\u8bef\u8bbf\u95ee\u65b9\u5f0f\uff08\u82e5\u9519\u8bef\u5206\u914d\u4e3a\u6307\u9488\u6570\u7ec4\uff09\nColor *pixel = image-&gt;image[row][col]; // \u5bfc\u81f4\u6bb5\u9519\u8bef\n</code></pre> </li> </ul>"},{"location":"cs_base/cs61c/proj/proj01/#6","title":"6. \u9879\u76ee\u603b\u7ed3","text":"<ul> <li>\u5173\u952e\u77e5\u8bc6\u70b9</li> <li>\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0e\u6587\u672c\u6587\u4ef6\u7684\u533a\u522b</li> <li>\u4f4d\u64cd\u4f5c\u7684\u5b9e\u9645\u5e94\u7528\uff08LSB \u63d0\u53d6\uff09</li> <li>\u52a8\u6001\u5185\u5b58\u7ba1\u7406\u7684\u6b63\u786e\u5b9e\u8df5</li> <li> <p>\u6a21\u5757\u5316\u7f16\u7a0b\u601d\u60f3\uff08imageloader \u6a21\u5757\u89e3\u8026\uff09</p> </li> <li> <p>\u5ef6\u4f38\u601d\u8003</p> </li> <li>\u5982\u4f55\u6539\u8fdb PPM \u7684\u5b58\u50a8\u6548\u7387\uff1f</li> <li>\u591a\u7ebf\u7a0b\u56fe\u50cf\u5904\u7406\u7684\u6f5c\u5728\u4f18\u5316\u65b9\u5411</li> <li>\u5176\u4ed6\u56fe\u50cf\u9690\u5199\u672f\u65b9\u6cd5\uff08\u5982 LSB \u66ff\u6362\u7b97\u6cd5\uff09</li> </ul>"},{"location":"cs_base/cs61c/proj/proj01/#7","title":"7. \u4ee3\u7801","text":"<ul> <li> <p>imageloader.c </p>C<pre><code>/************************************************************************\n**\n** NAME:        imageloader.c\n**\n** DESCRIPTION: CS61C Fall 2020 Project 1\n**\n** AUTHOR:      Dan Garcia  -  University of California at Berkeley\n**              Copyright (C) Dan Garcia, 2020. All rights reserved.\n**              Justin Yokota - Starter Code\n**              Frank\n**\n**\n** DATE:        2025-03-31\n**\n**************************************************************************/\n\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;inttypes.h&gt;\n#include &lt;string.h&gt;\n#include \"imageloader.h\"\n\n// Opens a .ppm P3 image file, and constructs an Image object.\n// You may find the function fscanf useful.\n// Make sure that you close the file with fclose before returning.\nImage *readData(char *filename)\n{\n    // YOUR CODE HERE\n    FILE *fp = fopen(filename, \"r\");\n    Image *img = malloc(sizeof(Image));\n    char format[4];\n    fscanf(fp, \"%s\", format);\n    fscanf(fp, \"%d %d\", &amp;img-&gt;cols, &amp;img-&gt;rows);\n    img-&gt;image = malloc(sizeof(Color **) * img-&gt;rows);\n    int nums;\n    fscanf(fp, \"%d\", &amp;nums);\n    for (int row = 0; row &lt; img-&gt;rows; row++)\n    {\n        img-&gt;image[row] = malloc(sizeof(Color *) * img-&gt;cols);\n        for (int col = 0; col &lt; img-&gt;cols; col++)\n        {\n            // printf(\"%d\\n\", row);\n            fscanf(fp, \"%hhu %hhu %hhu\", &amp;img-&gt;image[row][col].R, &amp;img-&gt;image[row][col].G, &amp;img-&gt;image[row][col].B);\n        }\n    }\n    fclose(fp);\n    return img;\n}\n\n// Given an image, prints to stdout (e.g. with printf) a .ppm P3 file with the image's data.\nvoid writeData(Image *image)\n{\n    // YOUR CODE HERE\n    printf(\"P3\\n%d %d\\n255\\n\", image-&gt;cols, image-&gt;rows);\n    for (int row = 0; row &lt; image-&gt;rows; row++)\n    {\n        for (int col = 0; col &lt; image-&gt;cols; col++)\n        {\n            if (col != 0)\n                printf(\"   \");\n            printf(\"%3hhu %3hhu %3hhu\", image-&gt;image[row][col].R, image-&gt;image[row][col].G, image-&gt;image[row][col].B);\n        }\n        printf(\"\\n\");\n    }\n}\n\n// Frees an image\nvoid freeImage(Image *image)\n{\n    // YOUR CODE HERE\n    for (int row = 0; row &lt; image-&gt;rows; row++)\n    {\n        free(image-&gt;image[row]);\n    }\n    free(image-&gt;image);\n    free(image);\n}\n\n// int main()\n// {\n//  Image *img = readData(\"JohnConway.ppm\");\n//  writeData(img);\n// }\n</code></pre> </li> <li> <p>steganography.c </p>C<pre><code>/************************************************************************\n**\n** NAME:        steganography.c\n**\n** DESCRIPTION: CS61C Fall 2020 Project 1\n**\n** AUTHOR:      Dan Garcia  -  University of California at Berkeley\n**              Copyright (C) Dan Garcia, 2020. All rights reserved.\n**              Justin Yokota - Starter Code\n**              Frank\n**\n** DATE:        2025-03-31\n**\n**************************************************************************/\n\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;inttypes.h&gt;\n#include \"imageloader.h\"\n\n// Determines what color the cell at the given row/col should be. This should not affect Image, and should allocate space for a new Color.\nColor *evaluateOnePixel(Image *image, int row, int col)\n{\n    // YOUR CODE HERE\n    Color *color = malloc(sizeof(Color));\n    if (image-&gt;image[row][col].B &amp; 1)\n    {\n        // the last bits of B is 1, means the color should be black\n        color-&gt;R = 255;\n        color-&gt;G = 255;\n        color-&gt;B = 255;\n    }\n    else\n    {\n        color-&gt;R = 0;\n        color-&gt;G = 0;\n        color-&gt;B = 0;\n    }\n    return color;\n}\n\n// Given an image, creates a new image extracting the LSB of the B channel.\nImage *steganography(Image *image)\n{\n    // YOUR CODE HERE\n    Image *newImage = malloc(sizeof(Image));\n    newImage-&gt;rows = image-&gt;rows;\n    newImage-&gt;cols = image-&gt;cols;\n    newImage-&gt;image = malloc(sizeof(Color **) * image-&gt;rows);\n    for (int row = 0; row &lt; image-&gt;rows; row++)\n    {\n        newImage-&gt;image[row] = malloc(sizeof(Color *) * image-&gt;cols);\n        for (int col = 0; col &lt; image-&gt;cols; col++)\n        {\n            newImage-&gt;image[row][col] = *evaluateOnePixel(image, row, col);\n        }\n    }\n    return newImage;\n}\n\n/*\nLoads a file of ppm P3 format from a file, and prints to stdout (e.g. with printf) a new image,\nwhere each pixel is black if the LSB of the B channel is 0,\nand white if the LSB of the B channel is 1.\n\nargc stores the number of arguments.\nargv stores a list of arguments. Here is the expected input:\nargv[0] will store the name of the program (this happens automatically).\nargv[1] should contain a filename, containing a file of ppm P3 format (not necessarily with .ppm file extension).\nIf the input is not correct, a malloc fails, or any other error occurs, you should exit with code -1.\nOtherwise, you should return from main with code 0.\nMake sure to free all memory before returning!\n*/\n\n// #include \"imageloader.c\"\n// It seems I don'tmake  need to include this c problem, because in the imageloader.h there are extern functions.\nint main(int argc, char **argv)\n{\n    // YOUR CODE HERE\n    char *filename = argv[1];\n    Image *img = readData(filename);\n    Image *newImg = steganography(img);\n    writeData(newImg);\n\n    freeImage(img);\n    freeImage(newImg);\n}\n</code></pre> </li> <li> <p>gameoflife.c </p>C<pre><code>/************************************************************************\n**\n** NAME:        steganography.c\n**\n** DESCRIPTION: CS61C Fall 2020 Project 1\n**\n** AUTHOR:      Dan Garcia  -  University of California at Berkeley\n**              Copyright (C) Dan Garcia, 2020. All rights reserved.\n**              Justin Yokota - Starter Code\n**              Frank\n**\n** DATE:        2025-03-31\n**\n**************************************************************************/\n\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;inttypes.h&gt;\n#include \"imageloader.h\"\n\n// Determines what color the cell at the given row/col should be. This should not affect Image, and should allocate space for a new Color.\nColor *evaluateOnePixel(Image *image, int row, int col)\n{\n    // YOUR CODE HERE\n    Color *color = malloc(sizeof(Color));\n    if (image-&gt;image[row][col].B &amp; 1)\n    {\n        // the last bits of B is 1, means the color should be black\n        color-&gt;R = 255;\n        color-&gt;G = 255;\n        color-&gt;B = 255;\n    }\n    else\n    {\n        color-&gt;R = 0;\n        color-&gt;G = 0;\n        color-&gt;B = 0;\n    }\n    return color;\n}\n\n// Given an image, creates a new image extracting the LSB of the B channel.\nImage *steganography(Image *image)\n{\n    // YOUR CODE HERE\n    Image *newImage = malloc(sizeof(Image));\n    newImage-&gt;rows = image-&gt;rows;\n    newImage-&gt;cols = image-&gt;cols;\n    newImage-&gt;image = malloc(sizeof(Color **) * image-&gt;rows);\n    for (int row = 0; row &lt; image-&gt;rows; row++)\n    {\n        newImage-&gt;image[row] = malloc(sizeof(Color *) * image-&gt;cols);\n        for (int col = 0; col &lt; image-&gt;cols; col++)\n        {\n            newImage-&gt;image[row][col] = *evaluateOnePixel(image, row, col);\n        }\n    }\n    return newImage;\n}\n\n/*\nLoads a file of ppm P3 format from a file, and prints to stdout (e.g. with printf) a new image,\nwhere each pixel is black if the LSB of the B channel is 0,\nand white if the LSB of the B channel is 1.\n\nargc stores the number of arguments.\nargv stores a list of arguments. Here is the expected input:\nargv[0] will store the name of the program (this happens automatically).\nargv[1] should contain a filename, containing a file of ppm P3 format (not necessarily with .ppm file extension).\nIf the input is not correct, a malloc fails, or any other error occurs, you should exit with code -1.\nOtherwise, you should return from main with code 0.\nMake sure to free all memory before returning!\n*/\n\n// #include \"imageloader.c\"\n// It seems I don'tmake  need to include this c problem, because in the imageloader.h there are extern functions.\nint main(int argc, char **argv)\n{\n    // YOUR CODE HERE\n    char *filename = argv[1];\n    Image *img = readData(filename);\n    Image *newImg = steganography(img);\n    writeData(newImg);\n\n    freeImage(img);\n    freeImage(newImg);\n}\n</code></pre> </li> </ul>"},{"location":"cs_base/csapp/Lab/BombLab/","title":"BombLab","text":""},{"location":"cs_base/csapp/Lab/BombLab/#bomblab","title":"BombLab","text":"<p> \u7ea6 68 \u4e2a\u5b57  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p> <p>\u96f6\u96f6\u788e\u788e\u505a\u4e866\u5929\u5427\uff0c\u7ec8\u4e8e\u628abomblab\u5168\u8fc7\u4e86\uff01 \u9664\u4e86\u670b\u53cb\u624b\u628a\u624b\u5e26\u6211\u505a\u7684phase_1\uff0c\u548csecret_phase\u4e2d\u7684\u6811\u7ed3\u6784\u6ca1\u60f3\u5230 \u53c2\u8003\u4e86\u7f51\u4e0a\u7684\u601d\u8def\uff0c\u5176\u4f59\u90fd\u662f\u81ea\u5df1\u72ec\u7acb\u505a\u51fa\u6765\u7684\uff0c\u8fd8\u662f\u9887\u6709\u6210\u5c31\u611f </p>"},{"location":"cs_base/csapp/Lab/DataLab/","title":"DataLab \u4fdd\u59c6\u7ea7\u8be6\u89e3","text":""},{"location":"cs_base/csapp/Lab/DataLab/#datalab","title":"DataLab \u4fdd\u59c6\u7ea7\u8be6\u89e3","text":"<p> \u7ea6 1723 \u4e2a\u5b57  68 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p>"},{"location":"cs_base/csapp/Lab/DataLab/#1","title":"1. \u73af\u5883\u642d\u5efa","text":"<p>\u5efa\u8bae\u4f7f\u7528\u7eaf\u51c0\u7684 Linux \u7cfb\u7edf\u3002</p> <p>\u672c\u4eba\u91c7\u7528\u4e86 Docker \u6765\u6784\u5efa Ubuntu \u7cfb\u7edf\uff0c\u8fd9\u662f\u6559\u7a0b\u3002\u6309\u7167\u8be5\u6559\u7a0b\uff0c\u4f60\u53ef\u4ee5\u8f7b\u677e\u5730\u5728\u81ea\u5df1\u7684\u673a\u5668\u4e0a\u642d\u5efa\u8d77\u4e00\u4e2a\u9002\u7528\u4e8e DataLab \u5b9e\u9a8c\u7684 Ubuntu \u73af\u5883\u3002</p>"},{"location":"cs_base/csapp/Lab/DataLab/#2","title":"2. \u524d\u671f\u51c6\u5907","text":"<p>\u4ed4\u7ec6\u9605\u8bfb\u6587\u4ef6\u5939\u4e2d\u7684 <code>README</code> \u6587\u4ef6\uff0c\u5e38\u7528\u7684\u6307\u4ee4\u5982\u4e0b\uff1a 1. \u8bed\u6cd5\u68c0\u67e5\uff1a\u4f7f\u7528 <code>unix&gt; ./dlc bits.c</code> \u6307\u4ee4\u5bf9 <code>bits.c</code> \u6587\u4ef6\u8fdb\u884c\u8bed\u6cd5\u68c0\u67e5\u3002\u5982\u679c\u6267\u884c\u8be5\u6307\u4ee4\u540e\u6ca1\u6709\u4efb\u4f55\u8fd4\u56de\u4fe1\u606f\uff0c\u8fd9\u5c31\u8868\u660e <code>bits.c</code> \u6587\u4ef6\u4e2d\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\u3002 2. \u91cd\u65b0\u7f16\u8bd1\uff1a\u6bcf\u6b21\u5bf9 <code>bits.c</code> \u6587\u4ef6\u8fdb\u884c\u66f4\u6539\u540e\uff0c\u90fd\u9700\u8981\u91cd\u65b0\u7f16\u8bd1 <code>btest</code> \u7a0b\u5e8f\u3002\u53ef\u4ee5\u4f7f\u7528 <code>unix&gt; make btest</code> \u6307\u4ee4\u6765\u5b8c\u6210\u8fd9\u4e2a\u64cd\u4f5c\u3002 3. \u9898\u76ee\u68c0\u6d4b\uff1a\u4f7f\u7528 <code>unix&gt; ./btest</code> \u6307\u4ee4\u6765\u68c0\u6d4b\u6240\u6709\u9898\u76ee\u7684\u7b54\u6848\u662f\u5426\u6b63\u786e\u3002\u8be5\u6307\u4ee4\u4f1a\u8fd0\u884c\u4e00\u7cfb\u5217\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e2e\u52a9\u4f60\u9a8c\u8bc1\u81ea\u5df1\u7684\u4ee3\u7801\u5b9e\u73b0\u662f\u5426\u7b26\u5408\u8981\u6c42\u3002</p>"},{"location":"cs_base/csapp/Lab/DataLab/#3","title":"3. \u5f00\u59cb\u89e3\u9898","text":""},{"location":"cs_base/csapp/Lab/DataLab/#31-bitxor","title":"3.1 bitXor","text":""},{"location":"cs_base/csapp/Lab/DataLab/#_1","title":"\u63cf\u8ff0","text":"Text Only<pre><code>/*\n * bitXor - x^y using only ~ and &amp;\n *   Example: bitXor(4, 5) = 1\n *   Legal ops: ~ &amp;\n *   Max ops: 14\n *   Rating: 1\n */\n</code></pre> \u672c\u9898\u8981\u6c42\u4ec5\u4f7f\u7528\u975e\u95e8 <code>~</code> \u548c\u4e0e\u95e8 <code>&amp;</code> \u6765\u5b9e\u73b0\u5f02\u6216\u95e8 <code>^</code>\u3002"},{"location":"cs_base/csapp/Lab/DataLab/#_2","title":"\u601d\u8def","text":"<p>\u5f02\u6216\u64cd\u4f5c\u53ef\u4ee5\u7528\u4ee5\u4e0b\u4e09\u79cd\u65b9\u5f0f\u8868\u793a\uff1a </p> <p>\u5982\u679c\u89c9\u5f97\u4e0a\u8ff0\u8868\u793a\u65b9\u5f0f\u6bd4\u8f83\u7a81\u5140\uff0c\u53ef\u4ee5\u4ece \u201c\u96c6\u5408\u201d \u7684\u89d2\u5ea6\u6765\u7406\u89e3\u5f02\u6216\u64cd\u4f5c\u3002 </p>"},{"location":"cs_base/csapp/Lab/DataLab/#_3","title":"\u7b54\u6848","text":"C<pre><code>int bitXor(int x, int y)\n{\n  return ~(x &amp; y) &amp; ~(~x &amp; ~y);\n}\n</code></pre>"},{"location":"cs_base/csapp/Lab/DataLab/#32-tmin","title":"3.2 tmin","text":""},{"location":"cs_base/csapp/Lab/DataLab/#_4","title":"\u63cf\u8ff0","text":"Text Only<pre><code>/*\n * tmin - return minimum two's complement integer\n *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;\n *   Max ops: 4\n *   Rating: 1\n */\n</code></pre> <p>\u672c\u9898\u8981\u6c42\u8fd4\u56de\u6700\u5c0f\u7684\u4e8c\u8fdb\u5236\u8865\u7801\u6574\u6570\u3002\u5728\u4e8c\u8fdb\u5236\u8865\u7801\u8868\u793a\u4e2d\uff0c\u6700\u5c0f\u7684\u6574\u6570\u662f\u6700\u9ad8\u4f4d\u4e3a 1\uff0c\u5176\u4f59\u4f4d\u4e3a 0 \u7684\u6570\u3002</p>"},{"location":"cs_base/csapp/Lab/DataLab/#_5","title":"\u601d\u8def","text":"<p>\u6700\u5c0f\u7684\u4e8c\u8fdb\u5236\u6574\u6570\u7684\u7279\u5f81\u662f\u53ea\u6709\u6700\u9ad8\u4f4d\u4e3a 1\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06 1 \u5de6\u79fb 31 \u4f4d\u6765\u5f97\u5230\u8fd9\u4e2a\u6570\u3002</p>"},{"location":"cs_base/csapp/Lab/DataLab/#_6","title":"\u7b54\u6848","text":"C<pre><code>int tmin(void)\n{\n  return 1 &lt;&lt; 31;\n}\n</code></pre>"},{"location":"cs_base/csapp/Lab/DataLab/#33-istmax","title":"3.3 isTmax","text":""},{"location":"cs_base/csapp/Lab/DataLab/#_7","title":"\u63cf\u8ff0","text":"Text Only<pre><code>/*\n * isTmax - returns 1 if x is the maximum, two's complement number,\n *     and 0 otherwise\n *   Legal ops: ! ~ &amp; ^ | +\n *   Max ops: 10\n *   Rating: 1\n */\n</code></pre> \u672c\u9898\u8981\u6c42\u5224\u65ad\u4e00\u4e2a\u6570 <code>x</code> \u662f\u5426\u4e3a\u4e8c\u8fdb\u5236\u8865\u7801\u8868\u793a\u4e2d\u7684\u6700\u5927\u503c\u3002"},{"location":"cs_base/csapp/Lab/DataLab/#_8","title":"\u601d\u8def","text":"<p>\u5728\u4e8c\u8fdb\u5236\u8865\u7801\u8868\u793a\u4e2d\uff0c\u6700\u5927\u503c\u662f <code>0111...111</code>\u3002\u5b83\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u7279\u5f81\uff1a<code>x + 1</code> \u540e\u4f1a\u53d8\u6210 <code>1000...000</code>\uff0c\u5bf9 <code>x + 1</code> \u6309\u4f4d\u53d6\u975e\u4f1a\u5f97\u5230 <code>0111...111</code>\uff0c\u5373\u7b49\u4e8e <code>x</code>\u3002\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5f02\u6216\u64cd\u4f5c\u6765\u5224\u65ad\u4e24\u4e2a\u6570\u662f\u5426\u76f8\u7b49\uff0c\u56e0\u4e3a\u81ea\u5df1\u4e0e\u81ea\u5df1\u5f02\u6216\u4f1a\u5f97\u5230 0\u3002</p> <p>\u4f46\u662f\uff0c\u6709\u4e00\u4e2a\u4f8b\u5916\u60c5\u51b5\u9700\u8981\u6ce8\u610f\uff0c\u5f53 <code>x = -1</code> \u65f6\uff0c<code>x + 1 = 0</code>\uff0c\u6309\u4f4d\u53d6\u975e\u540e\u4e5f\u7b49\u4e8e <code>x</code>\uff0c\u4f46 <code>-1</code> \u5e76\u4e0d\u662f\u6700\u5927\u503c\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6392\u9664\u8fd9\u79cd\u60c5\u51b5\u3002</p>"},{"location":"cs_base/csapp/Lab/DataLab/#_9","title":"\u7b54\u6848","text":"C<pre><code>int isTmax(int x)\n{\n  return !(~(x + 1) ^ x) &amp; !!(x + 1);\n}\n</code></pre>"},{"location":"cs_base/csapp/Lab/DataLab/#34-alloddbits","title":"3.4 allOddBits","text":""},{"location":"cs_base/csapp/Lab/DataLab/#_10","title":"\u63cf\u8ff0","text":"Text Only<pre><code>/*\n * allOddBits - return 1 if all odd-numbered bits in word set to 1\n *   where bits are numbered from 0 (least significant) to 31 (most significant)\n *   Examples allOddBits(0xFFFFFFFD) = 0, allOddBits(0xAAAAAAAA) = 1\n *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;\n *   Max ops: 12\n *   Rating: 2\n */\n</code></pre> <p>\u672c\u9898\u8981\u6c42\u5224\u65ad\u4e00\u4e2a\u6570\u7684\u6240\u6709\u5947\u6570\u4f4d\uff08\u4ece\u53f3\u5230\u5de6\u4f9d\u6b21\u7f16\u53f7\u4e3a 0\u30011\u30012\u30013...\uff09\u662f\u5426\u90fd\u4e3a 1\u3002</p>"},{"location":"cs_base/csapp/Lab/DataLab/#_11","title":"\u601d\u8def","text":"<p>\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u5178\u578b\u7684\u6570 <code>0xAAAAAAAA</code>\uff0c\u5b83\u7684\u5947\u6570\u4f4d\u5168\u4e3a 1\uff0c\u5076\u6570\u4f4d\u5168\u4e3a 0\u3002\u5982\u679c <code>x &amp; 0xAAAAAAAA == 0xAAAAAAAA</code>\uff0c\u5c31\u8bf4\u660e <code>x</code> \u7684\u6bcf\u4e00\u4e2a\u5947\u6570\u4f4d\u90fd\u662f 1\u3002</p> <p>\u7531\u4e8e\u9898\u76ee\u89c4\u5b9a\u4e0d\u80fd\u76f4\u63a5\u5b9a\u4e49 8 \u4f4d\u4ee5\u4e0a\u7684\u6570\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u4e00\u4e9b\u6280\u5de7\u6765\u6784\u9020 <code>0xAAAAAAAA</code>\u3002\u53ef\u4ee5\u5148\u5b9a\u4e49\u4e00\u4e2a 8 \u4f4d\u7684\u6570 <code>0xAA</code>\uff0c\u7136\u540e\u901a\u8fc7\u5de6\u79fb\u548c\u6309\u4f4d\u6216\u64cd\u4f5c\u6765\u5f97\u5230 32 \u4f4d\u7684 <code>0xAAAAAAAA</code>\u3002</p>"},{"location":"cs_base/csapp/Lab/DataLab/#_12","title":"\u7b54\u6848","text":"C<pre><code>int allOddBits(int x)\n{\n  int num = 0xAA;        \n  num = num &lt;&lt; 8 | num;  \n  num = num &lt;&lt; 16 | num; \n  return !((x &amp; num) ^ num);\n}\n</code></pre>"},{"location":"cs_base/csapp/Lab/DataLab/#35-negate","title":"3.5 negate","text":""},{"location":"cs_base/csapp/Lab/DataLab/#_13","title":"\u63cf\u8ff0","text":"Text Only<pre><code>/*\n * negate - return -x\n *   Example: negate(1) = -1.\n *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;\n *   Max ops: 5\n *   Rating: 2\n */\n</code></pre> \u672c\u9898\u8981\u6c42\u8fd4\u56de\u4e00\u4e2a\u6570\u7684\u76f8\u53cd\u6570\u3002"},{"location":"cs_base/csapp/Lab/DataLab/#_14","title":"\u601d\u8def","text":"<p>\u53d6\u53cd\u52a0\u4e00</p>"},{"location":"cs_base/csapp/Lab/DataLab/#_15","title":"\u7b54\u6848","text":"C<pre><code>int negate(int x)\n{\n  return ~x + 1;\n}\n</code></pre>"},{"location":"cs_base/csapp/Lab/DataLab/#36-isasciidigit","title":"3.6 isAsciiDigit","text":""},{"location":"cs_base/csapp/Lab/DataLab/#_16","title":"\u63cf\u8ff0","text":"Text Only<pre><code>/*\n * isAsciiDigit - return 1 if 0x30 &lt;= x &lt;= 0x39 (ASCII codes for characters '0' to '9')\n *   Example: isAsciiDigit(0x35) = 1.\n *            isAsciiDigit(0x3a) = 0.\n *            isAsciiDigit(0x05) = 0.\n *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;\n *   Max ops: 15\n *   Rating: 3\n */\n</code></pre> <p>\u672c\u9898\u8981\u6c42\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u5728 ASCII \u7801\u4e2d\u5b57\u7b26 '0' \u5230 '9' \u7684\u8303\u56f4\u5185\uff08\u5373 <code>0x30 &lt;= x &lt;= 0x39</code>\uff09\u3002</p>"},{"location":"cs_base/csapp/Lab/DataLab/#_17","title":"\u601d\u8def","text":"<p>\u76f4\u63a5\u5224\u65ad <code>0x30 &lt;= x &lt;= 0x39</code> \u4e0d\u592a\u5bb9\u6613\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u8f6c\u6362\u4e3a\u548c 0 \u6bd4\u8f83\u7684\u5f62\u5f0f\u3002\u5206\u522b\u8ba1\u7b97 <code>x - 0x30</code> \u548c <code>0x39 - x</code>\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u7ed3\u679c\u90fd\u5927\u4e8e\u7b49\u4e8e 0\uff0c\u5c31\u8bf4\u660e <code>x</code> \u5728\u6307\u5b9a\u8303\u56f4\u5185\u3002\u8d1f\u6570\u7684\u6700\u9ad8\u4f4d\u662f 1\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53f3\u79fb 31 \u4f4d\u6765\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u4e3a\u8d1f\u6570\u3002</p>"},{"location":"cs_base/csapp/Lab/DataLab/#_18","title":"\u7b54\u6848","text":"C<pre><code>int isAsciiDigit(int x)\n{\n  int a = 0x30, b = 0x39;\n  int num1 = x + (~a + 1); // x - a\n  int num2 = b + (~x + 1); // b - x\n  return !num1 | !num2 | (!(num1 &gt;&gt; 7) &amp; !(num2 &gt;&gt; 7));\n}\n</code></pre>"},{"location":"cs_base/csapp/Lab/DataLab/#37-conditional","title":"3.7 conditional","text":""},{"location":"cs_base/csapp/Lab/DataLab/#_19","title":"\u63cf\u8ff0","text":"Text Only<pre><code>/*\n * conditional - same as x ? y : z\n *   Example: conditional(2,4,5) = 4\n *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;\n *   Max ops: 16\n *   Rating: 3\n */\n</code></pre> <p>\u672c\u9898\u8981\u6c42\u5b9e\u73b0\u4e00\u4e2a\u6761\u4ef6\u8fd0\u7b97\u7b26\uff0c\u529f\u80fd\u7b49\u540c\u4e8e <code>x ? y : z</code>\uff0c\u5373\u5982\u679c <code>x</code> \u4e0d\u4e3a 0\uff0c\u5219\u8fd4\u56de <code>y</code>\uff1b\u5426\u5219\u8fd4\u56de <code>z</code>\u3002</p>"},{"location":"cs_base/csapp/Lab/DataLab/#_20","title":"\u601d\u8def","text":"<p>\u6211\u4eec\u53ef\u4ee5\u6839\u636e <code>x</code> \u662f\u5426\u4e3a 0 \u6765\u751f\u6210\u4e24\u4e2a\u63a9\u7801\u3002\u5f53 <code>x</code> \u4e0d\u4e3a 0 \u65f6\uff0c\u4e00\u4e2a\u63a9\u7801\u5168\u4e3a 1\uff0c\u53e6\u4e00\u4e2a\u63a9\u7801\u5168\u4e3a 0\uff1b\u5f53 <code>x</code> \u4e3a 0 \u65f6\uff0c\u4e24\u4e2a\u63a9\u7801\u7684\u60c5\u51b5\u76f8\u53cd\u3002\u7136\u540e\u5206\u522b\u7528\u8fd9\u4e24\u4e2a\u63a9\u7801\u4e0e <code>y</code> \u548c <code>z</code> \u8fdb\u884c\u6309\u4f4d\u4e0e\u64cd\u4f5c\uff0c\u6700\u540e\u5c06\u7ed3\u679c\u76f8\u52a0\u3002</p>"},{"location":"cs_base/csapp/Lab/DataLab/#_21","title":"\u7b54\u6848","text":"C<pre><code>int conditional(int x, int y, int z)\n{\n  return ((~!!x + 1) &amp; y) + ((~!x + 1) &amp; z);\n}\n</code></pre>"},{"location":"cs_base/csapp/Lab/DataLab/#38-islessorequal","title":"3.8 isLessOrEqual","text":""},{"location":"cs_base/csapp/Lab/DataLab/#_22","title":"\u63cf\u8ff0","text":"Text Only<pre><code>/*\n * isLessOrEqual - if x &lt;= y  then return 1, else return 0\n *   Example: isLessOrEqual(4,5) = 1.\n *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;\n *   Max ops: 24\n *   Rating: 3\n */\n</code></pre> <p>\u672c\u9898\u8981\u6c42\u5224\u65ad <code>x</code> \u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e <code>y</code>\uff0c\u5982\u679c\u662f\u5219\u8fd4\u56de 1\uff0c\u5426\u5219\u8fd4\u56de 0\u3002</p>"},{"location":"cs_base/csapp/Lab/DataLab/#_23","title":"\u601d\u8def","text":"<p>\u6211\u4eec\u5206\u4e24\u79cd\u60c5\u51b5\u6765\u8003\u8651\uff1a 1. \u5f53 <code>x</code> \u662f\u8d1f\u6570\uff0c<code>y</code> \u662f\u6b63\u6570\u65f6\uff0c<code>x</code> \u4e00\u5b9a\u5c0f\u4e8e <code>y</code>\u3002 2. \u8ba1\u7b97 <code>x - y</code>\uff0c\u5982\u679c <code>x - y = 0</code> \u6216\u8005 <code>x - y &lt; 0</code>\uff0c\u5219 <code>x</code> \u5c0f\u4e8e\u7b49\u4e8e <code>y</code>\u3002</p>"},{"location":"cs_base/csapp/Lab/DataLab/#_24","title":"\u7b54\u6848","text":"C<pre><code>int isLessOrEqual(int x, int y)\n{\n  int case1 = x &gt;&gt; 31 &amp; !(y &gt;&gt; 31);   // case1: x\u662f\u8d1f\u6570\uff0cy\u662f\u6b63\u6570\n  int num = x + (~y + 1);             // x - y\n  int case2 = !num | (!!(num &gt;&gt; 31)); // case2:x-y=0\u6216\u8005x-y&lt;0\n  return case1 | case2;\n}\n</code></pre>"},{"location":"cs_base/csapp/Lab/DataLab/#39-logicalneg","title":"3.9 logicalNeg","text":""},{"location":"cs_base/csapp/Lab/DataLab/#_25","title":"\u63cf\u8ff0","text":"Text Only<pre><code>/*\n * logicalNeg - implement the ! operator, using all of\n *              the legal operators except !\n *   Examples: logicalNeg(3) = 0, logicalNeg(0) = 1\n *   Legal ops: ~ &amp; ^ | + &lt;&lt; &gt;&gt;\n *   Max ops: 12\n *   Rating: 4\n */\n</code></pre> \u672c\u9898\u8981\u6c42\u4e0d\u4f7f\u7528\u903b\u8f91\u975e\u8fd0\u7b97\u7b26 <code>!</code> \u6765\u5b9e\u73b0\u903b\u8f91\u975e\u7684\u529f\u80fd\u3002"},{"location":"cs_base/csapp/Lab/DataLab/#_26","title":"\u601d\u8def","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u6570\u548c\u5b83\u7684\u76f8\u53cd\u6570\u7684\u7279\u6027\u3002\u5bf9\u4e8e\u975e\u96f6\u6570\uff0c\u5b83\u548c\u5b83\u7684\u76f8\u53cd\u6570\u7684\u6700\u9ad8\u4f4d\u81f3\u5c11\u6709\u4e00\u4e2a\u4e3a 1\uff1b\u800c\u5bf9\u4e8e 0\uff0c\u5b83\u548c\u5b83\u7684\u76f8\u53cd\u6570\u90fd\u662f 0\uff0c\u6700\u9ad8\u4f4d\u4e3a 0\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6309\u4f4d\u6216\u64cd\u4f5c\u5f97\u5230\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u5224\u65ad\u5b83\u7684\u6700\u9ad8\u4f4d\u662f\u5426\u4e3a 0\u3002</p>"},{"location":"cs_base/csapp/Lab/DataLab/#_27","title":"\u7b54\u6848","text":"C<pre><code>int logicalNeg(int x)\n{\n  int negate = ~x + 1;    // negate = -x\n  int num = x | negate;   // \u53ea\u6709\u5f53x=0\u65f6\uff0c\u6700\u9ad8\u4f4d\u4e3a0\n  return (num &gt;&gt; 31) + 1; // x=0\u65f6\uff0cnum\u6700\u9ad8\u4f4d0,return 1\n                          // x!=0  num\u6700\u9ad8\u4f4d1,return 0\n}\n</code></pre>"},{"location":"cs_base/csapp/Lab/DataLab/#310-howmanybits","title":"3.10 howManyBits","text":"<p>\u63cf\u8ff0 </p>Text Only<pre><code>/* howManyBits - return the minimum number of bits required to represent x in\n *             two's complement\n *  Examples: howManyBits(12) = 5\n *            howManyBits(298) = 10\n *            howManyBits(-5) = 4\n *            howManyBits(0)  = 1\n *            howManyBits(-1) = 1\n *            howManyBits(0x80000000) = 32\n *  Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;\n *  Max ops: 90\n *  Rating: 4\n */\n</code></pre> \u601d\u8def - \u9898\u76ee\u8981\u6c42\u5b9e\u73b0\u4e00\u4e2a <code>howManyBits</code> \u51fd\u6570\uff0c\u7528\u4e8e\u8fd4\u56de\u7528\u8865\u7801\u8868\u793a\u4e00\u4e2a\u6574\u6570 <code>x</code> \u6240\u9700\u7684\u6700\u5c11\u4f4d\u6570\u3002\u4e00\u5f00\u59cb\u770b\u5230\u6700\u5927\u64cd\u4f5c\u6570\u9650\u5236\u4e3a 90\uff08<code>Max ops: 90</code>\uff09\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u4f7f\u7528\u66b4\u529b\u89e3\u6cd5\u3002\u901a\u8fc7\u5faa\u73af\uff0c\u5bf9 <code>x</code> \u8fdb\u884c\u53f3\u79fb\u64cd\u4f5c\uff0c\u4f7f\u7528 <code>!!(x &gt;&gt; i)</code> \u6765\u5224\u65ad\u7b2c <code>i</code> \u4f4d\u662f\u5426\u4e3a 1\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u7ed3\u679c\u7d2f\u52a0\uff0c\u5176\u4e2d <code>i</code> \u4ece 1 \u5230 31\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u64cd\u4f5c\u6570\u8d85\u8fc7\u9650\u5236\uff0c\u56e0\u4e3a\u5faa\u73af\u548c\u5224\u65ad\u64cd\u4f5c\u4f1a\u6d88\u8017\u5927\u91cf\u7684\u64cd\u4f5c\u6570\u3002\u4e3a\u4e86\u4f18\u5316\u7b97\u6cd5\uff0c\u6211\u60f3\u5230\u53ef\u4ee5\u91c7\u7528\u4e8c\u5206\u641c\u7d22\u7684\u601d\u60f3\u3002 - \u4f7f\u7528 <code>!!(x &gt;&gt; 16)</code> \u6765\u5224\u65ad <code>x</code> \u7684\u9ad8 16 \u4f4d\u662f\u5426\u5b58\u5728 1\u3002<code>x &gt;&gt; 16</code> \u5c06 <code>x</code> \u53f3\u79fb 16 \u4f4d\uff0c\u628a\u9ad8 16 \u4f4d\u79fb\u5230\u4f4e 16 \u4f4d\uff0c\u7136\u540e\u4f7f\u7528 <code>!!</code> \u64cd\u4f5c\u5c06\u7ed3\u679c\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\uff080 \u6216 1\uff09\u3002\u518d\u5c06\u8fd9\u4e2a\u5e03\u5c14\u503c\u5de6\u79fb 4 \u4f4d\uff08\u76f8\u5f53\u4e8e\u4e58\u4ee5 16\uff09\uff0c\u5f97\u5230 <code>b16</code>\u3002\u5982\u679c\u9ad8 16 \u4f4d\u5b58\u5728 1\uff0c\u5219 <code>b16</code> \u4e3a 16\uff1b\u5426\u5219\u4e3a 0\u3002\uff08\u6211\u5f53\u65f6\u6ca1\u60f3\u5230\u5de6\u79fb4\u4f4d\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6240\u4ee5\u7b54\u6848\u501f\u9274\u4e86\u7f51\u4e0a\u7684\u601d\u8def\uff09 - \u5bf9\u4e8e\u8d1f\u6570\uff0c\u5728\u8865\u7801\u8868\u793a\u4e0b\uff0c\u5176\u6700\u9ad8\u4f4d\u662f 1\uff0c\u5e76\u4e14\u8d1f\u6570\u7684\u8865\u7801\u5f62\u5f0f\u4e0d\u5229\u4e8e\u76f4\u63a5\u786e\u5b9a\u6700\u9ad8\u4f4d 1 \u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4f4d\u8fd0\u7b97\u5c06\u8d1f\u6570\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6b63\u6570\u5f62\u5f0f\u3002\u901a\u8fc7 <code>x &gt;&gt; 31</code> \u5f97\u5230\u7b26\u53f7\u4f4d\u4fe1\u606f\uff0c\u5982\u679c <code>x</code> \u662f\u8d1f\u6570\uff0c<code>x &gt;&gt; 31</code> \u7684\u7ed3\u679c\u4e3a\u5168 1\uff08\u5373 -1\uff09\uff1b\u5982\u679c <code>x</code> \u662f\u6b63\u6570\uff0c\u7ed3\u679c\u4e3a\u5168 0\u3002 - \u4f7f\u7528 <code>(flag &amp; ~x) | (~flag &amp; x)</code> \u8fdb\u884c\u5904\u7406\uff0c\u5f53 <code>x</code> \u4e3a\u8d1f\u6570\u65f6\uff0c\u76f8\u5f53\u4e8e\u5bf9 <code>x</code> \u6309\u4f4d\u53d6\u53cd\uff1b\u5f53 <code>x</code> \u4e3a\u6b63\u6570\u65f6\uff0c<code>x</code> \u4fdd\u6301\u4e0d\u53d8\u3002\u8fd9\u6837\u5c31\u7edf\u4e00\u4e86\u6b63\u6570\u548c\u8d1f\u6570\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u65b9\u4fbf\u540e\u7eed\u67e5\u627e\u6700\u9ad8\u4f4d 1 \u7684\u4f4d\u7f6e\u3002 \u7b54\u6848 C<pre><code>int howManyBits(int x)\n{\n  int b16, b8, b4, b2, b1, b0;\n  int flag = x &gt;&gt; 31;\n  x = (flag &amp; ~x) | (~flag &amp; x); // x\u4e3a\u975e\u6b63\u6570\u5219\u4e0d\u53d8 ,x \u4e3a\u8d1f\u6570 \u5219\u76f8\u5f53\u4e8e\u6309\u4f4d\u53d6\u53cd\n  b16 = !!(x &gt;&gt; 16) &lt;&lt; 4;        // \u5982\u679c\u9ad816\u4f4d\u4e0d\u4e3a0,\u5219\u6211\u4eec\u8ba9b16=16\n  x &gt;&gt;= b16;                     // \u5982\u679c\u9ad816\u4f4d\u4e0d\u4e3a0 \u5219\u6211\u4eec\u53f3\u79fb\u52a816\u4f4d \u6765\u770b\u9ad816\u4f4d\u7684\u60c5\u51b5\n  // \u4e0b\u9762\u8fc7\u7a0b\u57fa\u672c\u7c7b\u4f3c\n  b8 = !!(x &gt;&gt; 8) &lt;&lt; 3;\n  x &gt;&gt;= b8;\n  b4 = !!(x &gt;&gt; 4) &lt;&lt; 2;\n  x &gt;&gt;= b4;\n  b2 = !!(x &gt;&gt; 2) &lt;&lt; 1;\n  x &gt;&gt;= b2;\n  b1 = !!(x &gt;&gt; 1);\n  x &gt;&gt;= b1;\n  b0 = x;\n  b0 = x;\n  return b16 + b8 + b4 + b2 + b1 + b0 + 1;\n}\n</code></pre> <p>\u5269\u4e0b3\u9053float\u7684\u9898\uff0c\u6211\u8fd8\u6ca1\u5b66\u5230\uff0c\u5148\u6b20\u7740</p>"},{"location":"cs_base/csapp/Lab/DataLab/#references","title":"References","text":"<ol> <li>CSAPP:Lab1 -DataLab \u8d85\u8be6\u89e3 - \u77e5\u4e4e</li> <li>CSAPP:Lab0 -Docker\u642d\u5efa\u7eaf\u51c0Linux\u73af\u5883 - \u77e5\u4e4e</li> </ol>"},{"location":"cs_base/csapp/lecture/01/","title":"Great Reality","text":""},{"location":"cs_base/csapp/lecture/01/#great-reality","title":"Great Reality","text":"<p> \u7ea6 873 \u4e2a\u5b57  10 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"cs_base/csapp/lecture/01/#1-ints-are-not-integers-floats-are-not-reals","title":"1. Ints are not Integers, Floats are not Reals","text":""},{"location":"cs_base/csapp/lecture/01/#int","title":"\u6574\u6570\uff08Int\uff09\u8303\u56f4\u6709\u9650","text":"<ul> <li>\u6709\u9650\u8303\u56f4\uff1a\u6574\u6570\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u8868\u793a\u662f\u6709\u8303\u56f4\u7684\uff0c\u8fd9\u4e2a\u8303\u56f4\u53d6\u51b3\u4e8e\u6570\u636e\u7c7b\u578b\u7684\u4f4d\u6570\uff08\u5982 <code>int</code> \u901a\u5e38\u662f 32 \u4f4d\u6216 16 \u4f4d\uff09\u3002\u8d85\u51fa\u8303\u56f4\u65f6\u4f1a\u5bfc\u81f4 \u6ea2\u51fa\uff0c\u51fa\u73b0\u610f\u60f3\u4e0d\u5230\u7684\u7ed3\u679c\u3002<ul> <li>\u8865\u7801\u7684\u4f5c\u7528\uff1a\u6ea2\u51fa\u540e\u6570\u503c\u4f1a\u6309\u7167\u8865\u7801\u89c4\u5219\u53d8\u6210\u8d1f\u6570\u3002\u4f8b\u5982\uff1a\u5bf9\u4e8e 16 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\uff0c<code>32767 + 1</code> \u4f1a\u53d8\u6210 <code>-32768</code>\u3002</li> <li>\u6ce8\u610f\u4e8b\u9879\uff1a\u5728\u8fdb\u884c\u6574\u6570\u8fd0\u7b97\u65f6\u9700\u8003\u8651\u6ea2\u51fa\u7684\u53ef\u80fd\u6027\uff0c\u7279\u522b\u662f\u5faa\u73af\u8ba1\u6570\u5668\u6216\u6d89\u53ca\u6781\u5927\u6570\u503c\u7684\u64cd\u4f5c\u3002</li> </ul> </li> </ul>"},{"location":"cs_base/csapp/lecture/01/#float","title":"\u6d6e\u70b9\u6570\uff08Float\uff09\u4e0d\u7b49\u4e8e\u5b9e\u6570","text":"<ul> <li>\u820d\u5165\u8bef\u5dee\uff1a\u6d6e\u70b9\u6570\u91c7\u7528\u4e8c\u8fdb\u5236\u8fd1\u4f3c\u8868\u793a\uff0c\u5bfc\u81f4\u65e0\u6cd5\u7cbe\u786e\u8868\u793a\u67d0\u4e9b\u5b9e\u6570\u3002\u4f8b\u5982\uff0c<code>0.1</code> \u5728\u6d6e\u70b9\u6570\u4e2d\u4e0d\u80fd\u88ab\u7cbe\u786e\u5b58\u50a8\uff0c\u4f1a\u4ea7\u751f\u5fae\u5c0f\u8bef\u5dee\u3002</li> <li>\u6ce8\u610f\u4e8b\u9879\uff1a\u8ba1\u7b97\u65f6\u907f\u514d\u76f4\u63a5\u6bd4\u8f83\u4e24\u4e2a\u6d6e\u70b9\u6570\uff0c\u4f7f\u7528\u8bef\u5dee\u8303\u56f4\u8fdb\u884c\u6bd4\u8f83\u66f4\u53ef\u9760\u3002</li> </ul>"},{"location":"cs_base/csapp/lecture/01/#2-assembly","title":"2. \u4f60\u5fc5\u987b\u4e86\u89e3\u6c47\u7f16\u8bed\u8a00\uff08Assembly\uff09","text":"<ul> <li>\u91cd\u8981\u6027\uff1a<ul> <li>\u5373\u4f7f\u4e0d\u76f4\u63a5\u7f16\u5199\u6c47\u7f16\u8bed\u8a00\uff0c\u7406\u89e3\u5176\u539f\u7406\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u5730\u7406\u89e3\u7a0b\u5e8f\u7684\u5e95\u5c42\u8fd0\u884c\u673a\u5236\u3002</li> <li>\u7f16\u8bd1\u5668\u751f\u6210\u7684\u673a\u5668\u7801\u548c CPU \u6307\u4ee4\u4f18\u5316\u90fd\u4e0e\u6c47\u7f16\u8bed\u8a00\u5bc6\u5207\u76f8\u5173\u3002</li> </ul> </li> <li>\u7528\u9014\uff1a<ul> <li>\u5206\u6790\u6027\u80fd\u74f6\u9888\uff1a\u901a\u8fc7\u53cd\u6c47\u7f16\u4ee3\u7801\u53ef\u4ee5\u4e86\u89e3\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u3002</li> <li>\u8c03\u8bd5\u590d\u6742\u95ee\u9898\uff1a\u6709\u65f6\u9700\u8981\u901a\u8fc7\u6c47\u7f16\u7ea7\u522b\u5206\u6790\u7a0b\u5e8f\u884c\u4e3a\u3002</li> <li>\u7406\u89e3\u5185\u5b58\u5e03\u5c40\u548c\u6307\u9488\u64cd\u4f5c\uff1a\u8fd9\u4e9b\u90fd\u5728\u6c47\u7f16\u7ea7\u522b\u4f53\u73b0\u5f97\u66f4\u76f4\u89c2\u3002</li> </ul> </li> </ul>"},{"location":"cs_base/csapp/lecture/01/#3-memory","title":"3. Memory \u5f88\u91cd\u8981","text":"<ul> <li>\u5185\u5b58\u7ba1\u7406\u4e0e\u4fdd\u62a4\uff1a<ul> <li>C \u548c C++ \u7f3a\u4e4f\u5185\u7f6e\u7684\u5185\u5b58\u4fdd\u62a4\u673a\u5236\uff0c\u5bb9\u6613\u51fa\u73b0 \u7f13\u51b2\u533a\u6ea2\u51fa\uff08Buffer Overflow\uff09 \u6216 \u60ac\u6302\u6307\u9488\uff08Dangling Pointer\uff09 \u7b49\u95ee\u9898\u3002</li> <li>\u7f16\u5199 C/C++ \u7a0b\u5e8f\u65f6\u9700\u7279\u522b\u5c0f\u5fc3\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\u3002</li> </ul> </li> <li>\u73b0\u4ee3\u8bed\u8a00\u7684\u6539\u8fdb\uff1a\u8bb8\u591a\u73b0\u4ee3\u8bed\u8a00\uff08\u5982 Java \u548c Python\uff09\u901a\u8fc7\u5783\u573e\u56de\u6536\uff08Garbage Collection\uff09\u548c\u5185\u5b58\u5b89\u5168\u68c0\u67e5\u907f\u514d\u4e86\u8fd9\u4e9b\u95ee\u9898\uff0c\u4f46\u4e86\u89e3\u5e95\u5c42\u5185\u5b58\u539f\u7406\u4f9d\u7136\u975e\u5e38\u91cd\u8981\u3002</li> </ul>"},{"location":"cs_base/csapp/lecture/01/#4","title":"4. \u6027\u80fd\u4e0d\u4ec5\u4ec5\u662f\u6e10\u8fd1\u590d\u6742\u6027","text":""},{"location":"cs_base/csapp/lecture/01/#asymptotic-complexity","title":"\u6e10\u8fd1\u590d\u6742\u6027\uff08Asymptotic Complexity\uff09\uff1a","text":"<ul> <li>\u5e38\u7528\u5927 O \u8868\u793a\u6cd5\u8bc4\u4f30\u7b97\u6cd5\u7684\u6027\u80fd\uff0c\u4f46\u5728\u5b9e\u9645\u573a\u666f\u4e2d\uff0c\u6027\u80fd\u4e0d\u4ec5\u4ec5\u7531\u6e10\u8fd1\u590d\u6742\u6027\u51b3\u5b9a\u3002</li> </ul>"},{"location":"cs_base/csapp/lecture/01/#_1","title":"\u793a\u4f8b\uff1a\u6570\u7ec4\u7684\u8bbf\u95ee\u6a21\u5f0f","text":"<p>\u4ee5\u4e0b\u4e24\u6bb5\u4ee3\u7801\u529f\u80fd\u76f8\u540c\uff0c\u4f46\u6027\u80fd\u5dee\u5f02\u663e\u8457\uff1a</p> C<pre><code>for(int i = 0; i &lt; 1000; i++) {\n    for (int j = 0; j &lt; 1000; j++) {\n        arr[i][j] = 1;\n    }\n}\n</code></pre> C<pre><code>for(int j = 0; j &lt; 1000; j++) {\n    for (int i = 0; i &lt; 1000; i++) {\n        arr[i][j] = 1;\n    }\n}\n</code></pre> <ul> <li>\u524d\u8005\u7684\u6548\u7387\u66f4\u9ad8\uff1a\u56e0\u4e3a\u524d\u8005\u6309\u7167\u5185\u5b58\u7684\u8fde\u7eed\u5730\u5740\u8bbf\u95ee\uff08\u884c\u4f18\u5148\uff09\uff0c\u7b26\u5408 CPU \u7f13\u5b58\u7684\u8bfb\u53d6\u7279\u6027\u3002</li> <li>\u540e\u8005\u6548\u7387\u4f4e\u4e0b\uff1a\u5217\u4f18\u5148\u8bbf\u95ee\u4f1a\u5bfc\u81f4\u9891\u7e41\u7684\u7f13\u5b58\u672a\u547d\u4e2d\uff08Cache Miss\uff09\u3002</li> </ul>"},{"location":"cs_base/csapp/lecture/01/#_2","title":"\u6027\u80fd\u4f18\u5316\u6ce8\u610f\u70b9\uff1a","text":"<ul> <li>\u6570\u636e\u7684\u5c40\u90e8\u6027\uff08Locality\uff09\u5bf9\u6027\u80fd\u7684\u5f71\u54cd\u5f88\u5927\u3002</li> <li>\u9664\u4e86\u7b97\u6cd5\u672c\u8eab\uff0c\u786c\u4ef6\u7279\u6027\uff08\u5982\u7f13\u5b58\u5c42\u6b21\u7ed3\u6784\u548c\u5185\u5b58\u5bf9\u9f50\uff09\u4e5f\u9700\u8981\u5173\u6ce8\u3002</li> </ul>"},{"location":"cs_base/csapp/lecture/01/#5","title":"5. \u8ba1\u7b97\u673a\u4e0d\u4ec5\u4ec5\u6267\u884c\u7a0b\u5e8f","text":"<ul> <li> <p>\u591a\u529f\u80fd\u6027\uff1a\u8ba1\u7b97\u673a\u4e0d\u4ec5\u4ec5\u662f\u6267\u884c\u7a0b\u5e8f\u7684\u673a\u5668\uff0c\u5b83\u4eec\u8fd8\u652f\u6301\uff1a</p> <ul> <li>\u5e76\u884c\u5904\u7406\uff1a\u540c\u65f6\u5904\u7406\u591a\u4e2a\u4efb\u52a1\u6216\u7a0b\u5e8f\uff0c\u5145\u5206\u5229\u7528\u591a\u6838\u67b6\u6784\u3002</li> <li>\u865a\u62df\u5316\uff1a\u901a\u8fc7\u865a\u62df\u673a\u5b9e\u73b0\u8d44\u6e90\u9694\u79bb\u548c\u591a\u64cd\u4f5c\u7cfb\u7edf\u5171\u5b58\u3002</li> <li>\u786c\u4ef6\u52a0\u901f\uff1a\u5229\u7528 GPU\u3001FPGA \u7b49\u786c\u4ef6\u5355\u5143\u63d0\u5347\u7279\u5b9a\u4efb\u52a1\u7684\u6548\u7387\u3002</li> <li>\u7f51\u7edc\u4ea4\u4e92\uff1a\u5904\u7406\u5927\u91cf\u6570\u636e\u4ea4\u4e92\u548c\u901a\u4fe1\u4efb\u52a1\uff0c\u4f8b\u5982\u670d\u52a1\u5668\u8fd0\u884c HTTP \u8bf7\u6c42\u3002</li> <li> <p>\u542f\u53d1\uff1a</p> </li> <li> <p>\u7f16\u7a0b\u65f6\u4e0d\u4ec5\u8981\u5173\u6ce8\u4ee3\u7801\u903b\u8f91\uff0c\u8fd8\u9700\u8003\u8651\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u7279\u6027\u3002</p> </li> <li>\u5b66\u4e60\u4e86\u89e3\u786c\u4ef6\u548c\u7cfb\u7edf\u5c42\u9762\u77e5\u8bc6\uff0c\u6709\u52a9\u4e8e\u8bbe\u8ba1\u66f4\u9ad8\u6548\u7684\u7a0b\u5e8f\u3002</li> </ul> </li> </ul>"},{"location":"cs_base/csapp/lecture/02/","title":"Bits, Bytes, and Integer","text":""},{"location":"cs_base/csapp/lecture/02/#bits-bytes-and-integer","title":"Bits, Bytes, and Integer","text":"<p> \u7ea6 913 \u4e2a\u5b57  3 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p>"},{"location":"cs_base/csapp/lecture/02/#1-64","title":"1. 64\u4f4d\u673a\u5668\u7684\u542b\u4e49","text":"<p>\u5f53\u8bf4\u201c64\u4f4d\u673a\u5668\u201d\u65f6\uff0c\u6307\u7684\u662f\u8be5\u8ba1\u7b97\u673a\u7684\u5730\u5740\u603b\u7ebf\u5bbd\u5ea6\u4e3a64\u4f4d\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u7684\u5185\u5b58\u5730\u5740\u662f64\u4f4d\u957f\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8ba1\u7b97\u673a\u53ef\u4ee5\u5bfb\u5740\u7684\u5185\u5b58\u7a7a\u95f4\u6700\u591a\u4e3a 2^[64]\u4e2a\u5730\u5740\u3002</p>"},{"location":"cs_base/csapp/lecture/02/#2","title":"2. \u4f4d\u8fd0\u7b97\u96c6\u5408\u7406\u89e3","text":"<p>\u4f4d\u64cd\u4f5c\u662f\u5bf9\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u76f4\u63a5\u64cd\u4f5c\u3002\u6bd4\u5982\uff1a</p> <ul> <li>\u4e0e\uff08AND\uff09\uff1a\u4e24\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u90fd\u4e3a1\u65f6\u7ed3\u679c\u624d\u4e3a1\u3002</li> <li>\u6216\uff08OR\uff09\uff1a\u4e24\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u53ea\u8981\u6709\u4e00\u4e2a\u4e3a1\u7ed3\u679c\u5c31\u4e3a1\u3002</li> <li>\u975e\uff08NOT\uff09\uff1a\u5c06\u4e8c\u8fdb\u5236\u4f4d\u53cd\u8f6c\uff081\u53d80\uff0c0\u53d81\uff09\u3002</li> <li>\u5f02\u6216\uff08XOR\uff09\uff1a\u4e24\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u76f8\u540c\u5219\u7ed3\u679c\u4e3a0\uff0c\u4e0d\u540c\u5219\u7ed3\u679c\u4e3a1\u3002</li> </ul> <p>\u96c6\u5408\u7406\u89e3\u5c31\u662f\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u770b\u4f5c\u96c6\u5408\u8fd0\u7b97\uff0c\u6bd4\u5982\uff1a</p> <ul> <li>AND \u5c31\u50cf\u96c6\u5408\u7684\u4ea4\u96c6</li> <li>OR \u5c31\u50cf\u96c6\u5408\u7684\u5e76\u96c6</li> <li>XOR \u5c31\u50cf\u96c6\u5408\u7684\u5bf9\u79f0\u5dee\uff08\u4e0d\u540c\u7684\u5143\u7d20\u96c6\u5408\uff09</li> </ul>"},{"location":"cs_base/csapp/lecture/02/#3-shift-operations","title":"3. \u4f4d\u79fb\u64cd\u4f5c\uff08Shift operations\uff09","text":"<ul> <li> <p>\u5de6\u79fb (<code>&lt;&lt;</code>)\uff1a\u6570\u5b57\u5de6\u79fb\u76f8\u5f53\u4e8e\u4e58\u4ee5 2 \u7684\u67d0\u6b21\u65b9\u3002\u79fb\u4f4d\u7684\u4f4d\u6570\u5373\u4e3a\u8be5\u6b21\u6570\u3002\u4f8b\u5982 <code>x &lt;&lt; 8</code>\uff0c\u610f\u5473\u7740\u5c06x\u7684\u503c\u4e58\u4ee5 2^8\u3002</p> </li> <li> <p>\u7b97\u672f\u79fb\u4f4d\u4e0e\u903b\u8f91\u79fb\u4f4d\uff1a</p> <ul> <li>\u903b\u8f91\u79fb\u4f4d\uff1a\u4e0d\u7ba1\u7b26\u53f7\u4f4d\uff0c\u76f4\u63a5\u79fb\u4f4d\u3002</li> <li>\u7b97\u672f\u79fb\u4f4d\uff1a\u79fb\u4f4d\u65f6\u4fdd\u6301\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u9002\u7528\u4e8e\u5e26\u7b26\u53f7\u6570\u3002</li> </ul> <p>\u533a\u522b\uff1a\u7b97\u672f\u79fb\u4f4d\u4fdd\u7559\u7b26\u53f7\uff0c\u800c\u903b\u8f91\u79fb\u4f4d\u4e0d\u8003\u8651\u7b26\u53f7\u3002</p> <p>\u5bf9\u4e8e <code>x &lt;&lt; 8</code> \u4e3a\u4ec0\u4e48\u662f <code>x * 256</code>\uff08\u800c\u4e0d\u662f <code>0</code>\uff09\uff0c\u539f\u56e0\u662f\u4f4d\u79fb\u64cd\u4f5c\u5e76\u4e0d\u6539\u53d8\u539f\u503c\uff0c\u800c\u662f\u5c06\u8be5\u503c\u5de6\u79fb\uff0c\u586b\u8865\u96f6\u3002\u5b83\u662f\u4e58\u4ee52\u76848\u6b21\u65b9\uff0c\u5373256\u3002</p> </li> </ul>"},{"location":"cs_base/csapp/lecture/02/#4-numeric-ranges","title":"4. \u6570\u5b57\u8303\u56f4\u548c\u6574\u6570\u7f16\u7801\uff08Numeric Ranges\uff09","text":"<ul> <li> <p>\u7f16\u7801\u6574\u6570\uff08B2U \u548c B2T\uff09\uff1a</p> <ul> <li><code>B2U(X)</code>\uff1a\u5c06 X \u4f5c\u4e3a\u65e0\u7b26\u53f7\u6570\uff08Unsigned\uff09\u5904\u7406\u3002</li> <li><code>B2T(X)</code>\uff1a\u5c06 X \u4f5c\u4e3a\u6709\u7b26\u53f7\u6570\uff08Signed\uff09\u5904\u7406\u3002</li> <li>\u8fd9\u4e9b\u64cd\u4f5c\u4f9d\u8d56\u4e8e\u5982\u4f55\u89e3\u91ca\u4e8c\u8fdb\u5236\u6570\uff0c<code>B2U</code> \u548c <code>B2T</code> \u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u540c\u7684\u503c\u3002</li> <li>\u8865\u7801\u516c\u5f0f\uff1a\u8d1f\u6570\u7684\u8865\u7801\u662f\u5148\u53d6\u53cd\uff0c\u7136\u540e\u52a01\u3002\u8865\u7801\u7684\u5b58\u5728\u76ee\u7684\u662f\u7edf\u4e00\u52a0\u51cf\u6cd5\u64cd\u4f5c\uff0c\u4f7f\u5f97\u8ba1\u7b97\u673a\u80fd\u7edf\u4e00\u5904\u7406\u6b63\u8d1f\u6570\u3002</li> </ul> </li> <li> <p>\u8865\u7801\u3001\u53cd\u7801\u3001\u539f\u7801\u7684\u533a\u522b\uff1a</p> <ul> <li>\u539f\u7801\uff1a\u6700\u9ad8\u4f4d\u8868\u793a\u7b26\u53f7\uff080\u4e3a\u6b63\uff0c1\u4e3a\u8d1f\uff09\u3002</li> <li>\u53cd\u7801\uff1a\u8d1f\u6570\u7684\u53cd\u7801\u662f\u5c06\u539f\u7801\u7684\u6bcf\u4e00\u4f4d\u53d6\u53cd\u3002</li> <li>\u8865\u7801\uff1a\u8d1f\u6570\u7684\u8865\u7801\u662f\u53cd\u7801\u52a01\uff0c\u5177\u6709\u65b9\u4fbf\u8ba1\u7b97\u7684\u7279\u70b9\u3002</li> </ul> <p>\u8865\u7801\u7684\u610f\u4e49\uff1a\u8865\u7801\u7b80\u5316\u4e86\u52a0\u51cf\u6cd5\u64cd\u4f5c\uff0c\u6b63\u8d1f\u6570\u7684\u52a0\u6cd5\u53ef\u4ee5\u7edf\u4e00\u5904\u7406\uff0c\u907f\u514d\u4e86\u7279\u6b8a\u5904\u7406\u8d1f\u6570\u7684\u60c5\u51b5\u3002</p> </li> </ul>"},{"location":"cs_base/csapp/lecture/02/#5-unsigned-signed-numeric-values","title":"5. \u6709\u7b26\u53f7\u4e0e\u65e0\u7b26\u53f7\u6570\u5b57\uff08Unsigned &amp; Signed Numeric Values\uff09","text":"<p>\u540c\u4e00\u4e8c\u8fdb\u5236\u8868\u793a\u5728\u6709\u7b26\u53f7\u548c\u65e0\u7b26\u53f7\u6574\u6570\u4e2d\u8868\u793a\u7684\u6570\u503c\u4e0d\u540c\u3002\u4f8b\u5982\uff1a</p> <ul> <li>\u5bf9\u4e8e <code>B2U</code> \u548c <code>B2T</code>\uff0c\u76f8\u540c\u7684\u4e8c\u8fdb\u5236\u4f4d\u5728\u6709\u7b26\u53f7\u6570\u548c\u65e0\u7b26\u53f7\u6570\u4e0b\u4f1a\u6620\u5c04\u6210\u4e0d\u540c\u7684\u503c\u3002</li> </ul>"},{"location":"cs_base/csapp/lecture/02/#6-t2u-u2t","title":"6. \u6709\u7b26\u53f7\u4e0e\u65e0\u7b26\u53f7\u4e4b\u95f4\u7684\u6620\u5c04\uff08T2U &amp; U2T\uff09","text":"<ul> <li><code>T2U</code>\uff1a\u5c06\u6709\u7b26\u53f7\u6574\u6570\u8f6c\u6362\u4e3a\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u901a\u5e38\u4f1a\u6539\u53d8\u6570\u503c\u3002</li> <li><code>U2T</code>\uff1a\u5c06\u65e0\u7b26\u53f7\u6574\u6570\u8f6c\u6362\u4e3a\u6709\u7b26\u53f7\u6574\u6570\uff0c\u4e5f\u4f1a\u5bfc\u81f4\u6570\u503c\u7684\u53d8\u5316\u3002</li> </ul>"},{"location":"cs_base/csapp/lecture/02/#7-casting-surprises","title":"7. \u7c7b\u578b\u8f6c\u6362\u4e2d\u7684\u60ca\u8bb6\uff08Casting Surprises\uff09","text":"<ul> <li>\u6bd4\u8f83\u8fc7\u7a0b\u4e2d\u7684\u7c7b\u578b\u8f6c\u6362\uff1a<ul> <li>\u5982\u679c\u5728\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u540c\u65f6\u6709\u6709\u7b26\u53f7\u548c\u65e0\u7b26\u53f7\u6570\uff0c\u5219\u6709\u7b26\u53f7\u6570\u4f1a\u9690\u5f0f\u8f6c\u6362\u4e3a\u65e0\u7b26\u53f7\u6570\u3002</li> </ul> </li> </ul> <p>\u4f8b\u5982\uff1a</p> constant1 constant2 Relation Evaluation 2147483947 -2147483947 - 1 &gt; signed 2147483947U -2147483947 - 1 &lt; unsigned (unsigned)-1 -2 &gt; unsigned 2147483947 2147483948U &lt; unsigned 2147483947 (int)2147483948U &gt; signed <p>\u8fd9\u4e9b\u6bd4\u8f83\u8fc7\u7a0b\u4e2d\uff0c<code>2147483947U</code> \u548c <code>-2147483947-1</code> \u7684\u6bd4\u8f83\u4f1a\u56e0\u4e3a\u7c7b\u578b\u4e0d\u540c\u800c\u53d1\u751f\u53d8\u5316\uff0c\u800c <code>(int)</code> \u662f\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u7528\u4e8e\u5c06\u65e0\u7b26\u53f7\u6574\u6570\u8f6c\u6362\u4e3a\u6709\u7b26\u53f7\u6574\u6570\u3002</p> 2147483947 (int)2147483948U &gt; signed - 2147483947\uff1a\u8fd9\u662f\u4e00\u4e2a\u6709\u7b26\u53f7\u6574\u6570\uff0c\u503c\u4e3a <code>2147483947</code>\u3002 - (int)2147483948U\uff1a<code>2147483948U</code> \u662f\u65e0\u7b26\u53f7\u6574\u6570 <code>2147483948</code>\uff0c\u5c06\u5176\u5f3a\u5236\u8f6c\u6362\u4e3a\u6709\u7b26\u53f7\u6574\u6570\u65f6\uff0c\u4f1a\u5c06\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u4f5c\u4e3a\u6709\u7b26\u53f7\u6570\u5904\u7406\u3002\u7531\u4e8e <code>2147483948</code> \u5927\u4e8e <code>2^31</code>\uff08\u5373 <code>2147483648</code>\uff09\uff0c\u8f6c\u6362\u4e3a\u6709\u7b26\u53f7\u6570\u65f6\u4f1a\u53d8\u6210\u8d1f\u6570\u3002 \u5b9e\u9645\u4e0a\uff0c<code>2147483948U</code> \u8f6c\u6362\u4e3a <code>int</code> \u65f6\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a\u8d1f\u6570\uff0c\u56e0\u4e3a\u4e8c\u8fdb\u5236\u8865\u7801\u8868\u793a\u8d85\u51fa\u4e86\u6709\u7b26\u53f7\u6574\u6570\u7684\u6700\u5927\u503c\u8303\u56f4\u3002\u8f6c\u6362\u540e\u7684\u7ed3\u679c\u4e3a <code>-2147483648</code>\u3002 - \u6bd4\u8f83\u8fc7\u7a0b\uff1a - <code>2147483947</code> \u662f\u6b63\u6570\uff0c\u800c <code>-2147483648</code> \u662f\u8d1f\u6570\uff0c\u56e0\u6b64\u663e\u7136\uff0c<code>2147483947</code> \u5927\u4e8e <code>-2147483648</code>\u3002 - \u6240\u4ee5\uff0c\u6bd4\u8f83\u7ed3\u679c\u662f <code>&gt;</code>\u3002 - \u6700\u540e\u4e00\u5217\uff1asigned \u8868\u793a\u4e24\u8005\u662f\u5728\u6709\u7b26\u53f7\u6570\u7684\u4e0a\u4e0b\u6587\u4e2d\u8fdb\u884c\u6bd4\u8f83\u7684\u3002 ---"},{"location":"cs_base/csapp/lecture/02/#8-casting-signed-unsigned","title":"8. \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u57fa\u672c\u89c4\u5219\uff08Casting Signed &lt;-&gt; Unsigned\uff09","text":""},{"location":"cs_base/csapp/lecture/02/#1","title":"1.\u00a0\u4f4d\u6a21\u5f0f\u4fdd\u6301","text":"<ul> <li>\u4e8c\u8fdb\u5236\u4f4d\u4e0d\u53d8\uff1a\u8f6c\u6362\u65f6\uff0c\u6570\u636e\u7684\u4e8c\u8fdb\u5236\u8868\u793a\uff08\u4f4d\u6a21\u5f0f\uff09\u5b8c\u5168\u4fdd\u7559\uff0c\u4e0d\u4f1a\u53d1\u751f\u4efb\u4f55\u6539\u53d8\u3002\u4f8b\u5982\uff0c<code>int32_t</code>\u7c7b\u578b\u7684<code>-1</code>\uff08\u4e8c\u8fdb\u5236\u4e3a<code>0xFFFFFFFF</code>\uff09\u5f3a\u5236\u8f6c\u6362\u4e3a<code>uint32_t</code>\u540e\uff0c\u4e8c\u8fdb\u5236\u4ecd\u4e3a<code>0xFFFFFFFF</code>\u3002</li> <li>\u89e3\u91ca\u65b9\u5f0f\u6539\u53d8\uff1a\u540c\u6837\u7684\u4e8c\u8fdb\u5236\u4f4d\u6a21\u5f0f\uff0c\u4f1a\u6839\u636e\u7c7b\u578b\uff08\u6709\u7b26\u53f7\u6216\u65e0\u7b26\u53f7\uff09\u88ab\u91cd\u65b0\u89e3\u91ca\u3002\u4f8b\u5982\uff1a<ul> <li>\u6709\u7b26\u53f7\u7684<code>0xFFFFFFFF</code>\uff0832\u4f4d\uff09\u8868\u793a<code>-1</code>\uff08\u8865\u7801\u89c4\u5219\uff09\u3002</li> <li>\u65e0\u7b26\u53f7\u7684<code>0xFFFFFFFF</code>\u5219\u8868\u793a<code>4294967295</code>\u3002</li> </ul> </li> </ul>"},{"location":"cs_base/csapp/lecture/02/#2_1","title":"2.\u00a0\u6570\u503c\u7684\u91cd\u65b0\u8ba1\u7b97","text":"<p>\u8f6c\u6362\u540e\u7684\u6570\u503c\u53ef\u80fd\u901a\u8fc7\u52a0\u51cf<code>2^w</code>\uff08<code>w</code>\u662f\u7c7b\u578b\u7684\u4f4d\u6570\uff0c\u598232\u4f4d\u4e2d\u7684<code>2^32</code>\uff09\u8fdb\u884c\u8c03\u6574\uff1a</p>"},{"location":"cs_base/csapp/lecture/02/#_1","title":"\u901a\u4fd7\u603b\u7ed3","text":"<ul> <li>\u4f4d\u6a21\u5f0f\u662f\u201c\u7269\u7406\u201d\u7684\uff1a\u8f6c\u6362\u65f6\u4e8c\u8fdb\u5236\u4f4d\u539f\u5c01\u4e0d\u52a8\u3002</li> <li>\u6570\u503c\u662f\u201c\u903b\u8f91\u201d\u7684\uff1a\u6839\u636e\u7c7b\u578b\u89c4\u5219\u91cd\u65b0\u8ba1\u7b97\u6570\u503c\u3002\u8d1f\u6570\u8f6c\u65e0\u7b26\u53f7\u4f1a\u201c\u7ed5\u5230\u201d\u5927\u6b63\u6570\uff0c\u5927\u65e0\u7b26\u53f7\u6570\u8f6c\u6709\u7b26\u53f7\u4f1a\u201c\u7ed5\u5230\u201d\u8d1f\u6570\uff0c\u5c31\u50cf\u949f\u8868\u8d85\u8fc712\u70b9\u4f1a\u56de\u52301\u70b9\u4e00\u6837\u3002</li> </ul>"},{"location":"cs_base/csapp/lecture/02/#9","title":"9. \u8d1f\u6570\u4e0d\u5bf9\u79f0\u7684\u539f\u56e0","text":"<p>\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6b63\u8d1f\u6570\u7684\u8868\u793a\u65b9\u5f0f\u5e76\u4e0d\u5bf9\u79f0\u30020\u662f\u4e2d\u70b9\uff0c\u8d1f\u6570\u6ca1\u6709\u5bf9\u5e94\u7684\u6b63\u6570\uff0c\u6700\u9ad8\u4f4d\u88ab\u7528\u6765\u8868\u793a\u7b26\u53f7\u3002</p> <p>\u4f8b\u5982\uff0cTMIN\uff08\u6700\u5c0f\u8d1f\u6570\uff09\u6ca1\u6709\u5bf9\u5e94\u7684-TMIN\uff0c\u6240\u4ee5 <code>if(x &lt; 0) return -x;</code> \u53ef\u80fd\u4f1a\u5bfc\u81f4 <code>TMIN</code> \u4e0d\u4f1a\u8fd4\u56de\u5176\u5bf9\u5e94\u7684\u8d1f\u6570\u503c\uff0c\u800c\u662f\u8fd4\u56deTMIN\u4ed6\u672c\u8eab</p>"},{"location":"cs_base/csapp/lecture/02/#10","title":"10. \u5de6\u79fb\u7684\u89e3\u91ca","text":"<p>\u5de6\u79fb\u64cd\u4f5c\u5c06\u4e00\u4e2a\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u4f4d\u5411\u5de6\u79fb\u52a8\uff0c\u6bcf\u6b21\u5de6\u79fb\u4e00\u4f4d\u76f8\u5f53\u4e8e\u5c06\u6570\u5b57\u4e58\u4ee52\u3002</p>"},{"location":"cs_base/csapp/lecture/02/#11","title":"11. \u4e09\u5217\u8868\u95ee\u9898","text":"<p>\u4e09\u5217\u8868\u662f\u6307\u5faa\u73af\u4e2d\u5224\u65ad\u7684\u6761\u4ef6\u63a7\u5236\uff0c\u4f8b\u5982\u5728\u4e0b\u9762\u7684\u5faa\u73af\u4e2d\uff1a </p>C<pre><code>for (i = 8; i &gt;= 0; i--){     \n    // something \n}\n</code></pre> \u5982\u679c <code>i</code> \u662f\u65e0\u7b26\u53f7\u6574\u6570\uff0c<code>i &gt;= 0</code> \u4f1a\u59cb\u7ec8\u4e3a\u771f\uff0c\u5bfc\u81f4\u6b7b\u5faa\u73af\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a\u5c06 <code>i &gt;= 0</code> \u6539\u4e3a <code>i - sizeof(char) &gt;= 0</code>\uff0c\u8fd9\u662f\u56e0\u4e3a <code>sizeof(char)</code> \u662f\u65e0\u7b26\u53f7\u7684\u3002"},{"location":"cs_base/csapp/lecture/02/#12-sign-extension","title":"12. \u7b26\u53f7\u6269\u5c55\uff08Sign Extension\uff09","text":"<p>\u7b26\u53f7\u6269\u5c55\u662f\u5c06\u4e00\u4e2a w \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\u6269\u5c55\u4e3a\u66f4\u9ad8\u4f4d\u6570\u7684\u6574\u6570\u65f6\uff0c\u4fdd\u6301\u7b26\u53f7\u4f4d\u4e0d\u53d8\u3002\u6269\u5c55\u7684\u9ad8\u4f4d\u586b\u5145\u539f\u6765\u7b26\u53f7\u4f4d\u7684\u503c\u3002</p>"},{"location":"cs_base/csapp/lecture/02/#13-truncating","title":"13. \u622a\u65ad\uff08Truncating\uff09","text":"<p>\u622a\u65ad\u662f\u53bb\u6389\u8d85\u51fa\u90e8\u5206\u7684\u4f4d\uff0c\u7c7b\u4f3c\u6a21\u8fd0\u7b97\u3002\u4f8b\u5982\uff0c\u4fdd\u7559\u4f4e8\u4f4d\uff0c\u53ef\u4ee5\u901a\u8fc7\u6a21\u8fd0\u7b97 <code>x % (2^8)</code> \u6765\u5b8c\u6210\u3002</p>"},{"location":"cs_base/csapp/lecture/03/","title":"Bits, Bytes, and Integers cont","text":""},{"location":"cs_base/csapp/lecture/03/#bits-bytes-and-integers-cont","title":"Bits, Bytes, and Integers cont","text":"<p> \u7ea6 1526 \u4e2a\u5b57  3 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p>"},{"location":"cs_base/csapp/lecture/03/#1-unsigned-addition","title":"1. \u65e0\u7b26\u53f7\u52a0\u6cd5\uff08Unsigned Addition\uff09","text":"<ul> <li>\u4e0d\u80fd\u65e0\u9650\u5236\u5730\u589e\u52a0\uff0c\u4e22\u5f03\u8fdb\u4f4d\uff08discard carry\uff09<ul> <li>\u539f\u56e0\uff1a\u8ba1\u7b97\u673a\u7684\u5185\u5b58\u662f\u6709\u9650\u7684\uff0c\u6bcf\u4e2a\u6570\u53ea\u80fd\u5360\u7528\u56fa\u5b9a\u7684\u4f4d\u6570\uff08\u6bd4\u5982 32 \u4f4d\u6216 64 \u4f4d\uff09\u3002\u5f53\u4e24\u4e2a\u6570\u76f8\u52a0\u7684\u7ed3\u679c\u8d85\u8fc7\u4e86\u8fd9\u4e2a\u4f4d\u6570\u80fd\u8868\u793a\u7684\u8303\u56f4\uff0c\u8d85\u51fa\u7684\u90e8\u5206\uff08\u8fdb\u4f4d\uff09\u5c31\u4f1a\u88ab\u4e22\u5f03\u3002</li> <li>\u516c\u5f0f\uff1a \\( u + v \\mod 2^w \\)   \u5176\u4e2d\uff0c\\( w \\) \u662f\u4f4d\u5bbd\uff08\u6bd4\u5982 32 \u4f4d\u6216 64 \u4f4d\uff09\u3002\u8fd9\u4e2a\u516c\u5f0f\u7684\u610f\u601d\u662f\uff0c\u52a0\u6cd5\u7ed3\u679c\u53ea\u4fdd\u7559 \\( w \\) \u4f4d\uff0c\u8d85\u51fa\u7684\u90e8\u5206\u4f1a\u88ab\u4e22\u5f03\u3002</li> <li>\u6ea2\u51fa\uff08Overflow\uff09\uff1a\u5f53\u4e24\u4e2a\u65e0\u7b26\u53f7\u6570\u76f8\u52a0\u7684\u7ed3\u679c\u8d85\u8fc7\u4e86 \\( 2^w - 1 \\) \u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u6ea2\u51fa\u3002\u6bd4\u5982\uff0c8 \u4f4d\u65e0\u7b26\u53f7\u6570\u7684\u6700\u5927\u503c\u662f 255\uff0c\u5982\u679c\u4e24\u4e2a\u6570\u76f8\u52a0\u8d85\u8fc7\u4e86 255\uff0c\u7ed3\u679c\u5c31\u4f1a\u6ea2\u51fa\u3002</li> </ul> </li> </ul> <p>\u8bf4\u4eba\u8bdd\uff1a\u65e0\u7b26\u53f7\u52a0\u6cd5\u5c31\u50cf\u4f60\u5728\u4e00\u4e2a\u53ea\u80fd\u663e\u793a 3 \u4f4d\u6570\u5b57\u7684\u8ba1\u7b97\u5668\u4e0a\u505a\u52a0\u6cd5\u3002\u5982\u679c\u4f60\u52a0 999 + 1\uff0c\u8ba1\u7b97\u5668\u4f1a\u663e\u793a 000\uff0c\u800c\u4e0d\u662f 1000\uff0c\u56e0\u4e3a\u6700\u9ad8\u4f4d\u7684 1 \u88ab\u4e22\u5f03\u4e86\u3002</p>"},{"location":"cs_base/csapp/lecture/03/#2-twos-complement-addition","title":"2. \u8865\u7801\u52a0\u6cd5\uff08Two's Complement Addition\uff09","text":"<ul> <li>\u8865\u7801\u7684\u7279\u70b9<ul> <li>\u8865\u7801\u662f\u4e00\u79cd\u8868\u793a\u6709\u7b26\u53f7\u6570\u7684\u65b9\u5f0f\uff0c\u5b83\u65e2\u80fd\u8868\u793a\u6b63\u6570\uff0c\u4e5f\u80fd\u8868\u793a\u8d1f\u6570\u3002\u8d1f\u6570\u7684\u8865\u7801\u662f\u901a\u8fc7\u201c\u53d6\u53cd\u52a0 1\u201d\u5f97\u5230\u7684\u3002   \u6bd4\u5982\uff0c-5 \u7684\u8865\u7801\u662f 5 \u7684\u4e8c\u8fdb\u5236\u53d6\u53cd\u518d\u52a0 1\u3002</li> <li>\u8d1f\u6ea2\u51fa\uff08Negative Overflow\uff09\uff1a\u5f53\u4e24\u4e2a\u8d1f\u6570\u76f8\u52a0\u7684\u7ed3\u679c\u8d85\u51fa\u4e86\u8d1f\u6570\u80fd\u8868\u793a\u7684\u8303\u56f4\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u8d1f\u6ea2\u51fa\u3002   \u6bd4\u5982\uff0c4 \u4f4d\u8865\u7801\u80fd\u8868\u793a\u7684\u6700\u5c0f\u8d1f\u6570\u662f -8\uff0c\u5982\u679c\u4f60\u52a0 -5 + -6 = -11\uff0c\u7ed3\u679c\u4f1a\u6ea2\u51fa\uff0c\u53d8\u6210 5\uff08\u56e0\u4e3a -11 \u8d85\u51fa\u4e86 4 \u4f4d\u8865\u7801\u7684\u8303\u56f4\uff09\u3002</li> </ul> </li> </ul> <p>\u8bf4\u4eba\u8bdd\uff1a\u8865\u7801\u52a0\u6cd5\u5c31\u50cf\u4f60\u5728\u4e00\u4e2a\u53ea\u80fd\u663e\u793a 4 \u4f4d\u6570\u5b57\u7684\u8ba1\u7b97\u5668\u4e0a\u505a\u52a0\u6cd5\u3002\u5982\u679c\u4f60\u52a0 -5 + -6\uff0c\u8ba1\u7b97\u5668\u4f1a\u663e\u793a 5\uff0c\u800c\u4e0d\u662f -11\uff0c\u56e0\u4e3a\u7ed3\u679c\u8d85\u51fa\u4e86\u5b83\u80fd\u8868\u793a\u7684\u8303\u56f4\u3002</p>"},{"location":"cs_base/csapp/lecture/03/#3-unsigned-multiplication-in-c","title":"3. \u65e0\u7b26\u53f7\u4e58\u6cd5\uff08Unsigned Multiplication in C\uff09","text":"<ul> <li>\u4f4d\u5bbd\u6269\u5c55<ul> <li>\u65e0\u7b26\u53f7\u6570\u7684\u4e58\u6cd5\u7ed3\u679c\u4f1a\u6bd4\u539f\u6765\u7684\u6570\u5360\u7528\u66f4\u591a\u7684\u4f4d\u6570\u3002\u6bd4\u5982\uff0c\u4e24\u4e2a 32 \u4f4d\u7684\u6570\u76f8\u4e58\uff0c\u7ed3\u679c\u4f1a\u5360\u7528 64 \u4f4d\u3002</li> <li>\u4f46\u8ba1\u7b97\u673a\u901a\u5e38\u53ea\u4fdd\u7559\u4f4e\u4f4d\u7684\u90e8\u5206\uff0c\u9ad8\u4f4d\u4f1a\u88ab\u4e22\u5f03\u3002\u8fd9\u76f8\u5f53\u4e8e\u5bf9 \\( 2^w \\) \u53d6\u6a21\u3002</li> <li>\u6ea2\u51fa\u65f6\u7684\u5904\u7406\uff1a\u53ea\u4fdd\u7559\u4f4e \\( w \\) \u4f4d\uff0c\u9ad8\u4f4d\u88ab\u4e22\u5f03\u3002</li> </ul> </li> </ul> <p>\u8bf4\u4eba\u8bdd\uff1a\u65e0\u7b26\u53f7\u4e58\u6cd5\u5c31\u50cf\u4f60\u5728\u4e00\u4e2a\u53ea\u80fd\u663e\u793a 4 \u4f4d\u6570\u5b57\u7684\u8ba1\u7b97\u5668\u4e0a\u505a\u4e58\u6cd5\u3002\u5982\u679c\u4f60\u4e58 1000 * 1000\uff0c\u8ba1\u7b97\u5668\u4f1a\u663e\u793a 0000\uff0c\u800c\u4e0d\u662f 1000000\uff0c\u56e0\u4e3a\u9ad8\u4f4d\u88ab\u4e22\u5f03\u4e86\u3002</p>"},{"location":"cs_base/csapp/lecture/03/#4-2-power-of-2-multiply-with-shift","title":"4. 2 \u7684\u5e42\u4e58\u6cd5\u4e0e\u79fb\u4f4d\uff08Power-of-2 Multiply with Shift\uff09","text":"<ul> <li>\u52a0\u6743\u589e\u52a0<ul> <li>\u5de6\u79fb\u64cd\u4f5c\u76f8\u5f53\u4e8e\u4e58\u4ee5 \\( 2^k \\)\uff0c\u5176\u4e2d \\( k \\) \u662f\u5de6\u79fb\u7684\u4f4d\u6570\u3002   \u6bd4\u5982\uff0c\u5de6\u79fb 1 \u4f4d\u76f8\u5f53\u4e8e\u4e58\u4ee5 2\uff0c\u5de6\u79fb 2 \u4f4d\u76f8\u5f53\u4e8e\u4e58\u4ee5 4\u3002</li> <li>\u5411\u4e0b\u53d6\u6574\u7684\u539f\u56e0\uff1a\u5de6\u79fb\u65f6\uff0c\u8d85\u51fa\u4f4d\u5bbd\u7684\u9ad8\u4f4d\u4f1a\u88ab\u820d\u5f03\uff0c\u5bfc\u81f4\u7ed3\u679c\u5411\u4e0b\u53d6\u6574\u3002</li> </ul> </li> </ul> <p>\u8bf4\u4eba\u8bdd\uff1a\u5de6\u79fb\u5c31\u50cf\u4f60\u5728\u4e00\u4e2a\u53ea\u80fd\u663e\u793a 4 \u4f4d\u6570\u5b57\u7684\u8ba1\u7b97\u5668\u4e0a\u505a\u4e58\u6cd5\u3002\u5982\u679c\u4f60\u5de6\u79fb 1 \u4f4d\uff0c\u76f8\u5f53\u4e8e\u4e58\u4ee5 2\uff0c\u4f46\u5982\u679c\u7ed3\u679c\u8d85\u8fc7\u4e86 4 \u4f4d\uff0c\u9ad8\u4f4d\u4f1a\u88ab\u4e22\u5f03\u3002</p>"},{"location":"cs_base/csapp/lecture/03/#5-signed-multiplication","title":"5. \u6709\u7b26\u53f7\u6570\u7684\u4e58\u6cd5\uff08Signed Multiplication\uff09","text":"<ul> <li>\u79fb\u4f4d\u7c7b\u578b<ul> <li>\u7b97\u672f\u79fb\u4f4d\uff08Arithmetic Shift\uff09\uff1a\u4fdd\u7559\u7b26\u53f7\u4f4d\uff0c\u9002\u7528\u4e8e\u6709\u7b26\u53f7\u6570\u3002</li> <li>\u903b\u8f91\u79fb\u4f4d\uff08Logical Shift\uff09\uff1a\u4e0d\u4fdd\u7559\u7b26\u53f7\u4f4d\uff0c\u9002\u7528\u4e8e\u65e0\u7b26\u53f7\u6570\u3002</li> </ul> </li> <li>\u504f\u79fb\u5904\u7406<ul> <li>\u5728\u6267\u884c\u9664\u6cd5\u524d\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u6570\u503c\u504f\u79fb\uff08Shift\uff09\uff0c\u4ee5\u4f7f\u7ed3\u679c\u66f4\u63a5\u8fd1 0\uff0c\u800c\u4e0d\u662f\u5411\u4e0b\u53d6\u6574\u3002</li> </ul> </li> <li>\u8d1f\u6570\u53d6\u76f8\u53cd\u6570<ul> <li>\u65b9\u6cd5\uff1a\u53d6\u53cd\u52a0 1\uff08\u8865\u7801\u8868\u793a\u6cd5\uff09\u3002</li> </ul> </li> </ul> <p>\u8bf4\u4eba\u8bdd\uff1a\u6709\u7b26\u53f7\u6570\u7684\u4e58\u6cd5\u5c31\u50cf\u4f60\u5728\u4e00\u4e2a\u6709\u7b26\u53f7\u7684\u8ba1\u7b97\u5668\u4e0a\u505a\u4e58\u6cd5\u3002\u5982\u679c\u4f60\u4e58 -5 * 2\uff0c\u8ba1\u7b97\u5668\u4f1a\u663e\u793a -10\uff0c\u800c\u4e0d\u662f 10\uff0c\u56e0\u4e3a\u5b83\u4fdd\u7559\u4e86\u7b26\u53f7\u4f4d\u3002</p>"},{"location":"cs_base/csapp/lecture/03/#6-overflow","title":"6. \u6ea2\u51fa\uff08Overflow\uff09","text":"<ul> <li>\u65e0\u7b26\u53f7\u6570\u7684\u6ea2\u51fa<ul> <li>\u53ea\u6709\u4e00\u79cd\u6ea2\u51fa\uff1a\u7ed3\u679c\u8d85\u8fc7\u6700\u5927\u8868\u793a\u8303\u56f4 \\( 2^w - 1 \\)\u3002</li> </ul> </li> <li>\u6709\u7b26\u53f7\u6570\u7684\u6ea2\u51fa<ul> <li>\u4e24\u79cd\u6ea2\u51fa\uff1a<ol> <li>\u6b63\u6ea2\u51fa\uff1a\u6b63\u6570\u76f8\u52a0\u7ed3\u679c\u8d85\u51fa\u6b63\u6570\u8303\u56f4\u3002</li> <li>\u8d1f\u6ea2\u51fa\uff1a\u8d1f\u6570\u76f8\u52a0\u7ed3\u679c\u8d85\u51fa\u8d1f\u6570\u8303\u56f4\u3002</li> </ol> </li> </ul> </li> </ul> <p>\u8bf4\u4eba\u8bdd\uff1a\u6ea2\u51fa\u5c31\u50cf\u4f60\u5728\u4e00\u4e2a\u53ea\u80fd\u663e\u793a 4 \u4f4d\u6570\u5b57\u7684\u8ba1\u7b97\u5668\u4e0a\u505a\u52a0\u6cd5\u3002\u5982\u679c\u4f60\u52a0 9999 + 1\uff0c\u8ba1\u7b97\u5668\u4f1a\u663e\u793a 0000\uff0c\u800c\u4e0d\u662f 10000\uff0c\u56e0\u4e3a\u7ed3\u679c\u8d85\u51fa\u4e86\u5b83\u80fd\u8868\u793a\u7684\u8303\u56f4\u3002</p>"},{"location":"cs_base/csapp/lecture/03/#7","title":"7. \u4e3a\u4ec0\u4e48\u4f7f\u7528\u65e0\u7b26\u53f7\u6570\uff1f","text":"<ul> <li>\u65e0\u7b26\u53f7\u6570\uff08Unsigned\uff09\u66f4\u9002\u5408\u8868\u793a\u8ba1\u6570\u503c\u3001\u5730\u5740\u7b49\u975e\u8d1f\u6570\u3002</li> <li>Java \u4e2d\u5df2\u7ecf\u4e0d\u652f\u6301\u65e0\u7b26\u53f7\u6570\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u4f4d\u8fd0\u7b97\uff08\u4f8b\u5982\u903b\u8f91\u53f3\u79fb\uff09\u95f4\u63a5\u5b9e\u73b0\u65e0\u7b26\u53f7\u6570\u64cd\u4f5c\u3002</li> </ul> <p>\u8bf4\u4eba\u8bdd\uff1a\u65e0\u7b26\u53f7\u6570\u5c31\u50cf\u4f60\u5728\u6570\u6570\uff0c\u6c38\u8fdc\u4e0d\u4f1a\u51fa\u73b0\u8d1f\u6570\u3002\u6bd4\u5982\uff0c\u6570\u4e00\u6570\u4f60\u6709\u591a\u5c11\u4e2a\u82f9\u679c\uff0c\u8fd9\u4e2a\u6570\u6c38\u8fdc\u4e0d\u4f1a\u662f\u8d1f\u6570\u3002</p>"},{"location":"cs_base/csapp/lecture/03/#8-java","title":"8. Java \u7279\u6b8a\u53f3\u79fb\u64cd\u4f5c","text":"<ul> <li>\u4e09\u91cd\u53f3\u79fb\u8fd0\u7b97\uff08Triple Right Shift\uff09<ul> <li>\u7b26\u53f7\uff1a<code>&gt;&gt;&gt;</code>\uff0c\u8868\u793a\u903b\u8f91\u53f3\u79fb\uff08Logical Shift\uff09\u3002</li> <li>\u7279\u70b9\uff1a\u7528 0 \u586b\u5145\u5de6\u4fa7\u7a7a\u4f4d\uff0c\u9002\u7528\u4e8e\u65e0\u7b26\u53f7\u6570\u3002</li> </ul> </li> <li>\u666e\u901a\u53f3\u79fb\u8fd0\u7b97\uff08&gt;&gt;\uff09<ul> <li>\u7b26\u53f7\uff1a<code>&gt;&gt;</code>\uff0c\u8868\u793a\u7b97\u672f\u53f3\u79fb\uff08Arithmetic Shift\uff09\u3002</li> <li>\u7279\u70b9\uff1a\u7528\u7b26\u53f7\u4f4d\u586b\u5145\u5de6\u4fa7\u7a7a\u4f4d\uff0c\u9002\u7528\u4e8e\u6709\u7b26\u53f7\u6570\u3002</li> </ul> </li> </ul> <p>\u8bf4\u4eba\u8bdd\uff1aJava \u7684\u53f3\u79fb\u64cd\u4f5c\u5c31\u50cf\u4f60\u5728\u79fb\u52a8\u6570\u5b57\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u4f60\u7528 <code>&gt;&gt;&gt;</code>\uff0c\u5de6\u8fb9\u4f1a\u8865 0\uff1b\u5982\u679c\u4f60\u7528 <code>&gt;&gt;</code>\uff0c\u5de6\u8fb9\u4f1a\u8865\u7b26\u53f7\u4f4d\u3002</p>"},{"location":"cs_base/csapp/lecture/03/#9","title":"9. \u4ee3\u7801\u7247\u6bb5\u5206\u6790","text":"C<pre><code>size_t i;\nfor(i = cnt - 2; i &lt; cnt; i--)\n    a[i] += a[i + 1];\n</code></pre> <ul> <li>\u95ee\u9898\u5206\u6790\uff1a<ul> <li><code>size_t</code> \u662f\u65e0\u7b26\u53f7\u7c7b\u578b\uff0c<code>i--</code> \u65f6\uff0c\u5f53 \\( i = 0 \\) \u540e\uff0c\\( i \\) \u4f1a\u6ea2\u51fa\u53d8\u4e3a \\( 2^w - 1 \\)\u3002</li> <li>\u5faa\u73af\u6761\u4ef6 \\( i &lt; cnt \\) \u6052\u4e3a\u771f\uff0c\u56e0\u4e3a \\( i \\) \u6ea2\u51fa\u540e\u53d8\u6210\u4e86\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u65e0\u7b26\u53f7\u6570\uff0c\u6c38\u8fdc\u5927\u4e8e\u7b49\u4e8e \\( cnt \\)\u3002</li> </ul> </li> <li>\u6539\u8fdb\u5efa\u8bae\uff1a<ul> <li>\u5982\u679c\u9700\u8981\u63a7\u5236\u5faa\u73af\u6761\u4ef6\uff0c\u907f\u514d\u4f7f\u7528\u65e0\u7b26\u53f7\u7c7b\u578b\uff0c\u6539\u7528\u6709\u7b26\u53f7\u7c7b\u578b\uff08\u5982 <code>int</code>\uff09\u3002</li> </ul> </li> </ul> <p>\u8bf4\u4eba\u8bdd\uff1a\u8fd9\u6bb5\u4ee3\u7801\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u5f53 <code>i</code> \u53d8\u6210 0 \u540e\uff0c\u518d\u51cf 1 \u4f1a\u53d8\u6210\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6570\uff0c\u5bfc\u81f4\u5faa\u73af\u6c38\u8fdc\u4e0d\u4f1a\u7ed3\u675f\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u5e94\u8be5\u7528\u6709\u7b26\u53f7\u6570\u6765\u63a7\u5236\u5faa\u73af\u3002</p>"},{"location":"cs_base/csapp/lecture/03/#10","title":"10. \u603b\u7ed3\uff1a\u8ba1\u7b97\u673a\u5b58\u50a8\u8868\u793a\u7684\u5f71\u54cd","text":"<p>\u8ba1\u7b97\u673a\u5185\u5b58\u7684\u5b58\u50a8\u548c\u8868\u793a\u65b9\u5f0f\u5bf9\u7f16\u7a0b\u81f3\u5173\u91cd\u8981\u3002\u7406\u89e3\u8fd9\u4e9b\u673a\u5236\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u907f\u514d\u6f5c\u5728\u9677\u9631\uff0c\u63d0\u9ad8\u8f6f\u4ef6\u5f00\u53d1\u6548\u7387\u3002</p> <p>\u8bf4\u4eba\u8bdd\uff1a\u8ba1\u7b97\u673a\u7684\u5185\u5b58\u662f\u6709\u9650\u7684\uff0c\u7406\u89e3\u5b83\u5982\u4f55\u5b58\u50a8\u548c\u5904\u7406\u6570\u636e\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5199\u51fa\u66f4\u597d\u7684\u4ee3\u7801\uff0c\u907f\u514d\u4e00\u4e9b\u5e38\u89c1\u7684\u9519\u8bef\u3002</p>"},{"location":"cs_base/csapp/lecture/04/","title":"Floating Point","text":""},{"location":"cs_base/csapp/lecture/04/#floating-point","title":"Floating Point","text":"<p> \u7ea6 827 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"cs_base/csapp/lecture/04/#1","title":"1. \u8868\u793a\u5b9e\u6570\u7684\u65b9\u6cd5","text":"<ul> <li> <p>\u5b9e\u6570\u7684\u8868\u793a\uff1a     \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5b9e\u6570\u53ef\u4ee5\u4f7f\u7528\u56fa\u5b9a\u70b9\u6570\u6216\u6d6e\u70b9\u6570\u6765\u8868\u793a\u3002\u4e8c\u8fdb\u5236\u4e2d\uff0c\u5b9e\u6570\u7684\u8868\u8fbe\u65b9\u5f0f\u53ef\u4ee5\u5206\u4e3a\u6574\u6570\u90e8\u5206\u548c\u5c0f\u6570\u90e8\u5206\u3002</p> </li> <li> <p>\u5982\u4f55\u5c061011.101\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff1a     \u76f4\u63a5\u5199\u4f5c<code>1011.101</code>\u3002</p> <ul> <li>\u6574\u6570\u90e8\u5206\uff081011\uff09 = 1\u00d72<sup>3+0\u00d72</sup>2+1\u00d72<sup>1+1\u00d72</sup>0=11</li> <li>\u5c0f\u6570\u90e8\u5206\uff08.101\uff09 = 1\u00d72<sup>\u22121+0\u00d72</sup>\u22122+1\u00d72^\u22123=0.625     \u56e0\u6b64\uff0c1011.101\u8868\u793a\u4e3a11.625\u3002</li> </ul> </li> </ul>"},{"location":"cs_base/csapp/lecture/04/#2","title":"2. \u4e8c\u8fdb\u5236\u7684\u5de6\u79fb\u548c\u53f3\u79fb\u64cd\u4f5c","text":"<ul> <li> <p>Divide by 2 by shifting right:     \u5c06\u4e8c\u8fdb\u5236\u6570\u53f3\u79fb\u4e00\u4f4d\u76f8\u5f53\u4e8e\u6574\u6570\u90e8\u5206\u9664\u4ee52\u3002\u4f8b\u5982\uff1a     10112\u21d21012=11\u21925</p> </li> <li> <p>Multiply by 2 by shifting left:     \u5c06\u4e8c\u8fdb\u5236\u6570\u5de6\u79fb\u4e00\u4f4d\u76f8\u5f53\u4e8e\u6574\u6570\u90e8\u5206\u4e58\u4ee52\u3002\u4f8b\u5982\uff1a     10112\u21d0101102=11\u219222</p> </li> </ul>"},{"location":"cs_base/csapp/lecture/04/#3-0111111","title":"3. \u5173\u4e8e0.111111...\u7684\u7279\u6b8a\u6027","text":"<ul> <li>\u4e3a\u4f550.111111... just below 1.0?     0.111111...\u662f\u4e8c\u8fdb\u5236\u4e2d\u91cd\u590d1\u7684\u5c0f\u6570\u3002<ul> <li>\u5b83\u8868\u793a\u7684\u662f\u4e00\u4e2a\u8d8b\u8fd1\u4e8e1\u7684\u6781\u9650\u503c\uff1a     0.111111...=1\u22122^\u2212w\uff0c\u5176\u4e2dw\u662f\u5c0f\u6570\u70b9\u53f3\u8fb9\u7684\u4f4d\u6570\u3002</li> <li>\u7531\u4e8e2^{-w}\u4f1a\u968f\u7740w\u7684\u589e\u5927\u9010\u6e10\u53d8\u5c0f\uff0c\u6545\u5f53\u4f4d\u6570\u65e0\u9650\u63a5\u8fd1\u65f6\uff0c\u7ed3\u679c\u4f1a\u975e\u5e38\u63a5\u8fd11\uff0c\u4f46\u59cb\u7ec8\u5c0f\u4e8e1\u3002</li> </ul> </li> </ul>"},{"location":"cs_base/csapp/lecture/04/#4","title":"4. \u4e8c\u8fdb\u5236\u6570\u7684\u9650\u5236","text":"<ul> <li> <p>\u4e3a\u4ec0\u4e48\u53ea\u80fd\u7cbe\u786e\u8868\u793a x / 2^k\uff1a</p> <ul> <li>\u4e8c\u8fdb\u5236\u8868\u793a\u672c\u8d28\u4e0a\u662f\u4ee52\u4e3a\u5e95\u7684\u7cfb\u7edf\uff0c\u56e0\u6b64\u53ef\u4ee5\u7cbe\u786e\u8868\u793a\u7684\u6570\u662f\u5206\u6bcd\u4e3a2^k\u7684\u5206\u6570\u3002</li> <li>\u6bd4\u5982\uff1a0.5 = 1 / 2^1\uff0c0.25 = 1 / 2^2\uff0c\u800c0.3\u8fd9\u6837\u7684\u6570\u5728\u4e8c\u8fdb\u5236\u4e2d\u4f1a\u6709\u65e0\u9650\u5faa\u73af\u7684\u5c0f\u6570\u90e8\u5206\uff0c\u65e0\u6cd5\u7cbe\u786e\u8868\u793a\u3002</li> <li> <p>\u5176\u5b83\u6570\u5b57\u7684\u91cd\u590d\u4f4d\u8868\u793a\uff1a</p> </li> <li> <p>\u4f8b\u5982\uff1a0.1_{10}\u5728\u4e8c\u8fdb\u5236\u4e2d\u8868\u793a\u4e3a0.0001100110011...\uff0c\u5177\u6709\u5faa\u73af\u8282<code>0011</code>\u3002\u8fd9\u5bfc\u81f4\u5b83\u65e0\u6cd5\u88ab\u7cbe\u786e\u8868\u793a\uff0c\u53ea\u80fd\u7528\u8fd1\u4f3c\u503c\u8868\u793a\u3002</p> </li> <li> <p>\u56fa\u5b9a\u7684\u4e8c\u8fdb\u5236\u5c0f\u6570\u70b9\u4f4d\u7f6e\uff1a</p> </li> <li> <p>\u56fa\u5b9a\u70b9\u6570\u7684\u9650\u5236\u5728\u4e8e\u5c0f\u6570\u70b9\u7684\u4f4d\u7f6e\u56fa\u5b9a\u5728\u67d0\u4e00\u4f4d\uff0c\u65e0\u6cd5\u52a8\u6001\u8c03\u6574\u8303\u56f4\u3002\u8fd9\u9650\u5236\u4e86\u8868\u793a\u7684\u6570\u5b57\u8303\u56f4\u3002</p> </li> </ul> </li> </ul>"},{"location":"cs_base/csapp/lecture/04/#5","title":"5. \u6d6e\u70b9\u6570\u7684\u5f15\u5165","text":"<ul> <li>\u6d6e\u70b9\u6570\u7684\u539f\u7406\uff1a     \u6d6e\u70b9\u6570\u901a\u8fc7\u201c\u79fb\u52a8\u4e8c\u8fdb\u5236\u5c0f\u6570\u70b9\u7684\u4f4d\u7f6e\u201d\u6765\u8868\u793a\u5c3d\u53ef\u80fd\u5927\u7684\u6570\u5b57\u8303\u56f4\u548c\u7cbe\u5ea6\u3002<ul> <li>\u6d6e\u70b9\u6570 = \uff08-1\uff09^s M 2^E<ul> <li>s\uff1a\u7b26\u53f7\u4f4d\uff080\u4e3a\u6b63\uff0c1\u4e3a\u8d1f\uff09</li> <li>M\uff1a\u5c3e\u6570\uff0c\u8868\u793a\u6709\u6548\u6570\u5b57\uff08\u5f52\u4e00\u5316\u5f62\u5f0f\uff0c\u901a\u5e38\u4e3a1.xxx\uff09</li> <li>E\uff1a\u6307\u6570\uff0c\u63a7\u5236\u6570\u503c\u8303\u56f4</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs_base/csapp/lecture/04/#6-ieee-754","title":"6. IEEE 754 \u6d6e\u70b9\u6570\u6807\u51c6","text":"<ul> <li> <p>\u7279\u70b9\uff1a</p> <ul> <li>\u63d0\u4f9b\u4e86\u5bf9\u6ea2\u51fa\uff08overflow\uff09\u548c\u4e0b\u6ea2\uff08underflow\uff09\u7684\u5904\u7406\u89c4\u8303\u3002</li> <li>\u5b9a\u4e49\u4e86\u7cbe\u786e\u7684\u820d\u5165\u65b9\u5f0f\uff0c\u4f7f\u5f97\u6d6e\u70b9\u6570\u8fd0\u7b97\u5c3d\u53ef\u80fd\u63a5\u8fd1\u771f\u5b9e\u503c\u3002</li> <li>\u4f46\u786c\u4ef6\u5b9e\u73b0\u590d\u6742\u4e14\u6210\u672c\u8f83\u9ad8\u3002</li> <li> <p>\u6807\u51c6\u683c\u5f0f\uff1a</p> </li> <li> <p>\u5355\u7cbe\u5ea6\uff0832\u4f4d\uff09\uff1a1\u4f4d\u7b26\u53f7 + 8\u4f4d\u6307\u6570 + 23\u4f4d\u5c3e\u6570</p> </li> <li>\u53cc\u7cbe\u5ea6\uff0864\u4f4d\uff09\uff1a1\u4f4d\u7b26\u53f7 + 11\u4f4d\u6307\u6570 + 52\u4f4d\u5c3e\u6570</li> <li> <p>\u5f52\u4e00\u5316\u503c\uff08Normalized Value\uff09\uff1a</p> </li> <li> <p>\u5f53\u6307\u6570\u4e0d\u7b49\u4e8e\u51680\uff080000000...\uff09\u6216\u51681\uff081111111...\uff09\u65f6\uff0c\u6d6e\u70b9\u6570\u662f\u5f52\u4e00\u5316\u7684\u3002</p> </li> <li>\u6307\u6570\u503c\uff1aE=Exp\u2212Bias<ul> <li>Bias\uff1a\u504f\u79fb\u91cf\uff0c\u7528\u4e8e\u4fdd\u8bc1\u6307\u6570\u662f\u6b63\u503c\u3002</li> <li>\u5355\u7cbe\u5ea6\uff1a7Bias = 2^{8-1} - 1 = 127</li> <li>\u53cc\u7cbe\u5ea6\uff1aBias = 2^{11-1} - 1 = 1023</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs_base/csapp/lecture/04/#7","title":"7. \u79d1\u5b66\u8ba1\u6570\u6cd5\u7684\u7c7b\u6bd4","text":"<ul> <li> <p>\u6d6e\u70b9\u6570\u53ef\u4ee5\u7c7b\u6bd4\u79d1\u5b66\u8ba1\u6570\u6cd5\uff1a</p> <ul> <li>\u79d1\u5b66\u8ba1\u6570\u6cd5\uff1aN = M \\times 10^e</li> <li>\u6d6e\u70b9\u6570\uff1aN = M \\times 2^e     \u5728\u6d6e\u70b9\u6570\u4e2d\uff0c\u901a\u8fc7\u504f\u79fb\u91cf\uff08Bias\uff09\u8868\u793a\u6307\u6570\u90e8\u5206\uff0c\u8868\u9762\u4e0a\u7684\u6570\u5b57\u5b9e\u9645\u662f\u201c\u6307\u6570\u503c-\u504f\u79fb\u91cf\u201d\u3002</li> <li> <p>\u5982\u4f55\u8ba1\u7b97Bias\u548c\u8303\u56f4\uff1a</p> </li> <li> <p>\u5047\u8bbe\u6307\u6570\u6709kk\u4f4d\uff0c\u5219\u8868\u793a\u8303\u56f4\u4e3a\uff1a</p> <ul> <li>0\u52302^k-1\u3002</li> </ul> </li> <li>\u53bb\u6389\u51680\u548c\u51681\u4f5c\u4e3a\u7279\u6b8a\u503c\uff0c\u5269\u4f59\u6709\u6548\u6307\u6570\u8303\u56f4\u4e3a\uff1a2^k - 2\u3002</li> <li>Bias\u4e3a\u6709\u6548\u6307\u6570\u8303\u56f4\u7684\u4e00\u534a\uff1a(2^k - 2) / 2\u3002</li> </ul> </li> </ul>"},{"location":"cs_base/csapp/lecture/05/","title":"Machine-Level Programming 1","text":""},{"location":"cs_base/csapp/lecture/05/#machine-level-programming-1","title":"Machine-Level Programming 1","text":"<p> \u7ea6 1157 \u4e2a\u5b57  7 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p>"},{"location":"cs_base/csapp/lecture/05/#1","title":"1. \u57fa\u672c\u6982\u5ff5","text":""},{"location":"cs_base/csapp/lecture/05/#vs","title":"\u673a\u5668\u4ee3\u7801 vs \u6c47\u7f16\u4ee3\u7801","text":"<ul> <li>\u673a\u5668\u4ee3\u7801\uff1a\u5904\u7406\u5668\u76f4\u63a5\u6267\u884c\u7684\u4e8c\u8fdb\u5236\u6307\u4ee4</li> <li>\u6c47\u7f16\u4ee3\u7801\uff1a\u673a\u5668\u4ee3\u7801\u7684\u6587\u672c\u8868\u793a\u5f62\u5f0f\uff08\u52a9\u8bb0\u7b26\u5f62\u5f0f\uff09</li> <li>\u4e2d\u95f4\u4ee3\u7801\uff1a\u7f16\u8bd1\u5668\u5728\u4f18\u5316\u8fc7\u7a0b\u4e2d\u751f\u6210\u7684\u4e2d\u95f4\u8868\u793a\uff08\u5982LLVM IR\uff09</li> </ul>"},{"location":"cs_base/csapp/lecture/05/#_1","title":"\u5b66\u4e60\u73af\u5883","text":"<ul> <li>Intel x86-64\uff1aIntel 64\u4f4d\u6307\u4ee4\u96c6\u67b6\u6784\uff08x86\u768464\u4f4d\u6269\u5c55\uff09</li> <li>CISC\u67b6\u6784\u7279\u70b9\uff1a</li> <li>\u590d\u6742\u6307\u4ee4\u96c6\uff08\u7ea63000\u6761\u6307\u4ee4\uff09</li> <li>\u53d8\u957f\u6307\u4ee4\u683c\u5f0f\uff081-15\u5b57\u8282\uff09</li> <li>\u5185\u5b58\u64cd\u4f5c\u6570\u53ef\u76f4\u63a5\u53c2\u4e0e\u8fd0\u7b97</li> <li>\u5b9e\u9645Linux\u7a0b\u5e8f\u4e2d\u53ea\u4f7f\u7528\u6838\u5fc3\u5b50\u96c6</li> </ul>"},{"location":"cs_base/csapp/lecture/05/#2-intel-x86","title":"2. Intel x86\u5904\u7406\u5668\u53d1\u5c55","text":""},{"location":"cs_base/csapp/lecture/05/#_2","title":"\u5386\u53f2\u578b\u53f7","text":"<ul> <li>8086 (1978, 16\u4f4d) \u2192 80286 \u2192 80386 (32\u4f4d) \u2192 x86-64 (2000)</li> <li>CISC (Complex Instruction Set Computer) vs RISC (Reduced Instruction Set Computer)</li> <li>\u5171\u540c\u70b9\u90fd\u670986\uff0c\u6240\u4ee5x86</li> </ul>"},{"location":"cs_base/csapp/lecture/05/#_3","title":"\u73b0\u4ee3\u53d1\u5c55","text":"\u67b6\u6784\u7279\u6027 x86 (CISC) ARM (RISC) \u6307\u4ee4\u957f\u5ea6 \u53d8\u957f (1-15\u5b57\u8282) \u5b9a\u957f (4\u5b57\u8282) \u5bc4\u5b58\u5668\u6570 16\u901a\u7528\u5bc4\u5b58\u5668 31\u901a\u7528\u5bc4\u5b58\u5668 \u529f\u8017\u6548\u7387 \u8f83\u9ad8\u529f\u8017 \u4f4e\u529f\u8017\u8bbe\u8ba1 \u5e94\u7528\u573a\u666f \u670d\u52a1\u5668/\u684c\u9762 \u79fb\u52a8/\u5d4c\u5165\u5f0f"},{"location":"cs_base/csapp/lecture/05/#3","title":"3. \u7a0b\u5e8f\u6267\u884c\u89c6\u89d2","text":""},{"location":"cs_base/csapp/lecture/05/#_4","title":"\u5173\u952e\u7ec4\u4ef6","text":""},{"location":"cs_base/csapp/lecture/05/#pcrip","title":"\u7a0b\u5e8f\u8ba1\u6570\u5668 (PC/RIP)","text":"<ul> <li>PC: Program Counter</li> <li>\u5b58\u653e\u4e0b\u4e00\u6761\u6307\u4ee4\u5730\u5740\u768464\u4f4d\u5bc4\u5b58\u5668</li> <li>32\u4f4d\u6a21\u5f0f\u4e0b\u79f0\u4e3aEIP</li> </ul>"},{"location":"cs_base/csapp/lecture/05/#_5","title":"\u5bc4\u5b58\u5668\u6587\u4ef6","text":"<ul> <li>16\u4e2a64\u4f4d\u901a\u7528\u5bc4\u5b58\u5668\uff1a \u5bc4\u5b58\u5668\u6269\u5c55\u5386\u53f2\uff1a</li> <li>8086\uff1a16\u4f4d\u5bc4\u5b58\u5668\uff08AX, BX\u7b49\uff09</li> <li>80386\uff1a\u6269\u5c55\u4e3a32\u4f4d\uff08EAX, EBX\u7b49\uff09</li> <li>x86-64\uff1a\u6269\u5c55\u4e3a64\u4f4d\uff08RAX, RBX\u7b49\uff09</li> <li>\u53ef\u901a\u8fc7\u4e0d\u540c\u540d\u79f0\u8bbf\u95ee\u90e8\u5206\u5bc4\u5b58\u5668\uff08\u5982EAX\u8bbf\u95eeRAX\u7684\u4f4e32\u4f4d\uff09</li> </ul>"},{"location":"cs_base/csapp/lecture/05/#_6","title":"\u5185\u5b58\u4e0e\u7f13\u5b58","text":"<ul> <li>\u5185\u5b58\u6a21\u578b\uff1a\u8fde\u7eed\u7684\u5b57\u8282\u6570\u7ec4\uff08\u5730\u5740\u7a7a\u95f4\uff09</li> <li>\u7f13\u5b58\uff1a\u900f\u660e\u7684\u9ad8\u901f\u5185\u5b58\u7f13\u5b58\uff08L1/L2/L3 Cache\uff09</li> <li>\u5185\u5b58\u8bbf\u95ee\uff1a\u901a\u8fc7\u5730\u5740\u6a21\u5f0f\u8868\u8fbe\u5f0f\u8bbf\u95ee</li> </ul>"},{"location":"cs_base/csapp/lecture/05/#4","title":"4. \u7f16\u8bd1\u8fc7\u7a0b","text":""},{"location":"cs_base/csapp/lecture/05/#_7","title":"\u5b8c\u6574\u6d41\u7a0b","text":"<pre><code>graph TD\n    A[C\u6e90\u4ee3\u7801] --&gt; B[\u7f16\u8bd1\u5668]\n    B --&gt; C[\u6c47\u7f16\u4ee3\u7801]\n    C --&gt; D[\u6c47\u7f16\u5668]\n    D --&gt; E[\u76ee\u6807\u6587\u4ef6]\n    E --&gt; F[\u94fe\u63a5\u5668]\n    F --&gt; G[\u53ef\u6267\u884c\u6587\u4ef6]</code></pre>"},{"location":"cs_base/csapp/lecture/05/#_8","title":"\u5173\u952e\u6b65\u9aa4","text":"<ol> <li> <p>\u7f16\u8bd1\u9636\u6bb5\uff1a<code>gcc -Og -S sum.c</code>    - <code>-Og</code>\uff1a\u57fa\u672c\u4f18\u5316\uff08\u9002\u5408\u8c03\u8bd5\uff09    - \u751f\u6210<code>.s</code>\u6c47\u7f16\u6587\u4ef6</p> </li> <li> <p>\u6c47\u7f16\u9636\u6bb5\uff1a<code>gcc -c sum.s</code>    - \u751f\u6210<code>.o</code>\u76ee\u6807\u6587\u4ef6</p> </li> <li> <p>\u53cd\u6c47\u7f16\u5de5\u5177\uff1a </p>Bash<pre><code>objdump -d sum.o  # \u53cd\u6c47\u7f16\u76ee\u6807\u6587\u4ef6\ngdb ./sum         # \u4f7f\u7528\u8c03\u8bd5\u5668\u67e5\u770b\n</code></pre> </li> </ol>"},{"location":"cs_base/csapp/lecture/05/#5","title":"5. \u6c47\u7f16\u57fa\u7840","text":""},{"location":"cs_base/csapp/lecture/05/#_9","title":"\u6570\u636e\u79fb\u52a8\u6307\u4ee4","text":""},{"location":"cs_base/csapp/lecture/05/#_10","title":"\u64cd\u4f5c\u6570\u7c7b\u578b","text":"\u7c7b\u578b \u8bed\u6cd5\u793a\u4f8b \u8bf4\u660e name \u7acb\u5373\u6570 <code>$0x4</code> \u5e38\u91cf\u503c Immediate \u5bc4\u5b58\u5668 <code>%rax</code> \u5bc4\u5b58\u5668\u5185\u5bb9 Register \u5185\u5b58\u5f15\u7528 <code>(%rax)</code> \u5bc4\u5b58\u5668\u503c\u4f5c\u4e3a\u5185\u5b58\u5730\u5740 Memory"},{"location":"cs_base/csapp/lecture/05/#_11","title":"\u6570\u636e\u79fb\u52a8\u6a21\u5f0f","text":"\u6e90\u64cd\u4f5c\u6570 \u76ee\u6807\u64cd\u4f5c\u6570 \u793a\u4f8b \u7b49\u6548C\u4ee3\u7801 \u7acb\u5373\u6570 \u5bc4\u5b58\u5668 <code>movq $0x4, %rax</code> temp = 0x4; \u7acb\u5373\u6570 \u5185\u5b58 <code>movq $-147, (%rax)</code> *p = -147; \u5bc4\u5b58\u5668 \u5bc4\u5b58\u5668 <code>movq %rax, %rdx</code> temp2 = temp1 \u5bc4\u5b58\u5668 \u5185\u5b58 <code>movq %rax, (%rdx)</code> *p = temp; \u5185\u5b58 \u5bc4\u5b58\u5668 <code>movq (%rax), %rdx</code> temp = *p; - \u5e26\u62ec\u53f7\u7684\u5bc4\u5b58\u5668\uff0c\u4ee3\u8868\u7684\u662f\u4e00\u4e2a\u5730\u5740\uff0c\u628a\u8fd9\u4e2a\u5730\u5740\u5f53\u4f5c\u5185\u5b58\u53bb\u8bbf\u95ee\u2014\u2014\u5bfb\u5740 \u6ce8\u610f\uff1ax86\u67b6\u6784\u4e0d\u5141\u8bb8\u5185\u5b58\u5230\u5185\u5b58\u7684\u76f4\u63a5\u4f20\u8f93\uff0c\u5fc5\u987b\u901a\u8fc7\u5bc4\u5b58\u5668\u4e2d\u8f6c"},{"location":"cs_base/csapp/lecture/05/#_12","title":"\u5185\u5b58\u5bfb\u5740\u6a21\u5f0f","text":""},{"location":"cs_base/csapp/lecture/05/#_13","title":"\u901a\u7528\u516c\u5f0f","text":"<p><code>D(Rb, Ri, S)</code> \u2192 \u6709\u6548\u5730\u5740 = <code>Rb + Ri*S + D</code></p> <ul> <li>D\uff1a\u4f4d\u79fb\u91cf\uff08\u00bd/4\u5b57\u8282\uff09</li> <li>Rb\uff1a\u57fa\u5740\u5bc4\u5b58\u5668\uff08\u4efb\u610f\u901a\u7528\u5bc4\u5b58\u5668\uff09</li> <li>Ri\uff1a\u53d8\u5740\u5bc4\u5b58\u5668\uff08\u9664%rsp\u5916\u7684\u901a\u7528\u5bc4\u5b58\u5668\uff09</li> <li>S\uff1a\u6bd4\u4f8b\u56e0\u5b50\uff08\u00bd/4/8\uff09</li> </ul> <p>\u6bd4\u4f8b\u56e0\u5b50\u4f5c\u7528\uff1a\u7528\u4e8e\u6570\u7ec4\u8bbf\u95ee\u65f6\u5143\u7d20\u5927\u5c0f\u7684\u7f29\u653e\uff0c\u4f8b\u5982\uff1a - int\u6570\u7ec4\uff084\u5b57\u8282\u5143\u7d20\uff09\uff1aS=4 - long\u6570\u7ec4\uff088\u5b57\u8282\u5143\u7d20\uff09\uff1aS=8</p>"},{"location":"cs_base/csapp/lecture/05/#leaq","title":"\u7279\u6b8a\u6307\u4ee4 leaq","text":"<p><code>leaq Src, Dst</code> - \u4f5c\u7528\uff1a\u8ba1\u7b97\u5730\u5740\u4f46\u4e0d\u8fdb\u884c\u5185\u5b58\u8bbf\u95ee - \u5178\u578b\u5e94\u7528\uff1a   1. \u9ad8\u6548\u8ba1\u7b97\u7ebf\u6027\u5730\u5740   2. \u5b9e\u73b0\u590d\u6742\u7b97\u672f\u8fd0\u7b97</p>"},{"location":"cs_base/csapp/lecture/05/#_14","title":"\u793a\u4f8b\u5206\u6790","text":"C<pre><code>long m12(long x) {\n    return x * 12;\n}\n</code></pre> <p>\u6c47\u7f16\u5b9e\u73b0\uff1a </p>Text Only<pre><code>leaq (%rdi, %rdi, 2), %rax   # rax = x + x*2 = 3x\nsalq $2, %rax                # rax = 3x &lt;&lt; 2 = 12x\n</code></pre> <p>\u5206\u6b65\u89e3\u91ca\uff1a 4. <code>leaq</code> \u8ba1\u7b97 <code>x + x*2</code>\uff08\u5229\u7528\u6bd4\u4f8b\u56e0\u5b502\uff09 5. \u5de6\u79fb2\u4f4d\u5b9e\u73b0\u4e58\u4ee54\u64cd\u4f5c</p>"},{"location":"cs_base/csapp/lecture/05/#_15","title":"\u7b97\u672f\u8fd0\u7b97\u6307\u4ee4","text":""},{"location":"cs_base/csapp/lecture/05/#_16","title":"\u53cc\u64cd\u4f5c\u6570\u6307\u4ee4","text":"\u6307\u4ee4 \u6548\u679c \u7b49\u6548C\u8fd0\u7b97 addq S, D D = D + S D += S subq S, D D = D - S D -= S imulq S, D D = D * S D *= S salq S, D D = D &lt;&lt; S D &lt;&lt;= S sarq S, D D = D &gt;&gt; S\uff08\u7b97\u672f\u53f3\u79fb\uff09 D &gt;&gt;= S\uff08\u7b26\u53f7\u6269\u5c55\uff09 shrq S, D D = D &gt;&gt; S\uff08\u903b\u8f91\u53f3\u79fb\uff09 D &gt;&gt;= S\uff08\u96f6\u6269\u5c55\uff09"},{"location":"cs_base/csapp/lecture/05/#_17","title":"\u5355\u64cd\u4f5c\u6570\u6307\u4ee4","text":"\u6307\u4ee4 \u6548\u679c \u7b49\u6548C\u8fd0\u7b97 incq D D = D + 1 D++ decq D D = D - 1 D-- negq D D = -D D = -D notq D D = ~D D = ~D"},{"location":"cs_base/csapp/lecture/05/#6","title":"6. \u5173\u952e\u6982\u5ff5\u8be6\u89e3","text":""},{"location":"cs_base/csapp/lecture/05/#_18","title":"\u6761\u4ef6\u7801\u5bc4\u5b58\u5668","text":"\u6807\u5fd7\u4f4d \u540d\u79f0 \u8bbe\u7f6e\u6761\u4ef6 CF Carry Flag \u65e0\u7b26\u53f7\u6ea2\u51fa\u65f6\u7f6e1 ZF Zero Flag \u7ed3\u679c\u4e3a0\u65f6\u7f6e1 SF Sign Flag \u7ed3\u679c\u4e3a\u8d1f\u65f6\u7f6e1 OF Overflow Flag \u6709\u7b26\u53f7\u6ea2\u51fa\u65f6\u7f6e1 <p>\u6ce8\u610f\uff1a\u7b97\u672f\u8fd0\u7b97\u6307\u4ee4\u4f1a\u9690\u5f0f\u8bbe\u7f6e\u6761\u4ef6\u7801\uff0c\u7528\u4e8e\u540e\u7eed\u6761\u4ef6\u8df3\u8f6c</p>"},{"location":"cs_base/csapp/lecture/05/#_19","title":"\u5bc4\u5b58\u5668\u8bbf\u95ee\u7ec6\u8282","text":"<ul> <li>\u5386\u53f2\u517c\u5bb9\u6027\uff1a</li> <li>16\u4f4d\u6a21\u5f0f\uff1aAX, BX\u7b4916\u4f4d\u5bc4\u5b58\u5668</li> <li>32\u4f4d\u6a21\u5f0f\uff1aEAX\uff08\u6269\u5c55AX\uff09\uff0c\u53ef\u5355\u72ec\u8bbf\u95ee\u4f4e16\u4f4d</li> <li>64\u4f4d\u6a21\u5f0f\uff1aRAX\uff0c\u53ef\u8bbf\u95eeEAX\uff08\u4f4e32\u4f4d\uff09\u3001AX\uff08\u4f4e16\u4f4d\uff09\u3001AL\uff08\u4f4e8\u4f4d\uff09</li> </ul>"},{"location":"cs_base/csapp/lecture/05/#_20","title":"\u7f13\u5b58\u673a\u5236","text":"<ul> <li>\u591a\u7ea7\u7f13\u5b58\uff1a Text Only<pre><code>L1 Cache (32KB) \u2192 L2 Cache (256KB) \u2192 L3 Cache (8MB) \u2192 \u4e3b\u5185\u5b58\n</code></pre></li> <li>\u8bbf\u95ee\u901f\u5ea6\uff1aL1\u8bbf\u95ee\u7ea64 cycles\uff0c\u4e3b\u5185\u5b58\u8bbf\u95ee\u7ea6200+ cycles</li> <li>\u900f\u660e\u6027\uff1a\u7531\u786c\u4ef6\u81ea\u52a8\u7ba1\u7406\uff0c\u7a0b\u5e8f\u5458\u4e0d\u53ef\u76f4\u63a5\u64cd\u4f5c</li> </ul>"},{"location":"cs_base/language/SQL/","title":"SQL","text":""},{"location":"cs_base/language/SQL/#sql","title":"SQL","text":"<p> \u7ea6 820 \u4e2a\u5b57  17 \u884c\u4ee3\u7801  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"cs_base/language/SQL/#1","title":"1.\u4ec0\u4e48\u662f\u6570\u636e\u5e93\uff1f","text":"<ul> <li>\u6570\u636e\u5e93\uff08Database\uff09\u662f\u6309\u7167\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u3001\u5b58\u50a8\u548c\u7ba1\u7406\u6570\u636e\u7684\u4ed3\u5e93\u3002</li> <li>\u6bcf\u4e2a\u6570\u636e\u5e93\u90fd\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u4e0d\u540c\u7684 API \u7528\u4e8e\u521b\u5efa\uff0c\u8bbf\u95ee\uff0c\u7ba1\u7406\uff0c\u641c\u7d22\u548c\u590d\u5236\u6240\u4fdd\u5b58\u7684\u6570\u636e\u3002</li> <li>\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u6570\u636e\u5b58\u50a8\u5728\u6587\u4ef6\u4e2d\uff0c\u4f46\u662f\u5728\u6587\u4ef6\u4e2d\u8bfb\u5199\u6570\u636e\u901f\u5ea6\u76f8\u5bf9\u8f83\u6162\u3002</li> </ul>"},{"location":"cs_base/language/SQL/#12rdbms","title":"1.2RDBMS","text":"<p>\u6240\u4ee5\uff0c\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff08RDBMS\uff09\u6765\u5b58\u50a8\u548c\u7ba1\u7406\u5927\u6570\u636e\u91cf\u3002\u6240\u8c13\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u662f\u5efa\u7acb\u5728\u5173\u7cfb\u6a21\u578b\u57fa\u7840\u4e0a\u7684\u6570\u636e\u5e93\uff0c\u501f\u52a9\u4e8e\u96c6\u5408\u4ee3\u6570\u7b49\u6570\u5b66\u6982\u5ff5\u548c\u65b9\u6cd5\u6765\u5904\u7406\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u3002 RDBMS \u5373\u5173\u7cfb\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf(Relational Database Management System)\u7684\u7279\u70b9\uff1a - 1.\u6570\u636e\u4ee5\u8868\u683c\u7684\u5f62\u5f0f\u51fa\u73b0 - 2.\u6bcf\u884c\u4e3a\u5404\u79cd\u8bb0\u5f55\u540d\u79f0 - 3.\u6bcf\u5217\u4e3a\u8bb0\u5f55\u540d\u79f0\u6240\u5bf9\u5e94\u7684\u6570\u636e\u57df - 4.\u8bb8\u591a\u7684\u884c\u548c\u5217\u7ec4\u6210\u4e00\u5f20\u8868\u5355 - 5.\u82e5\u5e72\u7684\u8868\u5355\u7ec4\u6210database</p>"},{"location":"cs_base/language/SQL/#13terms","title":"1.3TermS","text":"<ul> <li>\u6570\u636e\u5e93:\u00a0\u6570\u636e\u5e93\u662f\u4e00\u4e9b\u5173\u8054\u8868\u7684\u96c6\u5408\u3002</li> <li>\u6570\u636e\u8868:\u00a0\u8868\u662f\u6570\u636e\u7684\u77e9\u9635\u3002\u5728\u4e00\u4e2a\u6570\u636e\u5e93\u4e2d\u7684\u8868\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u7b80\u5355\u7684\u7535\u5b50\u8868\u683c\u3002</li> <li>\u5217:\u00a0\u4e00\u5217(\u6570\u636e\u5143\u7d20) \u5305\u542b\u4e86\u76f8\u540c\u7c7b\u578b\u7684\u6570\u636e, \u4f8b\u5982\u90ae\u653f\u7f16\u7801\u7684\u6570\u636e\u3002</li> <li>\u884c\uff1a\u4e00\u884c\uff08\u5143\u7ec4\uff0c\u6216\u8bb0\u5f55\uff09\u662f\u4e00\u7ec4\u76f8\u5173\u7684\u6570\u636e\uff0c\u4f8b\u5982\u4e00\u6761\u7528\u6237\u8ba2\u9605\u7684\u6570\u636e\u3002</li> <li>\u5197\u4f59\uff1a\u5b58\u50a8\u4e24\u500d\u6570\u636e\uff0c\u5197\u4f59\u964d\u4f4e\u4e86\u6027\u80fd\uff0c\u4f46\u63d0\u9ad8\u4e86\u6570\u636e\u7684\u5b89\u5168\u6027\u3002</li> <li>\u4e3b\u952e\uff1a\u4e3b\u952e\u662f\u552f\u4e00\u7684\u3002\u4e00\u4e2a\u6570\u636e\u8868\u4e2d\u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u4e3b\u952e\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e3b\u952e\u6765\u67e5\u8be2\u6570\u636e\u3002</li> <li>\u5916\u952e\uff1a\u5916\u952e\u7528\u4e8e\u5173\u8054\u4e24\u4e2a\u8868\u3002</li> <li>\u590d\u5408\u952e\uff1a\u590d\u5408\u952e\uff08\u7ec4\u5408\u952e\uff09\u5c06\u591a\u4e2a\u5217\u4f5c\u4e3a\u4e00\u4e2a\u7d22\u5f15\u952e\uff0c\u4e00\u822c\u7528\u4e8e\u590d\u5408\u7d22\u5f15\u3002</li> <li>\u7d22\u5f15\uff1a\u4f7f\u7528\u7d22\u5f15\u53ef\u5feb\u901f\u8bbf\u95ee\u6570\u636e\u5e93\u8868\u4e2d\u7684\u7279\u5b9a\u4fe1\u606f\u3002\u7d22\u5f15\u662f\u5bf9\u6570\u636e\u5e93\u8868\u4e2d\u4e00\u5217\u6216\u591a\u5217\u7684\u503c\u8fdb\u884c\u6392\u5e8f\u7684\u4e00\u79cd\u7ed3\u6784\u3002\u7c7b\u4f3c\u4e8e\u4e66\u7c4d\u7684\u76ee\u5f55\u3002</li> <li>\u53c2\u7167\u5b8c\u6574\u6027:\u00a0\u53c2\u7167\u7684\u5b8c\u6574\u6027\u8981\u6c42\u5173\u7cfb\u4e2d\u4e0d\u5141\u8bb8\u5f15\u7528\u4e0d\u5b58\u5728\u7684\u5b9e\u4f53\u3002\u4e0e\u5b9e\u4f53\u5b8c\u6574\u6027\u662f\u5173\u7cfb\u6a21\u578b\u5fc5\u987b\u6ee1\u8db3\u7684\u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6\uff0c\u76ee\u7684\u662f\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002</li> <li>\u8868\u5934(header): \u6bcf\u4e00\u5217\u7684\u540d\u79f0;</li> <li>\u5217(col): \u5177\u6709\u76f8\u540c\u6570\u636e\u7c7b\u578b\u7684\u6570\u636e\u7684\u96c6\u5408;</li> <li>\u884c(row): \u6bcf\u4e00\u884c\u7528\u6765\u63cf\u8ff0\u67d0\u6761\u8bb0\u5f55\u7684\u5177\u4f53\u4fe1\u606f;</li> <li>\u503c(value): \u884c\u7684\u5177\u4f53\u4fe1\u606f, \u6bcf\u4e2a\u503c\u5fc5\u987b\u4e0e\u8be5\u5217\u7684\u6570\u636e\u7c7b\u578b\u76f8\u540c;</li> <li>\u952e(key): \u952e\u7684\u503c\u5728\u5f53\u524d\u5217\u4e2d\u5177\u6709\u552f\u4e00\u6027\u3002</li> </ul> <p>MySQL \u4e3a\u5173\u7cfb\u578b\u6570\u636e\u5e93(Relational Database Management System), \u8fd9\u79cd\u6240\u8c13\u7684\"\u5173\u7cfb\u578b\"\u53ef\u4ee5\u7406\u89e3\u4e3a\"\u8868\u683c\"\u7684\u6982\u5ff5, \u4e00\u4e2a\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7531\u4e00\u4e2a\u6216\u6570\u4e2a\u8868\u683c\u7ec4\u6210\u3002</p>"},{"location":"cs_base/language/SQL/#2syntax","title":"2.Syntax","text":"<ul> <li>\u53ef\u4ee5\u5355\u884c\u6216\u591a\u884c\u4e66\u5199\uff0c\u4ee5\u5206\u53f7\u7ed3\u5c3e</li> <li>\u53ef\u4ee5\u7528\u7a7a\u683c/ \u7f29\u8fdb\u589e\u5f3a\u4ee3\u7801\u53ef\u8bfb\u6027</li> <li>\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u5173\u952e\u5b57\u5efa\u8bae\u5927\u5199</li> <li>\u6ce8\u91ca\uff1a<ul> <li>\u5355\u884c\u6ce8\u91ca\uff1a-- \u6216\u8005 #</li> <li>\u591a\u884c\uff1a<code>/*               */</code></li> </ul> </li> <li>\u5206\u7c7b  </li> </ul>"},{"location":"cs_base/language/SQL/#21","title":"2.1\u521b\u5efa\u6570\u636e","text":"SQL<pre><code>CREAT DATABASE egg;\nUSE egg;\nCREAT TABLE \"name\"(\n          \u5217\u540d1 INT AUTO_INCREAMENT\uff0c\n          \u5217\u540d2 VARCHAR() NOT NULL\uff0c\n          \u5217\u540d3 DATE NULL )\n</code></pre> 1. \u8bbe\u7f6e\u5176\u4e2d\u4e00\u4e2a\u5217\u540d\u4e3aPRIMART KEY\u4e0d\u80fd\u4e3a\u7a7a"},{"location":"cs_base/language/SQL/#22","title":"2.2\u63d2\u5165","text":"<p>INSERT INTO \u6570\u636e\u5e93\u540d.\u8868\u683c\u540d\uff08\u5217\u540d1\uff0c \u5217\u540d2\uff09 VALUES\uff08\u6570\u503c1\uff0c \u6570\u503c2\uff09</p>"},{"location":"cs_base/language/SQL/#23","title":"2.3\u6539\u53d8\u8868\u683c","text":"SQL<pre><code>ALTER TABLE egg.eggs_record\nADD stock INT NULL;\n</code></pre>"},{"location":"cs_base/language/SQL/#24","title":"2.4\u66f4\u65b0\u8868\u683c","text":"SQL<pre><code>UPDATE \u8868\u683c\u540d.\u5217\u540d\nSET \u503c\nWHERE \u6761\u4ef6\n</code></pre>"},{"location":"cs_base/language/SQL/#25","title":"2.5\u5220\u9664\u6570\u636e","text":"SQL<pre><code>DELETE FROM \u6570\u636e\u5e93\u540d.\u8868\u683c\u540d\nWHERE \u6761\u4ef6\n</code></pre>"},{"location":"cs_base/language/SQL/#26","title":"2.6\u5220\u9664\u8868\u683c","text":"SQL<pre><code>DROP TABLE \u6570\u636e\u5e93\u540d.\u8868\u683c\u540d\n</code></pre>"},{"location":"cs_base/language/SQL/#27","title":"2.7\u67e5\u627e\u6570\u636e","text":"SQL<pre><code>SELECT ____\nFROM ____\nORDER BY \u5217\u540d ASC/DESC\uff1b\n</code></pre> - 2\u4e2a\u6a2a\u7ebf\u8868\u6ce8\u91ca"},{"location":"cs_base/language/c/","title":"C","text":""},{"location":"cs_base/language/c/#c","title":"C","text":"<p> \u7ea6 4469 \u4e2a\u5b57  333 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 27 \u5206\u949f</p>"},{"location":"cs_base/language/c/#1","title":"1.\u6307\u9488","text":""},{"location":"cs_base/language/c/#11","title":"1.1 \u57fa\u672c\u77e5\u8bc6","text":"<ul> <li>pointer\u662f\u7528\u6765\u5b58\u50a8\u5185\u5b58\u5730\u5740\u7684\u53d8\u91cf</li> <li>\u5185\u5b58\u5730\u5740\u76f4\u63a5\u6307\u5411\u5b58\u5728\u8be5\u5730\u5740\u7684\u5bf9\u8c61\u7684\u503c</li> <li>\u5b9a\u4e49\u6307\u9488\u53d8\u91cf\u65f6\u5fc5\u987b\u5e26<code>*</code>\uff0c\u7ed9\u6307\u9488\u53d8\u91cf\u8d4b\u503c\u65f6\u4e0d\u80fd\u5e26<code>*</code> C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    int a = 15;\n    int *p = &amp;a;\n    printf(\"%d, %d\\n\", a, *p);  //\u4e24\u79cd\u65b9\u5f0f\u90fd\u53ef\u4ee5\u8f93\u51faa\u7684\u503c\n    return 0;\n}\n</code></pre></li> </ul>"},{"location":"cs_base/language/c/#12","title":"1.2\u6570\u7ec4\u6307\u9488","text":"C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    int arr[] = { 99, 15, 100, 888, 252 };\n    int len = sizeof(arr) / sizeof(int);  //\u6c42\u6570\u7ec4\u957f\u5ea6\n    int i;\n    for(i=0; i&lt;len; i++){\n        printf(\"%d  \", *(arr+i) );  //*(arr+i)\u7b49\u4ef7\u4e8earr[i]\n    }\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre>"},{"location":"cs_base/language/c/#13","title":"1.3\u5b57\u7b26\u4e32\u6307\u9488","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main(){\n    char *str = \"http://c.biancheng.net\";\n    int len = strlen(str), i;\n    //\u76f4\u63a5\u8f93\u51fa\u5b57\u7b26\u4e32\n    printf(\"%s\\n\", str);\n    //\u4f7f\u7528*(str+i)\n    for(i=0; i&lt;len; i++){\n        printf(\"%c\", *(str+i));\n    }\n    printf(\"\\n\");\n    //\u4f7f\u7528str[i]\n    for(i=0; i&lt;len; i++){\n        printf(\"%c\", str[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre> - \u533a\u522b\u662f\uff1a\u5b57\u7b26\u6570\u7ec4\u548c\u5b57\u7b26\u4e32\u6307\u9488(\u4e5f\u53eb\u5b57\u7b26\u4e32\u5e38\u91cf\uff09\u5728\u5185\u5b58\u4e2d\u7684\u5b58\u50a8\u533a\u57df\u4e0d\u540c\uff0c\u524d\u8005\u5728\u5168\u5c40\u6570\u636e\u533a\u6216\u6808\u533a\uff0c\u540e\u8005\u5728\u5e38\u91cf\u533a\u3002\u524d\u8005\u6709\u8bfb\u53d6\u548c\u5199\u5165\u7684\u6743\u9650\uff0c\u800c\u540e\u8005\u53ea\u6709\u8bfb\u53d6\u6743\u9650\uff0c\u6ca1\u6709\u5199\u5165\u6743\u9650 C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    char *str = \"Hello World!\";\n    str = \"I love C!\";  //\u6b63\u786e\n    str[3] = 'P';  //\u9519\u8bef\n\n    return 0;\n}\n</code></pre>"},{"location":"cs_base/language/c/#14","title":"1.4\u6307\u9488\u53d8\u91cf\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nvoid swap(int *p1, int *p2){ //\u4f20\u5165\u7684\u662f\u6307\u9488\u53d8\u91cf\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u4fee\u6539\u8fd9\u4e2a\u5185\u5b58\u4e0a\u7684\u503c\n    int temp;  //\u4e34\u65f6\u53d8\u91cf\n    temp = *p1;\n    *p1 = *p2;\n    *p2 = temp;\n}\n\nint main(){\n    int a = 66, b = 99;\n    swap(&amp;a, &amp;b);\n    printf(\"a = %d, b = %d\\n\", a, b);\n    return 0;\n}\n</code></pre> - \u6570\u7ec4\u662f\u4e00\u7cfb\u5217\u6570\u636e\u7684\u96c6\u5408\uff0c\u65e0\u6cd5\u901a\u8fc7\u53c2\u6570\u5c06\u5b83\u4eec\u4e00\u6b21\u6027\u4f20\u9012\u5230\u51fd\u6570\u5185\u90e8\uff0c\u5982\u679c\u5e0c\u671b\u5728\u51fd\u6570\u5185\u90e8\u64cd\u4f5c\u6570\u7ec4\uff0c\u5fc5\u987b\u4f20\u9012\u6570\u7ec4\u6307\u9488 C<pre><code>#include &lt;stdio.h&gt;\n\n//\u53c2\u6570 intArr \u4ec5\u4ec5\u662f\u4e00\u4e2a\u6570\u7ec4\u6307\u9488\uff0c\u5728\u51fd\u6570\u5185\u90e8\u65e0\u6cd5\u901a\u8fc7\u8fd9\u4e2a\u6307\u9488\u83b7\u5f97\u6570\u7ec4\u957f\u5ea6\uff0c\u5fc5\u987b\u5c06\u6570\u7ec4\u957f\u5ea6\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4f20\u9012\u5230\u51fd\u6570\u5185\u90e8\u3002\nint max(int *intArr, int len){\n    int i, maxValue = intArr[0];  //\u5047\u8bbe\u7b2c0\u4e2a\u5143\u7d20\u662f\u6700\u5927\u503c\n    for(i=1; i&lt;len; i++){\n        if(maxValue &lt; intArr[i]){\n            maxValue = intArr[i];\n        }\n    }\n\n    return maxValue;\n}\n\nint main(){\n    int nums[6], i;\n    int len = sizeof(nums)/sizeof(int);\n    //\u8bfb\u53d6\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\u5e76\u8d4b\u503c\u7ed9\u6570\u7ec4\u5143\u7d20\n    for(i=0; i&lt;len; i++){\n        scanf(\"%d\", nums+i);\n    }\n    printf(\"Max value is %d!\\n\", max(nums, len));\n\n    return 0;\n}\n</code></pre> - C\u8bed\u8a00\u4e3a\u4ec0\u4e48\u4e0d\u5141\u8bb8\u76f4\u63a5\u4f20\u9012\u6570\u7ec4\u7684\u6240\u6709\u5143\u7d20\uff0c\u800c\u5fc5\u987b\u4f20\u9012\u6570\u7ec4\u6307\u9488\u5462\uff1f  \u53c2\u6570\u7684\u4f20\u9012\u672c\u8d28\u4e0a\u662f\u4e00\u6b21\u8d4b\u503c\u7684\u8fc7\u7a0b\uff0c\u8d4b\u503c\u5c31\u662f\u5bf9\u5185\u5b58\u8fdb\u884c\u62f7\u8d1d\u3002\u6240\u8c13\u5185\u5b58\u62f7\u8d1d\uff0c\u662f\u6307\u5c06\u4e00\u5757\u5185\u5b58\u4e0a\u7684\u6570\u636e\u590d\u5236\u5230\u53e6\u4e00\u5757\u5185\u5b58\u4e0a\u3002\u6570\u636e\u7684\u6570\u91cf\u6ca1\u6709\u9650\u5236\uff0c\u53ef\u80fd\u5f88\u5c11\uff0c\u4e5f\u53ef\u80fd\u6210\u5343\u4e0a\u4e07\uff0c\u5bf9\u5b83\u4eec\u8fdb\u884c\u5185\u5b58\u62f7\u8d1d\u6709\u53ef\u80fd\u662f\u4e00\u4e2a\u6f2b\u957f\u7684\u8fc7\u7a0b\uff0c\u4f1a\u4e25\u91cd\u62d6\u6162\u7a0b\u5e8f\u7684\u6548\u7387\uff0c\u4e3a\u4e86\u9632\u6b62\u6280\u827a\u4e0d\u4f73\u7684\u7a0b\u5e8f\u5458\u5199\u51fa\u4f4e\u6548\u7684\u4ee3\u7801\uff0cC\u8bed\u8a00\u6ca1\u6709\u4ece\u8bed\u6cd5\u4e0a\u652f\u6301\u6570\u636e\u96c6\u5408\u7684\u76f4\u63a5\u8d4b\u503c\u3002"},{"location":"cs_base/language/c/#15","title":"1.5\u6307\u9488\u51fd\u6570","text":"<ul> <li>\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u6307\u9488\uff08\u5730\u5740\uff09 C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nchar *strlong(char *str1, char *str2){\n    if(strlen(str1) &gt;= strlen(str2)){\n        return str1;\n    }else{\n        return str2;\n    }\n}\n\nint main(){\n    char str1[30], str2[30], *str;\n    gets(str1);\n    gets(str2);\n    str = strlong(str1, str2);\n    printf(\"Longer string: %s\\n\", str);\n\n    return 0;\n}\n</code></pre></li> <li>\u7528\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u65f6\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u51fd\u6570\u8fd0\u884c\u7ed3\u675f\u540e\u4f1a\u9500\u6bc1\u5728\u5b83\u5185\u90e8\u5b9a\u4e49\u7684\u6240\u6709\u5c40\u90e8\u6570\u636e\uff0c\u5305\u62ec\u5c40\u90e8\u53d8\u91cf\u3001\u5c40\u90e8\u6570\u7ec4\u548c\u5f62\u5f0f\u53c2\u6570\uff0c\u51fd\u6570\u8fd4\u56de\u7684\u6307\u9488\u8bf7\u5c3d\u91cf\u4e0d\u8981\u6307\u5411\u8fd9\u4e9b\u6570\u636e\uff0cC\u8bed\u8a00\u6ca1\u6709\u4efb\u4f55\u673a\u5236\u6765\u4fdd\u8bc1\u8fd9\u4e9b\u6570\u636e\u4f1a\u4e00\u76f4\u6709\u6548\uff0c\u5b83\u4eec\u5728\u540e\u7eed\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u5f15\u53d1\u8fd0\u884c\u65f6\u9519\u8bef\u3002</li> <li>\u8fd9\u91cc\u6240\u8c13\u7684\u9500\u6bc1\u5e76\u4e0d\u662f\u5c06\u5c40\u90e8\u6570\u636e\u6240\u5360\u7528\u7684\u5185\u5b58\u5168\u90e8\u62b9\u6389\uff0c\u800c\u662f\u7a0b\u5e8f\u653e\u5f03\u5bf9\u5b83\u7684\u4f7f\u7528\u6743\u9650\uff0c\u5f03\u4e4b\u4e0d\u7406\uff0c\u540e\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u968f\u610f\u4f7f\u7528\u8fd9\u5757\u5185\u5b58\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684\u4e24\u4e2a\u4f8b\u5b50\uff0cfunc() \u8fd0\u884c\u7ed3\u675f\u540e n \u7684\u5185\u5b58\u4f9d\u7136\u4fdd\u6301\u539f\u6837\uff0c\u503c\u8fd8\u662f 100\uff0c\u5982\u679c\u4f7f\u7528\u53ca\u65f6\u4e5f\u80fd\u591f\u5f97\u5230\u6b63\u786e\u7684\u6570\u636e\uff0c\u5982\u679c\u6709\u5176\u5b83\u51fd\u6570\u88ab\u8c03\u7528\u5c31\u4f1a\u8986\u76d6\u8fd9\u5757\u5185\u5b58\uff0c\u5f97\u5230\u7684\u6570\u636e\u5c31\u5931\u53bb\u4e86\u610f\u4e49\u3002</li> </ul>"},{"location":"cs_base/language/c/#16","title":"1.6\u4e8c\u7ea7\u6307\u9488","text":"<ul> <li>\u6307\u5411\u6307\u9488\u7684\u6307\u9488</li> <li>\u6307\u9488\u53d8\u91cf\u4e5f\u662f\u4e00\u79cd\u53d8\u91cf\uff0c\u4e5f\u4f1a\u5360\u7528\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>&amp;</code>\u83b7\u53d6\u5b83\u7684\u5730\u5740\u3002C\u8bed\u8a00\u4e0d\u9650\u5236\u6307\u9488\u7684\u7ea7\u6570\uff0c\u6bcf\u589e\u52a0\u4e00\u7ea7\u6307\u9488\uff0c\u5728\u5b9a\u4e49\u6307\u9488\u53d8\u91cf\u65f6\u5c31\u5f97\u589e\u52a0\u4e00\u4e2a\u661f\u53f7<code>*</code>\u3002p1 \u662f\u4e00\u7ea7\u6307\u9488\uff0c\u6307\u5411\u666e\u901a\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5b9a\u4e49\u65f6\u6709\u4e00\u4e2a<code>*</code>\uff1bp2 \u662f\u4e8c\u7ea7\u6307\u9488\uff0c\u6307\u5411\u4e00\u7ea7\u6307\u9488 p1\uff0c\u5b9a\u4e49\u65f6\u6709\u4e24\u4e2a<code>*</code>\u3002 C<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    int a =100;\n    int *p1 = &amp;a;\n    int **p2 = &amp;p1;\n    int ***p3 = &amp;p2;\n\n    printf(\"%d, %d, %d, %d\\n\", a, *p1, **p2, ***p3);\n    printf(\"&amp;p2 = %#X, p3 = %#X\\n\", &amp;p2, p3);\n    printf(\"&amp;p1 = %#X, p2 = %#X, *p3 = %#X\\n\", &amp;p1, p2, *p3);\n    printf(\" &amp;a = %#X, p1 = %#X, *p2 = %#X, **p3 = %#X\\n\", &amp;a, p1, *p2, **p3);\n    return 0;\n}\n</code></pre></li> </ul>"},{"location":"cs_base/language/c/#17","title":"1.7\u6307\u9488\u6570\u7ec4","text":"<ul> <li>\u5982\u679c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u4fdd\u5b58\u7684\u90fd\u662f\u6307\u9488\uff0c\u5373\u79f0\u4e4b\u4e3a\u6307\u9488\u6570\u7ec4\u3002 C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    int a = 16, b = 932, c = 100;\n    //\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\n    int *arr[3] = {&amp;a, &amp;b, &amp;c};//\u4e5f\u53ef\u4ee5\u4e0d\u6307\u5b9a\u957f\u5ea6\uff0c\u76f4\u63a5\u5199\u4f5c int *arr[]\n    //\u5b9a\u4e49\u4e00\u4e2a\u6307\u5411\u6307\u9488\u6570\u7ec4\u7684\u6307\u9488\n    int **parr = arr;\n    printf(\"%d, %d, %d\\n\", *arr[0], *arr[1], *arr[2]);\n    printf(\"%d, %d, %d\\n\", **(parr+0), **(parr+1), **(parr+2));\n\n    return 0;\n}\n</code></pre></li> </ul>"},{"location":"cs_base/language/c/#18","title":"1.8\u4e8c\u7ef4\u6570\u7ec4\u6307\u9488","text":"<p>\u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3\u6307\u9488\u548c\u4e8c\u7ef4\u6570\u7ec4\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u5148\u6765\u5b9a\u4e49\u4e00\u4e2a\u6307\u5411 a \u7684\u6307\u9488\u53d8\u91cf p\uff1a <code>int (*p)[4] = a;</code> \u62ec\u53f7\u4e2d\u7684<code>*</code>\u8868\u660e p \u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5b83\u6307\u5411\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u7c7b\u578b\u4e3a<code>int [4]</code>\uff0c\u8fd9\u6b63\u662f a \u6240\u5305\u542b\u7684\u6bcf\u4e2a\u4e00\u7ef4\u6570\u7ec4\u7684\u7c7b\u578b\u3002 <code>[ ]</code>\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e<code>*</code>\uff0c<code>( )</code>\u662f\u5fc5\u987b\u8981\u52a0\u7684\uff0c\u5982\u679c\u8d64\u88f8\u88f8\u5730\u5199\u4f5c<code>int *p[4]</code>\uff0c\u90a3\u4e48\u5e94\u8be5\u7406\u89e3\u4e3a<code>int *(p[4])</code>\uff0cp \u5c31\u6210\u4e86\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u4e8c\u7ef4\u6570\u7ec4\u6307\u9488\u3002 - \u6570\u7ec4\u540d a \u5728\u8868\u8fbe\u5f0f\u4e2d\u4e5f\u4f1a\u88ab\u8f6c\u6362\u4e3a\u548c p \u7b49\u4ef7\u7684\u6307\u9488\uff01 </p>C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    int a[3][4] = { {0, 1, 2, 3}, {4, 5, 6, 7}, {8, 9, 10, 11} };\n    int (*p)[4] = a;\n    printf(\"%d\\n\", sizeof(*(p+1)));\n    //\u8fd0\u884c\u7ed3\u679c\uff1a16\n    return 0;\n}\n</code></pre> - \u8bf4\u660e<code>*(p+1)</code>\u8868\u793a\u6574\u4e2a\u7b2c\u4e00\u884c\u7684\u6570\u636e\uff0c4 * 4=16 - <code>*(*(p+1)+1)</code>\u8868\u793a\u7b2c 1 \u884c\u7b2c 1 \u4e2a\u5143\u7d20\u7684\u503c\u3002\u5f88\u660e\u663e\uff0c\u589e\u52a0\u4e00\u4e2a * \u8868\u793a\u53d6\u5730\u5740\u4e0a\u7684\u6570\u636e\u3002 - \u6240\u4ee5\u6709\u4ee5\u4e0b\u7b49\u4ef7\u5173\u7cfb\uff1a Text Only<pre><code>a+i == p+i  \na[i] == p[i] == *(a+i) == *(p+i)  \na[i][j] == p[i][j] == *(a[i]+j) == *(p[i]+j) == *(*(a+i)+j) ==\u00a0*(*(p+i)+j)\n</code></pre> - \u4f7f\u7528\u6307\u9488\u904d\u5386\u4e8c\u7ef4\u6570\u7ec4 C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    int a[3][4]={0,1,2,3,4,5,6,7,8,9,10,11};\n    int(*p)[4];\n    int i,j;\n    p=a;\n    for(i=0; i&lt;3; i++){\n        for(j=0; j&lt;4; j++) printf(\"%2d  \",*(*(p+i)+j));\n        printf(\"\\n\");\n    }\n    return 0;\n}\n</code></pre> - \u6307\u9488\u6570\u7ec4\u548c\u4e8c\u7ef4\u6570\u7ec4\u6307\u9488\u7684\u533a\u522b\uff1a <code>1. int *(p1[5]); //\u6307\u9488\u6570\u7ec4\uff0c\u53ef\u4ee5\u53bb\u6389\u62ec\u53f7\u76f4\u63a5\u5199\u4f5c int *p1[5];</code> <code>2. int (*p2)[5]; //\u4e8c\u7ef4\u6570\u7ec4\u6307\u9488\uff0c\u4e0d\u80fd\u53bb\u6389\u62ec\u53f7</code>"},{"location":"cs_base/language/c/#19","title":"1.9\u51fd\u6570\u6307\u9488","text":"<ul> <li>\u4e00\u4e2a\u51fd\u6570\u603b\u662f\u5360\u7528\u4e00\u6bb5\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\uff0c\u51fd\u6570\u540d\u5728\u8868\u8fbe\u5f0f\u4e2d\u6709\u65f6\u4e5f\u4f1a\u88ab\u8f6c\u6362\u4e3a\u8be5\u51fd\u6570\u6240\u5728\u5185\u5b58\u533a\u57df\u7684\u9996\u5730\u5740\uff0c\u8fd9\u548c\u6570\u7ec4\u540d\u975e\u5e38\u7c7b\u4f3c\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u51fd\u6570\u7684\u8fd9\u4e2a\u9996\u5730\u5740\uff08\u6216\u79f0\u5165\u53e3\u5730\u5740\uff09\u8d4b\u4e88\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\uff0c\u4f7f\u6307\u9488\u53d8\u91cf\u6307\u5411\u51fd\u6570\u6240\u5728\u7684\u5185\u5b58\u533a\u57df\uff0c\u7136\u540e\u901a\u8fc7\u6307\u9488\u53d8\u91cf\u5c31\u53ef\u4ee5\u627e\u5230\u5e76\u8c03\u7528\u8be5\u51fd\u6570\u3002\u8fd9\u79cd\u6307\u9488\u5c31\u662f\u51fd\u6570\u6307\u9488\u3002</li> <li>\u5b9a\u4e49\u5f62\u5f0f\u4e3a<code>returnType (*pointerName)(param list)</code><ul> <li><code>( )</code>\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e<code>*</code>\uff0c\u7b2c\u4e00\u4e2a\u62ec\u53f7\u4e0d\u80fd\u7701\u7565\uff0c\u5982\u679c\u5199\u4f5c<code>returnType *pointerName(param list);</code>\u5c31\u6210\u4e86\u51fd\u6570\u539f\u578b\uff0c\u5b83\u8868\u660e\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b<code>returnType *</code>\u3002</li> <li>\u3010\u5b9e\u4f8b\u3011\u7528\u6307\u9488\u6765\u5b9e\u73b0\u5bf9\u51fd\u6570\u7684\u8c03\u7528 C<pre><code>#include &lt;stdio.h&gt;\n//\u8fd4\u56de\u4e24\u4e2a\u6570\u4e2d\u8f83\u5927\u7684\u4e00\u4e2a\nint max(int a, int b){\n    return a&gt;b ? a : b;\n}\nint main(){\n    int x, y, maxval;\n    //\u5b9a\u4e49\u51fd\u6570\u6307\u9488\n    int (*pmax)(int, int) = max;  //\u4e5f\u53ef\u4ee5\u5199\u4f5cint (*pmax)(int a, int b)\n    printf(\"Input two numbers:\");\n    scanf(\"%d %d\", &amp;x, &amp;y);\n    maxval = (*pmax)(x, y);\n    printf(\"Max value: %d\\n\", maxval);\n\n    return 0;\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs_base/language/c/#110","title":"1.10\u6307\u9488\u603b\u7ed3","text":"<ul> <li>\u6307\u9488\uff08Pointer\uff09\u5c31\u662f\u5185\u5b58\u7684\u5730\u5740\uff0cC\u8bed\u8a00\u5141\u8bb8\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u5b58\u653e\u6307\u9488\uff0c\u8fd9\u79cd\u53d8\u91cf\u79f0\u4e3a\u6307\u9488\u53d8\u91cf\u3002\u6307\u9488\u53d8\u91cf\u53ef\u4ee5\u5b58\u653e\u57fa\u672c\u7c7b\u578b\u6570\u636e\u7684\u5730\u5740\uff0c\u4e5f\u53ef\u4ee5\u5b58\u653e\u6570\u7ec4\u3001\u51fd\u6570\u4ee5\u53ca\u5176\u4ed6\u6307\u9488\u53d8\u91cf\u7684\u5730\u5740\u3002  </li> <li> <p>\u7a0b\u5e8f\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u9700\u8981\u7684\u662f\u6570\u636e\u548c\u6307\u4ee4\u7684\u5730\u5740\uff0c\u53d8\u91cf\u540d\u3001\u51fd\u6570\u540d\u3001\u5b57\u7b26\u4e32\u540d\u548c\u6570\u7ec4\u540d\u5728\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u5b83\u4eec\u90fd\u662f\u5730\u5740\u7684\u52a9\u8bb0\u7b26\uff1a\u5728\u7f16\u5199\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u8ba4\u4e3a\u53d8\u91cf\u540d\u8868\u793a\u7684\u662f\u6570\u636e\u672c\u8eab\uff0c\u800c\u51fd\u6570\u540d\u3001\u5b57\u7b26\u4e32\u540d\u548c\u6570\u7ec4\u540d\u8868\u793a\u7684\u662f\u4ee3\u7801\u5757\u6216\u6570\u636e\u5757\u7684\u9996\u5730\u5740\uff1b\u7a0b\u5e8f\u88ab\u7f16\u8bd1\u548c\u94fe\u63a5\u540e\uff0c\u8fd9\u4e9b\u540d\u5b57\u90fd\u4f1a\u6d88\u5931\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u5b83\u4eec\u5bf9\u5e94\u7684\u5730\u5740\u3002</p> </li> <li> <p>\u5e38\u89c1\u6307\u9488\u53d8\u91cf\u7684\u5b9a\u4e49</p> </li> </ul> \u5b9a \u00a0\u4e49 \u542b \u00a0\u4e49 int *p; p \u53ef\u4ee5\u6307\u5411 int \u7c7b\u578b\u7684\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u6307\u5411\u7c7b\u4f3c int arr[n] \u7684\u6570\u7ec4\u3002 int **p; p \u4e3a\u4e8c\u7ea7\u6307\u9488\uff0c\u6307\u5411 int * \u7c7b\u578b\u7684\u6570\u636e\u3002 int *p[n]; p \u4e3a\u6307\u9488\u6570\u7ec4\u3002[ ] \u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e \uff0c\u6240\u4ee5\u5e94\u8be5\u7406\u89e3\u4e3a int (p[n]); int (*p)[n]; p \u4e3a\u4e8c\u7ef4\u6570\u7ec4\u6307\u9488\u3002 int *p(); p \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a int *\u3002 int (*p)(); p \u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u539f\u578b\u4e3a int func() \u7684\u51fd\u6570\u3002 1. \u6307\u9488\u53d8\u91cf\u53ef\u4ee5\u8fdb\u884c\u52a0\u51cf\u8fd0\u7b97\uff0c\u4f8b\u5982<code>p++</code>\u3001<code>p+i</code>\u3001<code>p-=i</code>\u3002\u6307\u9488\u53d8\u91cf\u7684\u52a0\u51cf\u8fd0\u7b97\u5e76\u4e0d\u662f\u7b80\u5355\u7684\u52a0\u4e0a\u6216\u51cf\u53bb\u4e00\u4e2a\u6574\u6570\uff0c\u800c\u662f\u8ddf\u6307\u9488\u6307\u5411\u7684\u6570\u636e\u7c7b\u578b\u6709\u5173\u3002 2. \u7ed9\u6307\u9488\u53d8\u91cf\u8d4b\u503c\u65f6\uff0c\u8981\u5c06\u4e00\u4efd\u6570\u636e\u7684\u5730\u5740\u8d4b\u7ed9\u5b83\uff0c\u4e0d\u80fd\u76f4\u63a5\u8d4b\u7ed9\u4e00\u4e2a\u6574\u6570\uff0c\u4f8b\u5982<code>int *p = 1000;</code>\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u4e00\u822c\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002 3. \u4f7f\u7528\u6307\u9488\u53d8\u91cf\u4e4b\u524d\u4e00\u5b9a\u8981\u521d\u59cb\u5316\uff0c\u5426\u5219\u5c31\u4e0d\u80fd\u786e\u5b9a\u6307\u9488\u6307\u5411\u54ea\u91cc\uff0c\u5982\u679c\u5b83\u6307\u5411\u7684\u5185\u5b58\u6ca1\u6709\u4f7f\u7528\u6743\u9650\uff0c\u7a0b\u5e8f\u5c31\u5d29\u6e83\u4e86\u3002\u5bf9\u4e8e\u6682\u65f6\u6ca1\u6709\u6307\u5411\u7684\u6307\u9488\uff0c\u5efa\u8bae\u8d4b\u503c<code>NULL</code>\u3002 4. \u4e24\u4e2a\u6307\u9488\u53d8\u91cf\u53ef\u4ee5\u76f8\u51cf\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u53d8\u91cf\u6307\u5411\u540c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u76f8\u51cf\u7684\u7ed3\u679c\u5c31\u662f\u4e24\u4e2a\u6307\u9488\u4e4b\u95f4\u76f8\u5dee\u7684\u5143\u7d20\u4e2a\u6570\u3002 5. \u6570\u7ec4\u4e5f\u662f\u6709\u7c7b\u578b\u7684\uff0c\u6570\u7ec4\u540d\u7684\u672c\u610f\u662f\u8868\u793a\u4e00\u7ec4\u7c7b\u578b\u76f8\u540c\u7684\u6570\u636e\u3002\u5728\u5b9a\u4e49\u6570\u7ec4\u65f6\uff0c\u6216\u8005\u548c sizeof\u3001&amp; \u8fd0\u7b97\u7b26\u4e00\u8d77\u4f7f\u7528\u65f6\u6570\u7ec4\u540d\u624d\u8868\u793a\u6574\u4e2a\u6570\u7ec4\uff0c\u8868\u8fbe\u5f0f\u4e2d\u7684\u6570\u7ec4\u540d\u4f1a\u88ab\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\u3002"},{"location":"cs_base/language/c/#2","title":"2.\u7ed3\u6784\u4f53","text":""},{"location":"cs_base/language/c/#21","title":"2.1\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49","text":"<p>\u5728C\u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ed3\u6784\u4f53\uff08Struct)\u6765\u5b58\u653e\u4e00\u7ec4\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u3002\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5f62\u5f0f\u4e3a\uff1a </p>C<pre><code>struct \u7ed3\u6784\u4f53\u540d{  \n\u00a0 \u00a0 \u7ed3\u6784\u4f53\u6240\u5305\u542b\u7684\u53d8\u91cf\u6216\u6570\u7ec4  \n};\n</code></pre> C<pre><code>struct stu{\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5b66\u4e60\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n};\n</code></pre>"},{"location":"cs_base/language/c/#22","title":"2.2\u6210\u5458\u7684\u83b7\u53d6\u548c\u8d4b\u503c","text":"<ul> <li>\u6570\u7ec4\u4f7f\u7528\u4e0b\u6807<code>[ ]</code>\u83b7\u53d6\u5355\u4e2a\u5143\u7d20\uff0c\u7ed3\u6784\u4f53\u4f7f\u7528\u70b9\u53f7<code>.</code>\u83b7\u53d6\u5355\u4e2a\u6210\u5458\u3002<code>\u7ed3\u6784\u4f53\u53d8\u91cf\u540d.\u6210\u5458\u540d;</code> C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    struct{\n        char *name;  //\u59d3\u540d\n        int num;  //\u5b66\u53f7\n        int age;  //\u5e74\u9f84\n        char group;  //\u6240\u5728\u5c0f\u7ec4\n        float score;  //\u6210\u7ee9\n    } stu1;\n\n    //\u7ed9\u7ed3\u6784\u4f53\u6210\u5458\u8d4b\u503c\n    stu1.name = \"Tom\";\n    stu1.num = 12;\n    stu1.age = 18;\n    stu1.group = 'A';\n    stu1.score = 136.5;\n\n    //\u8bfb\u53d6\u7ed3\u6784\u4f53\u6210\u5458\u7684\u503c\n    printf(\"%s\u7684\u5b66\u53f7\u662f%d\uff0c\u5e74\u9f84\u662f%d\uff0c\u5728%c\u7ec4\uff0c\u4eca\u5e74\u7684\u6210\u7ee9\u662f%.1f\uff01\\n\", stu1.name, stu1.num, stu1.age, stu1.group, stu1.score);\n    //\u8fd0\u884c\u7ed3\u679c\uff1a  \n    //Tom\u7684\u5b66\u53f7\u662f12\uff0c\u5e74\u9f84\u662f18\uff0c\u5728A\u7ec4\uff0c\u4eca\u5e74\u7684\u6210\u7ee9\u662f136.5\uff01\n    return 0;\n}\n</code></pre></li> <li>\u7ed3\u6784\u4f53\u662f\u4e00\u79cd\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b\uff0c\u662f\u521b\u5efa\u53d8\u91cf\u7684\u6a21\u677f\uff0c\u4e0d\u5360\u7528\u5185\u5b58\u7a7a\u95f4\uff1b\u7ed3\u6784\u4f53\u53d8\u91cf\u624d\u5305\u542b\u4e86\u5b9e\u5b9e\u5728\u5728\u7684\u6570\u636e\uff0c\u9700\u8981\u5185\u5b58\u7a7a\u95f4\u6765\u5b58\u50a8\u3002</li> </ul>"},{"location":"cs_base/language/c/#23","title":"2.3\u7ed3\u6784\u4f53\u6570\u7ec4","text":"C<pre><code>struct stu{\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5c0f\u7ec4 \n    float score;  //\u6210\u7ee9\n}class[5] = {\n    {\"Li ping\", 5, 18, 'C', 145.0},\n    {\"Zhang ping\", 4, 19, 'A', 130.5},\n    {\"He fang\", 1, 18, 'A', 148.5},\n    {\"Cheng ling\", 2, 17, 'F', 139.0},\n    {\"Wang ming\", 3, 17, 'B', 144.5}\n};\n</code></pre> \u6216\u8005 C<pre><code>struct stu{\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5c0f\u7ec4 \n    float score;  //\u6210\u7ee9\n}class[5];\n</code></pre> \u6216\u8005 C<pre><code>struct stu{\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5c0f\u7ec4 \n    float score;  //\u6210\u7ee9\n}class[] = {                   //\u4e0d\u7ed9\u51fa\u6570\u7ec4\u7684\u957f\u5ea6\n    {\"Li ping\", 5, 18, 'C', 145.0},\n    {\"Zhang ping\", 4, 19, 'A', 130.5},\n    {\"He fang\", 1, 18, 'A', 148.5},\n    {\"Cheng ling\", 2, 17, 'F', 139.0},\n    {\"Wang ming\", 3, 17, 'B', 144.5}\n};\n</code></pre>"},{"location":"cs_base/language/c/#24","title":"2.4\u7ed3\u6784\u4f53\u6307\u9488","text":""},{"location":"cs_base/language/c/#241","title":"2.4.1\u57fa\u672c\u77e5\u8bc6","text":"<ul> <li>\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u6307\u5411\u7ed3\u6784\u4f53 C<pre><code>//\u7ed3\u6784\u4f53\nstruct stu{\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n} stu1 = { \"Tom\", 12, 18, 'A', 136.5 };\n//\u7ed3\u6784\u4f53\u6307\u9488\nstruct stu *pstu = &amp;stu1;\n</code></pre></li> <li>\u7ed3\u6784\u4f53\u53d8\u91cf\u540d\u548c\u6570\u7ec4\u540d\u4e0d\u540c\uff0c\u6570\u7ec4\u540d\u5728\u8868\u8fbe\u5f0f\u4e2d\u4f1a\u88ab\u8f6c\u6362\u4e3a\u6570\u7ec4\u6307\u9488\uff0c\u800c\u7ed3\u6784\u4f53\u53d8\u91cf\u540d\u4e0d\u4f1a\uff0c\u65e0\u8bba\u5728\u4efb\u4f55\u8868\u8fbe\u5f0f\u4e2d\u5b83\u8868\u793a\u7684\u90fd\u662f\u6574\u4e2a\u96c6\u5408\u672c\u8eab\uff0c\u8981\u60f3\u53d6\u5f97\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u5730\u5740\uff0c\u5fc5\u987b\u5728\u524d\u9762\u52a0<code>&amp;</code>\uff0c\u6240\u4ee5\u7ed9 pstu \u8d4b\u503c\u53ea\u80fd\u5199\u4f5c\uff1a<code>struct stu *pstu = &amp;stu1;</code></li> <li>\u7ed3\u6784\u4f53\u548c\u7ed3\u6784\u4f53\u53d8\u91cf\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u6982\u5ff5\uff1a\u7ed3\u6784\u4f53\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u662f\u4e00\u79cd\u521b\u5efa\u53d8\u91cf\u7684\u6a21\u677f\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u4e3a\u5b83\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5c31\u50cf int\u3001float\u3001char \u8fd9\u4e9b\u5173\u952e\u5b57\u672c\u8eab\u4e0d\u5360\u7528\u5185\u5b58\u4e00\u6837\uff1b\u7ed3\u6784\u4f53\u53d8\u91cf\u624d\u5305\u542b\u5b9e\u5b9e\u5728\u5728\u7684\u6570\u636e\uff0c\u624d\u9700\u8981\u5185\u5b58\u6765\u5b58\u50a8\u3002\u4e0b\u9762\u7684\u5199\u6cd5\u662f\u9519\u8bef\u7684\uff0c\u4e0d\u53ef\u80fd\u53bb\u53d6\u4e00\u4e2a\u7ed3\u6784\u4f53\u540d\u7684\u5730\u5740\uff0c\u4e5f\u4e0d\u80fd\u5c06\u5b83\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf\uff1a<code>struct stu *pstu = &amp;stu;</code>or<code>struct stu *pstu = stu;</code></li> </ul>"},{"location":"cs_base/language/c/#242","title":"2.4.2\u83b7\u53d6\u7ed3\u6784\u4f53\u6210\u5458","text":"<ul> <li>\u901a\u8fc7\u7ed3\u6784\u4f53\u6307\u9488\u53ef\u4ee5\u83b7\u53d6\u7ed3\u6784\u4f53\u6210\u5458\uff0c\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a<code>(*pointer).memberName</code>\u6216\u8005\uff1a<code>pointer-&gt;memberName</code></li> <li>\u7b2c\u4e00\u79cd\u5199\u6cd5\u4e2d\uff0c<code>.</code>\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e<code>*</code>\uff0c<code>(*pointer)</code>\u4e24\u8fb9\u7684\u62ec\u53f7\u4e0d\u80fd\u5c11\u3002\u5982\u679c\u53bb\u6389\u62ec\u53f7\u5199\u4f5c<code>*pointer.memberName</code>\uff0c\u90a3\u4e48\u5c31\u7b49\u6548\u4e8e<code>*(pointer.memberName)</code>\uff0c\u8fd9\u6837\u610f\u4e49\u5c31\u5b8c\u5168\u4e0d\u5bf9\u4e86\u3002  </li> <li>\u7b2c\u4e8c\u79cd\u5199\u6cd5\u4e2d\uff0c<code>-&gt;</code>\u662f\u4e00\u4e2a\u65b0\u7684\u8fd0\u7b97\u7b26\uff0c\u4e60\u60ef\u79f0\u5b83\u4e3a\u201c\u7bad\u5934\u201d\uff0c\u6709\u4e86\u5b83\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ed3\u6784\u4f53\u6307\u9488\u76f4\u63a5\u53d6\u5f97\u7ed3\u6784\u4f53\u6210\u5458\uff1b\u8fd9\u4e5f\u662f<code>-&gt;</code>\u5728C\u8bed\u8a00\u4e2d\u7684\u552f\u4e00\u7528\u9014\u3002 C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    struct{\n        char *name;  //\u59d3\u540d\n        int num;  //\u5b66\u53f7\n        int age;  //\u5e74\u9f84\n        char group;  //\u6240\u5728\u5c0f\u7ec4\n        float score;  //\u6210\u7ee9\n    } stu1 = { \"Tom\", 12, 18, 'A', 136.5 }, *pstu = &amp;stu1;\n\n    //\u8bfb\u53d6\u7ed3\u6784\u4f53\u6210\u5458\u7684\u503c\n    printf(\"%s\u7684\u5b66\u53f7\u662f%d\uff0c\u5e74\u9f84\u662f%d\uff0c\u5728%c\u7ec4\uff0c\u4eca\u5e74\u7684\u6210\u7ee9\u662f%.1f\uff01\\n\", (*pstu).name, (*pstu).num, (*pstu).age, (*pstu).group, (*pstu).score);\n    printf(\"%s\u7684\u5b66\u53f7\u662f%d\uff0c\u5e74\u9f84\u662f%d\uff0c\u5728%c\u7ec4\uff0c\u4eca\u5e74\u7684\u6210\u7ee9\u662f%.1f\uff01\\n\", pstu-&gt;name, pstu-&gt;num, pstu-&gt;age, pstu-&gt;group, pstu-&gt;score);\n\n    return 0;\n}\n</code></pre></li> </ul>"},{"location":"cs_base/language/c/#243","title":"2.4.3\u7ed3\u6784\u4f53\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570","text":"<ul> <li>\u7ed3\u6784\u4f53\u53d8\u91cf\u540d\u4ee3\u8868\u7684\u662f\u6574\u4e2a\u96c6\u5408\u672c\u8eab\uff0c\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u65f6\u4f20\u9012\u7684\u6574\u4e2a\u96c6\u5408\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u6210\u5458\uff0c\u800c\u4e0d\u662f\u50cf\u6570\u7ec4\u4e00\u6837\u88ab\u7f16\u8bd1\u5668\u8f6c\u6362\u6210\u4e00\u4e2a\u6307\u9488\u3002\u5982\u679c\u7ed3\u6784\u4f53\u6210\u5458\u8f83\u591a\uff0c\u5c24\u5176\u662f\u6210\u5458\u4e3a\u6570\u7ec4\u65f6\uff0c\u4f20\u9001\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u5f00\u9500\u4f1a\u5f88\u5927\uff0c\u5f71\u54cd\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\u3002\u6240\u4ee5\u6700\u597d\u7684\u529e\u6cd5\u5c31\u662f\u4f7f\u7528\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u8fd9\u65f6\u7531\u5b9e\u53c2\u4f20\u5411\u5f62\u53c2\u7684\u53ea\u662f\u4e00\u4e2a\u5730\u5740\uff0c\u975e\u5e38\u5feb\u901f\u3002 C<pre><code>#include &lt;stdio.h&gt;\n\nstruct stu{\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n}stus[] = {\n    {\"Li ping\", 5, 18, 'C', 145.0},\n    {\"Zhang ping\", 4, 19, 'A', 130.5},\n    {\"He fang\", 1, 18, 'A', 148.5},\n    {\"Cheng ling\", 2, 17, 'F', 139.0},\n    {\"Wang ming\", 3, 17, 'B', 144.5}\n};\n\nvoid average(struct stu *ps, int len);\n\nint main(){\n    int len = sizeof(stus) / sizeof(struct stu);\n    average(stus, len);\n    return 0;\n}\n\nvoid average(struct stu *ps, int len){\n    int i, num_140 = 0;\n    float average, sum = 0;\n    for(i=0; i&lt;len; i++){\n        sum += (ps + i) -&gt; score;\n        if((ps + i)-&gt;score &lt; 140) num_140++;\n    }\n    printf(\"sum=%.2f\\naverage=%.2f\\nnum_140=%d\\n\", sum, sum/5, num_140);\n}\n</code></pre></li> </ul>"},{"location":"cs_base/language/c/#25","title":"2.5\u679a\u4e3e\u7c7b\u578b","text":"<ul> <li>\u5b9a\u4e49\u5f62\u5f0f<code>enum typeName{valueName1, valueName2, .....};</code> \u4f8b\u5982\uff0c\u5217\u51fa\u4e00\u4e2a\u661f\u671f\u6709\u51e0\u5929\uff1a<ol> <li><code>enum week{ Mon, Tues, Wed, Thurs, Fri, Sat, Sun };</code></li> <li><code>enum week{ Mon = 1, Tues = 2, Wed = 3, Thurs = 4, Fri = 5, Sat = 6, Sun = 7 };</code></li> <li><code>enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun };</code> - \u7b2c3\u79cd\u6700\u4e3a\u7b80\u5355\uff0c\u679a\u4e3e\u503c\u4ece1\u5f00\u59cb\u9012\u589e</li> </ol> </li> <li>\u4e5f\u53ef\u4ee5\u5728\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\u7684\u540c\u65f6\u5b9a\u4e49\u53d8\u91cf\uff1a <code>enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun } a, b, c;</code></li> <li>\u6709\u4e86\u679a\u4e3e\u53d8\u91cf\uff0c\u5c31\u53ef\u4ee5\u628a\u5217\u8868\u4e2d\u7684\u503c\u8d4b\u7ed9\u5b83\uff1a<ol> <li>`enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun };</li> <li><code>enum week a = Mon, b = Wed, c = Sat; \u6216\u8005\uff1a</code>enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun } a = Mon, b = Wed, c = Sat;</li> </ol> </li> <li>\u793a\u4f8b\uff1a C<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun } day;\n    scanf(\"%d\", &amp;day);\n    switch(day){\n        case Mon: puts(\"Monday\"); break;\n        case Tues: puts(\"Tuesday\"); break;\n        case Wed: puts(\"Wednesday\"); break;\n        case Thurs: puts(\"Thursday\"); break;\n        case Fri: puts(\"Friday\"); break;\n        case Sat: puts(\"Saturday\"); break;\n        case Sun: puts(\"Sunday\"); break;\n        default: puts(\"Error!\");\n    }\n    return 0;\n}\n</code></pre></li> <li>case \u5173\u952e\u5b57\u540e\u9762\u5fc5\u987b\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u6216\u8005\u662f\u7ed3\u679c\u4e3a\u6574\u6570\u7684\u8868\u8fbe\u5f0f\uff0c\u4f46\u4e0d\u80fd\u5305\u542b\u4efb\u4f55\u53d8\u91cf\uff0c\u6b63\u662f\u7531\u4e8e <code>Mon\u3001Tues\u3001Wed</code>\u8fd9\u4e9b\u540d\u5b57\u6700\u7ec8\u4f1a\u88ab\u66ff\u6362\u6210\u4e00\u4e2a\u6574\u6570\uff0c\u6240\u4ee5\u5b83\u4eec\u624d\u80fd\u653e\u5728 <code>case</code> \u540e\u9762\u3002</li> <li><code>Mon\u3001Tues\u3001Wed</code> \u7b49\u90fd\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u5bf9\u5b83\u4eec\u8d4b\u503c\uff0c\u53ea\u80fd\u5c06\u5b83\u4eec\u7684\u503c\u8d4b\u7ed9\u5176\u4ed6\u7684\u53d8\u91cf\u3002  </li> <li>\u679a\u4e3e\u548c\u5b8f\u5176\u5b9e\u975e\u5e38\u7c7b\u4f3c\uff1a\u5b8f\u5728\u9884\u5904\u7406\u9636\u6bb5\u5c06\u540d\u5b57\u66ff\u6362\u6210\u5bf9\u5e94\u7684\u503c\uff0c\u679a\u4e3e\u5728\u7f16\u8bd1\u9636\u6bb5\u5c06\u540d\u5b57\u66ff\u6362\u6210\u5bf9\u5e94\u7684\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u679a\u4e3e\u7406\u89e3\u4e3a\u7f16\u8bd1\u9636\u6bb5\u7684\u5b8f\u3002</li> </ul>"},{"location":"cs_base/language/c/#3","title":"3.\u6587\u4ef6","text":""},{"location":"cs_base/language/c/#31","title":"3.1 \u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u901a\u5e38\u628a\u663e\u793a\u5668\u79f0\u4e3a\u6807\u51c6\u8f93\u51fa\u6587\u4ef6\uff0cprintf \u5c31\u662f\u5411\u8fd9\u4e2a\u6587\u4ef6\u8f93\u51fa\u6570\u636e\uff1b</li> <li>\u901a\u5e38\u628a\u952e\u76d8\u79f0\u4e3a\u6807\u51c6\u8f93\u5165\u6587\u4ef6\uff0cscanf \u5c31\u662f\u4ece\u8fd9\u4e2a\u6587\u4ef6\u8bfb\u53d6\u6570\u636e\u3002</li> </ul> \u6587\u4ef6 \u786c\u4ef6\u8bbe\u5907 stdin \u6807\u51c6\u8f93\u5165\u6587\u4ef6\uff0c\u4e00\u822c\u6307\u952e\u76d8\uff1bscanf()\u3001getchar() \u7b49\u51fd\u6570\u9ed8\u8ba4\u4ece stdin \u83b7\u53d6\u8f93\u5165\u3002 stdout \u6807\u51c6\u8f93\u51fa\u6587\u4ef6\uff0c\u4e00\u822c\u6307\u663e\u793a\u5668\uff1bprintf()\u3001putchar() \u7b49\u51fd\u6570\u9ed8\u8ba4\u5411 stdout \u8f93\u51fa\u6570\u636e\u3002 stderr \u6807\u51c6\u9519\u8bef\u6587\u4ef6\uff0c\u4e00\u822c\u6307\u663e\u793a\u5668\uff1bperror() \u7b49\u51fd\u6570\u9ed8\u8ba4\u5411 stderr\u00a0\u8f93\u51fa\u6570\u636e\uff08\u540e\u7eed\u4f1a\u8bb2\u5230\uff09\u3002 stdprn \u6807\u51c6\u6253\u5370\u6587\u4ef6\uff0c\u4e00\u822c\u6307\u6253\u5370\u673a\u3002 ## 3.2 \u6587\u4ef6\u6d41 - \u6240\u6709\u7684\u6587\u4ef6\uff08\u4fdd\u5b58\u5728\u78c1\u76d8\uff09\u90fd\u8981\u8f7d\u5165\u5185\u5b58\u624d\u80fd\u5904\u7406\uff0c\u6240\u6709\u7684\u6570\u636e\u5fc5\u987b\u5199\u5165\u6587\u4ef6\uff08\u78c1\u76d8\uff09\u624d\u4e0d\u4f1a\u4e22\u5931\u3002 - \u6570\u636e\u5728\u6587\u4ef6\u548c\u5185\u5b58\u4e4b\u95f4\u4f20\u9012\u7684\u8fc7\u7a0b\u53eb\u505a\u6587\u4ef6\u6d41\uff0c\u7c7b\u4f3c\u6c34\u4ece\u4e00\u4e2a\u5730\u65b9\u6d41\u52a8\u5230\u53e6\u4e00\u4e2a\u5730\u65b9\u3002 - \u6570\u636e\u4ece\u6587\u4ef6\u590d\u5236\u5230\u5185\u5b58\u7684\u8fc7\u7a0b\u53eb\u505a\u8f93\u5165\u6d41\uff0c\u4ece\u5185\u5b58\u4fdd\u5b58\u5230\u6587\u4ef6\u7684\u8fc7\u7a0b\u53eb\u505a\u8f93\u51fa\u6d41\u3002 - \u6211\u4eec\u628a\u6570\u636e\u5728\u6570\u636e\u6e90\u548c\u7a0b\u5e8f\uff08\u5185\u5b58\uff09\u4e4b\u95f4\u4f20\u9012\u7684\u8fc7\u7a0b\u53eb\u505a\u6570\u636e\u6d41(Data Stream)\u3002\u76f8\u5e94\u7684\uff0c\u6570\u636e\u4ece\u6570\u636e\u6e90\u5230\u7a0b\u5e8f\uff08\u5185\u5b58\uff09\u7684\u8fc7\u7a0b\u53eb\u505a\u8f93\u5165\u6d41(Input Stream)\uff0c\u4ece\u7a0b\u5e8f\uff08\u5185\u5b58\uff09\u5230\u6570\u636e\u6e90\u7684\u8fc7\u7a0b\u53eb\u505a\u8f93\u51fa\u6d41(Output Stream)\u3002 - \u6253\u5f00\u6587\u4ef6\u5c31\u662f\u6253\u5f00\u4e86\u4e00\u4e2a\u6d41\u3002 ### 3.3 \u6253\u5f00\u6587\u4ef6 #### 3.3.1 \u57fa\u672c\u77e5\u8bc6 - \u4f7f\u7528 <code>&lt;stdio.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\u7684<code>fopen()</code>\u51fd\u6570\u5373\u53ef\u6253\u5f00\u6587\u4ef6\uff0c\u5b83\u7684\u7528\u6cd5\u4e3a\uff1a <code>FILE *fopen(char *filename, char *mode);</code> - <code>filename</code>\u4e3a\u6587\u4ef6\u540d\uff08\u5305\u62ec\u6587\u4ef6\u8def\u5f84\uff09\uff0c<code>mode</code>\u4e3a\u6253\u5f00\u65b9\u5f0f\uff0c\u5b83\u4eec\u90fd\u662f\u5b57\u7b26\u4e32\u3002 #### 3.3.2<code>fopen()</code>\u51fd\u6570\u7684\u8fd4\u56de\u503c - <code>fopen()</code>\u4f1a\u83b7\u53d6\u6587\u4ef6\u4fe1\u606f\uff0c\u5305\u62ec\u6587\u4ef6\u540d\u3001\u6587\u4ef6\u72b6\u6001\u3001\u5f53\u524d\u8bfb\u5199\u4f4d\u7f6e\u7b49\uff0c\u5e76\u5c06\u8fd9\u4e9b\u4fe1\u606f\u4fdd\u5b58\u5230\u4e00\u4e2a FILE \u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u53d8\u91cf\u4e2d\uff0c\u7136\u540e\u5c06\u8be5\u53d8\u91cf\u7684\u5730\u5740\u8fd4\u56de\u3002 - <code>FILE</code>\u662f <code>&lt;stdio.h&gt;</code>\u5934\u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5b83\u4e13\u95e8\u7528\u6765\u4fdd\u5b58\u6587\u4ef6\u4fe1\u606f\u3002\u6211\u4eec\u4e0d\u7528\u5173\u5fc3 FILE \u7684\u5177\u4f53\u7ed3\u6784\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5b83\u7684\u7528\u6cd5\u5c31\u884c\u3002 - \u5982\u679c\u5e0c\u671b\u63a5\u6536 <code>fopen()</code>\u7684\u8fd4\u56de\u503c\uff0c\u5c31\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a FILE \u7c7b\u578b\u7684\u6307\u9488\u3002 \u4f8b\u5982\uff1a <code>FILE *fp = fopen(\"demo.txt\", \"r\");</code> - \u8868\u793a\u4ee5\u201c\u53ea\u8bfb\u201d\u65b9\u5f0f\u6253\u5f00\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 demo.txt \u6587\u4ef6\uff0c\u5e76\u4f7f<code>fp</code>\u6307\u5411\u8be5\u6587\u4ef6\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7<code>fp</code>\u6765\u64cd\u4f5c <code>demo.txt</code>\u4e86\u3002<code>fp</code>\u901a\u5e38\u88ab\u79f0\u4e3a\u6587\u4ef6\u6307\u9488\u3002 ##### \u5224\u65ad\u6587\u4ef6\u662f\u5426\u6253\u5f00\u6210\u529f - \u6253\u5f00\u6587\u4ef6\u51fa\u9519\u65f6\uff0c<code>fopen()</code> \u5c06\u8fd4\u56de\u4e00\u4e2a\u7a7a\u6307\u9488\uff0c\u4e5f\u5c31\u662f NULL\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u6765\u5224\u65ad\u6587\u4ef6\u662f\u5426\u6253\u5f00\u6210\u529f\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a C<pre><code>FILE *fp;\nif( (fp=fopen(\"D:\\\\demo.txt\",\"rb\")) == NULL ){\n    printf(\"Fail to open file!\\n\");\n    exit(0);  //\u9000\u51fa\u7a0b\u5e8f\uff08\u7ed3\u675f\u7a0b\u5e8f\uff09\n}\n</code></pre> - \u6211\u4eec\u901a\u8fc7\u5224\u65ad<code>fopen()</code>\u7684\u8fd4\u56de\u503c\u662f\u5426\u548c NULL \u76f8\u7b49\u6765\u5224\u65ad\u662f\u5426\u6253\u5f00\u5931\u8d25\uff1a\u5982\u679c <code>fopen()</code>\u7684\u8fd4\u56de\u503c\u4e3a NULL\uff0c\u90a3\u4e48 <code>fp</code>\u7684\u503c\u4e5f\u4e3a\u00a0 NULL\uff0c\u6b64\u65f6 if \u7684\u5224\u65ad\u6761\u4ef6\u6210\u7acb\uff0c\u8868\u793a\u6587\u4ef6\u6253\u5f00\u5931\u8d25\u3002 #### 3.3.3fopen() \u51fd\u6570\u7684\u6253\u5f00\u65b9\u5f0f - \u4e0d\u540c\u7684\u64cd\u4f5c\u9700\u8981\u4e0d\u540c\u7684\u6587\u4ef6\u6743\u9650\u3002\u4f8b\u5982\uff0c\u53ea\u60f3\u8bfb\u53d6\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u7684\u8bdd\uff0c\u201c\u53ea\u8bfb\u201d\u6743\u9650\u5c31\u591f\u4e86\uff1b\u65e2\u60f3\u8bfb\u53d6\u53c8\u60f3\u5199\u5165\u6570\u636e\u7684\u8bdd\uff0c\u201c\u8bfb\u5199\u201d\u6743\u9650\u5c31\u662f\u5fc5\u987b\u7684\u4e86\u3002 - \u53e6\u5916\uff0c\u6587\u4ef6\u4e5f\u6709\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u6309\u7167\u6570\u636e\u7684\u5b58\u50a8\u65b9\u5f0f\u53ef\u4ee5\u5206\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6587\u672c\u6587\u4ef6\uff0c\u5b83\u4eec\u7684\u64cd\u4f5c\u7ec6\u8282\u662f\u4e0d\u540c\u7684\u3002 - \u5728\u8c03\u7528 <code>fopen()</code> \u51fd\u6570\u65f6\uff0c\u8fd9\u4e9b\u4fe1\u606f\u90fd\u5fc5\u987b\u63d0\u4f9b\uff0c\u79f0\u4e3a\u201c\u6587\u4ef6\u6253\u5f00\u65b9\u5f0f\u201d\u3002\u6700\u57fa\u672c\u7684\u6587\u4ef6\u6253\u5f00\u65b9\u5f0f\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a \u6253\u5f00\u65b9\u5f0f \u8bf4\u660e \"r\" \u4ee5\u201c\u53ea\u8bfb\u201d\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u53ea\u5141\u8bb8\u8bfb\u53d6\uff0c\u4e0d\u5141\u8bb8\u5199\u5165\u3002\u6587\u4ef6\u5fc5\u987b\u5b58\u5728\uff0c\u5426\u5219\u6253\u5f00\u5931\u8d25\u3002 \"w\" \u4ee5\u201c\u5199\u5165\u201d\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff1b\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u90a3\u4e48\u6e05\u7a7a\u6587\u4ef6\u5185\u5bb9\uff08\u76f8\u5f53\u4e8e\u5220\u9664\u539f\u6587\u4ef6\uff0c\u518d\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff09\u3002 \"a\" \u4ee5\u201c\u8ffd\u52a0\u201d\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff1b\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u90a3\u4e48\u5c06\u5199\u5165\u7684\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\uff08\u6587\u4ef6\u539f\u6709\u7684\u5185\u5bb9\u4fdd\u7559\uff09\u3002 \"r+\" \u4ee5\u201c\u8bfb\u5199\u201d\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u65e2\u53ef\u4ee5\u8bfb\u53d6\u4e5f\u53ef\u4ee5\u5199\u5165\uff0c\u4e5f\u5c31\u662f\u968f\u610f\u66f4\u65b0\u6587\u4ef6\u3002\u6587\u4ef6\u5fc5\u987b\u5b58\u5728\uff0c\u5426\u5219\u6253\u5f00\u5931\u8d25\u3002 \"w+\" \u4ee5\u201c\u5199\u5165/\u66f4\u65b0\u201d\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u76f8\u5f53\u4e8e<code>w</code>\u548c<code>r+</code>\u53e0\u52a0\u7684\u6548\u679c\u3002\u65e2\u53ef\u4ee5\u8bfb\u53d6\u4e5f\u53ef\u4ee5\u5199\u5165\uff0c\u4e5f\u5c31\u662f\u968f\u610f\u66f4\u65b0\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff1b\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u90a3\u4e48\u6e05\u7a7a\u6587\u4ef6\u5185\u5bb9\uff08\u76f8\u5f53\u4e8e\u5220\u9664\u539f\u6587\u4ef6\uff0c\u518d\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff09\u3002 \"a+\" \u4ee5\u201c\u8ffd\u52a0/\u66f4\u65b0\u201d\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u76f8\u5f53\u4e8ea\u548cr+\u53e0\u52a0\u7684\u6548\u679c\u3002\u65e2\u53ef\u4ee5\u8bfb\u53d6\u4e5f\u53ef\u4ee5\u5199\u5165\uff0c\u4e5f\u5c31\u662f\u968f\u610f\u66f4\u65b0\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff1b\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u90a3\u4e48\u5c06\u5199\u5165\u7684\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\uff08\u6587\u4ef6\u539f\u6709\u7684\u5185\u5bb9\u4fdd\u7559\uff09\u3002 <ul> <li>\u8c03\u7528 <code>fopen()</code>\u51fd\u6570\u65f6\u5fc5\u987b\u6307\u660e\u8bfb\u5199\u6743\u9650\uff0c\u4f46\u662f\u53ef\u4ee5\u4e0d\u6307\u660e\u8bfb\u5199\u65b9\u5f0f\uff08\u6b64\u65f6\u9ed8\u8ba4\u4e3a<code>\"t\"</code>\uff09\u3002  </li> <li>\u8bfb\u5199\u6743\u9650\u548c\u8bfb\u5199\u65b9\u5f0f\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\uff0c\u4f46\u662f\u5fc5\u987b\u5c06\u8bfb\u5199\u65b9\u5f0f\u653e\u5728\u8bfb\u5199\u6743\u9650\u7684\u4e2d\u95f4\u6216\u8005\u5c3e\u90e8\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e0d\u80fd\u5c06\u8bfb\u5199\u65b9\u5f0f\u653e\u5728\u8bfb\u5199\u6743\u9650\u7684\u5f00\u5934\uff09\u3002\u4f8b\u5982\uff1a<ul> <li>\u5c06\u8bfb\u5199\u65b9\u5f0f\u653e\u5728\u8bfb\u5199\u6743\u9650\u7684\u672b\u5c3e\uff1a\"rb\"\u3001\"wt\"\u3001\"ab\"\u3001\"r+b\"\u3001\"w+t\"\u3001\"a+t\"</li> <li>\u5c06\u8bfb\u5199\u65b9\u5f0f\u653e\u5728\u8bfb\u5199\u6743\u9650\u7684\u4e2d\u95f4\uff1a\"rb+\"\u3001\"wt+\"\u3001\"ab+\"</li> </ul> </li> </ul> <p>\u6574\u4f53\u6765\u8bf4\uff0c\u6587\u4ef6\u6253\u5f00\u65b9\u5f0f\u7531 <code>r\u3001w\u3001a\u3001t\u3001b\u3001+</code>\u516d\u4e2a\u5b57\u7b26\u62fc\u6210\uff0c\u5404\u5b57\u7b26\u7684\u542b\u4e49\u662f\uff1a - r(read)\uff1a\u8bfb - w(write)\uff1a\u5199 - a(append)\uff1a\u8ffd\u52a0 - t(text)\uff1a\u6587\u672c\u6587\u4ef6 - b(binary)\uff1a\u4e8c\u8fdb\u5236\u6587\u4ef6 - +\uff1a\u8bfb\u548c\u5199</p>"},{"location":"cs_base/language/c/#34","title":"3.4\u5173\u95ed\u6587\u4ef6","text":"<ul> <li>\u6587\u4ef6\u4e00\u65e6\u4f7f\u7528\u5b8c\u6bd5\uff0c\u5e94\u8be5\u7528 <code>fclose()</code>\u51fd\u6570\u628a\u6587\u4ef6\u5173\u95ed\uff0c\u4ee5\u91ca\u653e\u76f8\u5173\u8d44\u6e90\uff0c\u907f\u514d\u6570\u636e\u4e22\u5931\u3002<code>fclose()</code>\u7684\u7528\u6cd5\u4e3a\uff1a <code>int fclose(FILE *fp);</code><ul> <li><code>fp</code> \u4e3a\u6587\u4ef6\u6307\u9488\u3002</li> </ul> </li> <li>`fclose(fp);</li> <li>\u6587\u4ef6\u6b63\u5e38\u5173\u95ed\u65f6\uff0cfclose() \u7684\u8fd4\u56de\u503c\u4e3a0\uff0c\u5982\u679c\u8fd4\u56de\u975e\u96f6\u503c\u5219\u8868\u793a\u6709\u9519\u8bef\u53d1\u751f\u3002  </li> </ul>"},{"location":"cs_base/language/c/#35","title":"3.5\u5b9e\u4f8b\u6f14\u793a","text":"<p>\u6700\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u4e00\u6bb5\u5b8c\u6574\u7684\u4ee3\u7801\u6765\u6f14\u793a fopen \u51fd\u6570\u7684\u7528\u6cd5\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u4f1a\u4e00\u884c\u4e00\u884c\u5730\u8bfb\u53d6\u6587\u672c\u6587\u4ef6\u7684\u6240\u6709\u5185\u5bb9\uff1a </p>C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdib.h&gt;\n#define N 100\nint main(){\n    FILE *fp;\n    char str[N + 1];\n    //\u5224\u65ad\u6587\u4ef6\u662f\u5426\u6253\u5f00\u5931\u8d25\n    if ((fp = fopen(\"d:\\\\demo.txt\", \"rt\")) == NULL) {\n        puts(\"Fail to open file!\");\n        exit(0);\n    }\n    //\u5faa\u73af\u8bfb\u53d6\u6587\u4ef6\u7684\u6bcf\u4e00\u884c\u6570\u636e\n    while( fgets(str, N, fp) != NULL ) {\n        printf(\"%s\", str);\n    }\n\n    //\u64cd\u4f5c\u7ed3\u675f\u540e\u5173\u95ed\u6587\u4ef6\n    fclose(fp);\n    return 0;\n}\n</code></pre>"},{"location":"cs_base/language/java/","title":"Java \u5b66\u4e60\u7b14\u8bb0","text":""},{"location":"cs_base/language/java/#java","title":"Java \u5b66\u4e60\u7b14\u8bb0","text":"<p>Abstract</p> <p>Java \u7f16\u7a0b\u8bed\u8a00\u5b8c\u6574\u5b66\u4e60\u7b14\u8bb0\uff0c\u4ece\u57fa\u7840\u8bed\u6cd5\u5230\u9ad8\u7ea7\u7279\u6027\u7684\u7cfb\u7edf\u6027\u603b\u7ed3\u3002</p> <p>.BEGIN_TOC at 0x7f9508f06de0&gt; - \"Java \u57fa\u7840\u8bed\u6cd5\": java-basics - \"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\": java-oop - \"\u9ad8\u7ea7\u9762\u5411\u5bf9\u8c61\u7279\u6027\": java-advanced-oop - \"\u6838\u5fc3\u7c7b\u5e93\": java-core-libraries - \"\u5f02\u5e38\u5904\u7406\": java-exceptions - \"\u96c6\u5408\u6846\u67b6\": java-collections - \"\u5e76\u53d1\u7f16\u7a0b\": java-concurrency - \"\u53cd\u5c04\u673a\u5236\": java-reflection .END_TOC at 0x7f9508f06e80&gt;</p>"},{"location":"cs_base/language/java/java-advanced-oop/","title":"\u9ad8\u7ea7\u9762\u5411\u5bf9\u8c61\u7279\u6027","text":""},{"location":"cs_base/language/java/java-advanced-oop/#_1","title":"\u9ad8\u7ea7\u9762\u5411\u5bf9\u8c61\u7279\u6027","text":"<p> \u7ea6 570 \u4e2a\u5b57  793 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 13 \u5206\u949f</p> <p>\u672c\u7ae0\u5185\u5bb9</p> <p>\u672c\u7ae0\u4ecb\u7ecd Java \u7684\u9ad8\u7ea7\u9762\u5411\u5bf9\u8c61\u7279\u6027\uff1a\u62bd\u8c61\u7c7b\u3001\u63a5\u53e3\u3001\u679a\u4e3e\u3001\u533f\u540d\u5185\u90e8\u7c7b\u548c Java Bean \u89c4\u8303\u3002</p>"},{"location":"cs_base/language/java/java-advanced-oop/#abstract-class","title":"\u4e00\u3001\u62bd\u8c61\u7c7b\uff08Abstract Class\uff09","text":""},{"location":"cs_base/language/java/java-advanced-oop/#11","title":"1.1 \u62bd\u8c61\u7c7b\u7684\u6982\u5ff5","text":"<p>\u62bd\u8c61\u7c7b\u662f\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\u7684\u7c7b\uff0c\u901a\u5e38\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff1a</p> Java<pre><code>// \u62bd\u8c61\u7c7b\npublic abstract class Animal {\n    protected String name;\n    protected int age;\n\n    // \u6784\u9020\u65b9\u6cd5\n    public Animal(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    // \u62bd\u8c61\u65b9\u6cd5\uff1a\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\n    public abstract void makeSound();\n    public abstract void move();\n\n    // \u5177\u4f53\u65b9\u6cd5\uff1a\u5b50\u7c7b\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\n    public void eat() {\n        System.out.println(name + \"\u6b63\u5728\u5403\u4e1c\u897f\");\n    }\n\n    public void sleep() {\n        System.out.println(name + \"\u6b63\u5728\u7761\u89c9\");\n    }\n\n    public void showInfo() {\n        System.out.println(\"\u52a8\u7269\uff1a\" + name + \"\uff0c\u5e74\u9f84\uff1a\" + age);\n    }\n}\n\n// \u5177\u4f53\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u6240\u6709\u62bd\u8c61\u65b9\u6cd5\npublic class Dog extends Animal {\n    private String breed;\n\n    public Dog(String name, int age, String breed) {\n        super(name, age);\n        this.breed = breed;\n    }\n\n    @Override\n    public void makeSound() {\n        System.out.println(name + \"\u6c6a\u6c6a\u53eb\");\n    }\n\n    @Override\n    public void move() {\n        System.out.println(name + \"\u5728\u5730\u4e0a\u8dd1\");\n    }\n\n    public void wagTail() {\n        System.out.println(name + \"\u6447\u5c3e\u5df4\");\n    }\n}\n\npublic class Bird extends Animal {\n    private double wingspan;\n\n    public Bird(String name, int age, double wingspan) {\n        super(name, age);\n        this.wingspan = wingspan;\n    }\n\n    @Override\n    public void makeSound() {\n        System.out.println(name + \"\u53fd\u53fd\u55b3\u55b3\");\n    }\n\n    @Override\n    public void move() {\n        System.out.println(name + \"\u5728\u5929\u7a7a\u98de\u7fd4\uff0c\u7ffc\u5c55\uff1a\" + wingspan + \"\u7c73\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#12","title":"1.2 \u62bd\u8c61\u7c7b\u7684\u7279\u70b9","text":"Java<pre><code>public abstract class Shape {\n    protected String color;\n    protected static int count = 0;\n\n    // \u62bd\u8c61\u7c7b\u53ef\u4ee5\u6709\u6784\u9020\u65b9\u6cd5\n    public Shape(String color) {\n        this.color = color;\n        count++;\n    }\n\n    // \u62bd\u8c61\u7c7b\u53ef\u4ee5\u6709\u9759\u6001\u65b9\u6cd5\n    public static int getCount() {\n        return count;\n    }\n\n    // \u62bd\u8c61\u65b9\u6cd5\n    public abstract double calculateArea();\n    public abstract double calculatePerimeter();\n\n    // \u5177\u4f53\u65b9\u6cd5\n    public void displayInfo() {\n        System.out.println(\"\u989c\u8272\uff1a\" + color + \"\uff0c\u9762\u79ef\uff1a\" + calculateArea());\n    }\n\n    // \u62bd\u8c61\u7c7b\u53ef\u4ee5\u6709 final \u65b9\u6cd5\n    public final void printType() {\n        System.out.println(\"\u8fd9\u662f\u4e00\u4e2a\u51e0\u4f55\u56fe\u5f62\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#interface","title":"\u4e8c\u3001\u63a5\u53e3\uff08Interface\uff09","text":""},{"location":"cs_base/language/java/java-advanced-oop/#21","title":"2.1 \u63a5\u53e3\u7684\u57fa\u672c\u6982\u5ff5","text":"<p>\u63a5\u53e3\u5b9a\u4e49\u4e86\u7c7b\u5fc5\u987b\u5b9e\u73b0\u7684\u65b9\u6cd5\u89c4\u8303\uff1a</p> Java<pre><code>// \u63a5\u53e3\u5b9a\u4e49\npublic interface Drawable {\n    // \u63a5\u53e3\u4e2d\u7684\u53d8\u91cf\u9ed8\u8ba4\u662f public static final\n    int MAX_SIZE = 1000;\n    String DEFAULT_COLOR = \"black\";\n\n    // \u62bd\u8c61\u65b9\u6cd5\uff08\u9ed8\u8ba4 public abstract\uff09\n    void draw();\n    void erase();\n\n    // Java 8+ \u9ed8\u8ba4\u65b9\u6cd5\n    default void display() {\n        System.out.println(\"\u663e\u793a\u56fe\u5f62\");\n    }\n\n    // Java 8+ \u9759\u6001\u65b9\u6cd5\n    static void printInfo() {\n        System.out.println(\"\u8fd9\u662f\u4e00\u4e2a\u53ef\u7ed8\u5236\u7684\u63a5\u53e3\");\n    }\n\n    // Java 9+ \u79c1\u6709\u65b9\u6cd5\n    private void helper() {\n        System.out.println(\"\u8f85\u52a9\u65b9\u6cd5\");\n    }\n}\n\n// \u5b9e\u73b0\u63a5\u53e3\npublic class Circle implements Drawable {\n    private double radius;\n\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    @Override\n    public void draw() {\n        System.out.println(\"\u7ed8\u5236\u534a\u5f84\u4e3a \" + radius + \" \u7684\u5706\u5f62\");\n    }\n\n    @Override\n    public void erase() {\n        System.out.println(\"\u64e6\u9664\u5706\u5f62\");\n    }\n\n    // \u53ef\u4ee5\u91cd\u5199\u9ed8\u8ba4\u65b9\u6cd5\n    @Override\n    public void display() {\n        System.out.println(\"\u663e\u793a\u5706\u5f62\uff0c\u534a\u5f84\uff1a\" + radius);\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#22","title":"2.2 \u591a\u63a5\u53e3\u5b9e\u73b0","text":"Java<pre><code>interface Flyable {\n    void fly();\n\n    default void takeOff() {\n        System.out.println(\"\u8d77\u98de\");\n    }\n}\n\ninterface Swimmable {\n    void swim();\n\n    default void dive() {\n        System.out.println(\"\u6f5c\u6c34\");\n    }\n}\n\n// \u4e00\u4e2a\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\npublic class Duck implements Flyable, Swimmable {\n    private String name;\n\n    public Duck(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public void fly() {\n        System.out.println(name + \"\u5728\u5929\u7a7a\u4e2d\u98de\u7fd4\");\n    }\n\n    @Override\n    public void swim() {\n        System.out.println(name + \"\u5728\u6c34\u4e2d\u6e38\u6cf3\");\n    }\n\n    // \u5982\u679c\u591a\u4e2a\u63a5\u53e3\u6709\u76f8\u540c\u7684\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u5fc5\u987b\u91cd\u5199\n    public void move() {\n        System.out.println(name + \"\u53ef\u4ee5\u98de\u884c\u548c\u6e38\u6cf3\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#23","title":"2.3 \u63a5\u53e3\u7ee7\u627f","text":"Java<pre><code>// \u57fa\u7840\u63a5\u53e3\ninterface Vehicle {\n    void start();\n    void stop();\n}\n\n// \u63a5\u53e3\u53ef\u4ee5\u7ee7\u627f\u63a5\u53e3\ninterface Car extends Vehicle {\n    void drive();\n\n    default void honk() {\n        System.out.println(\"\u6309\u5587\u53ed\");\n    }\n}\n\ninterface ElectricVehicle extends Vehicle {\n    void charge();\n\n    default void showBatteryLevel() {\n        System.out.println(\"\u663e\u793a\u7535\u91cf\");\n    }\n}\n\n// \u63a5\u53e3\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u63a5\u53e3\ninterface ElectricCar extends Car, ElectricVehicle {\n    void enableAutoPilot();\n}\n\n// \u5b9e\u73b0\u7c7b\npublic class Tesla implements ElectricCar {\n    @Override\n    public void start() {\n        System.out.println(\"\u7279\u65af\u62c9\u542f\u52a8\");\n    }\n\n    @Override\n    public void stop() {\n        System.out.println(\"\u7279\u65af\u62c9\u505c\u6b62\");\n    }\n\n    @Override\n    public void drive() {\n        System.out.println(\"\u7279\u65af\u62c9\u884c\u9a76\");\n    }\n\n    @Override\n    public void charge() {\n        System.out.println(\"\u7279\u65af\u62c9\u5145\u7535\");\n    }\n\n    @Override\n    public void enableAutoPilot() {\n        System.out.println(\"\u542f\u7528\u81ea\u52a8\u9a7e\u9a76\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#24-vs","title":"2.4 \u62bd\u8c61\u7c7b vs \u63a5\u53e3","text":"\u7279\u6027 \u62bd\u8c61\u7c7b \u63a5\u53e3 \u5173\u952e\u5b57 <code>abstract class</code> <code>interface</code> \u7ee7\u627f \u5355\u7ee7\u627f \u591a\u5b9e\u73b0 \u6784\u9020\u65b9\u6cd5 \u53ef\u4ee5\u6709 \u4e0d\u80fd\u6709 \u6210\u5458\u53d8\u91cf \u4efb\u610f\u8bbf\u95ee\u4fee\u9970\u7b26 <code>public static final</code> \u65b9\u6cd5\u7c7b\u578b \u62bd\u8c61\u65b9\u6cd5 + \u5177\u4f53\u65b9\u6cd5 \u62bd\u8c61\u65b9\u6cd5 + \u9ed8\u8ba4\u65b9\u6cd5 + \u9759\u6001\u65b9\u6cd5 \u5b9e\u4f8b\u5316 \u4e0d\u80fd\u76f4\u63a5\u5b9e\u4f8b\u5316 \u4e0d\u80fd\u5b9e\u4f8b\u5316 \u4f7f\u7528\u573a\u666f \u6709\u5171\u540c\u5b9e\u73b0\u7684\u76f8\u5173\u7c7b \u5b9a\u4e49\u884c\u4e3a\u89c4\u8303 Java<pre><code>// \u4f7f\u7528\u573a\u666f\u793a\u4f8b\n\n// \u62bd\u8c61\u7c7b\uff1a\u9002\u7528\u4e8e\u6709\u5171\u540c\u5b9e\u73b0\u7684\u76f8\u5173\u7c7b\nabstract class DatabaseConnection {\n    protected String url;\n    protected String username;\n\n    public DatabaseConnection(String url, String username) {\n        this.url = url;\n        this.username = username;\n    }\n\n    // \u5171\u540c\u7684\u8fde\u63a5\u903b\u8f91\n    public void connect() {\n        System.out.println(\"\u8fde\u63a5\u5230\u6570\u636e\u5e93\uff1a\" + url);\n    }\n\n    // \u4e0d\u540c\u6570\u636e\u5e93\u7684\u5177\u4f53\u5b9e\u73b0\n    public abstract void executeQuery(String sql);\n}\n\n// \u63a5\u53e3\uff1a\u9002\u7528\u4e8e\u5b9a\u4e49\u884c\u4e3a\u89c4\u8303\ninterface Serializable {\n    void serialize();\n    void deserialize();\n}\n\ninterface Cacheable {\n    void cache();\n    void evict();\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#enum","title":"\u4e09\u3001\u679a\u4e3e\uff08Enum\uff09","text":""},{"location":"cs_base/language/java/java-advanced-oop/#31","title":"3.1 \u57fa\u672c\u679a\u4e3e","text":"Java<pre><code>// \u7b80\u5355\u679a\u4e3e\npublic enum Day {\n    MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY\n}\n\n// \u4f7f\u7528\u679a\u4e3e\npublic class EnumDemo {\n    public static void main(String[] args) {\n        Day today = Day.MONDAY;\n\n        System.out.println(\"\u4eca\u5929\u662f\uff1a\" + today);\n        System.out.println(\"\u5e8f\u53f7\uff1a\" + today.ordinal());\n        System.out.println(\"\u540d\u79f0\uff1a\" + today.name());\n\n        // \u679a\u4e3e\u6bd4\u8f83\n        if (today == Day.MONDAY) {\n            System.out.println(\"\u4eca\u5929\u662f\u661f\u671f\u4e00\");\n        }\n\n        // switch \u8bed\u53e5\n        switch (today) {\n            case MONDAY:\n                System.out.println(\"\u5468\u4e00\uff0c\u65b0\u7684\u5f00\u59cb\");\n                break;\n            case FRIDAY:\n                System.out.println(\"\u5468\u4e94\uff0c\u5feb\u5230\u5468\u672b\u4e86\");\n                break;\n            case SATURDAY:\n            case SUNDAY:\n                System.out.println(\"\u5468\u672b\uff0c\u4f11\u606f\u65f6\u95f4\");\n                break;\n            default:\n                System.out.println(\"\u5de5\u4f5c\u65e5\");\n        }\n\n        // \u904d\u5386\u6240\u6709\u679a\u4e3e\u503c\n        for (Day day : Day.values()) {\n            System.out.println(day + \" (\" + day.ordinal() + \")\");\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#32","title":"3.2 \u5e26\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u679a\u4e3e","text":"Java<pre><code>public enum Planet {\n    // \u679a\u4e3e\u5e38\u91cf\uff0c\u5e26\u53c2\u6570\n    MERCURY(3.303e+23, 2.4397e6),\n    VENUS(4.869e+24, 6.0518e6),\n    EARTH(5.976e+24, 6.37814e6),\n    MARS(6.421e+23, 3.3972e6);\n\n    // \u679a\u4e3e\u5c5e\u6027\n    private final double mass;   // \u8d28\u91cf\uff08\u5343\u514b\uff09\n    private final double radius; // \u534a\u5f84\uff08\u7c73\uff09\n\n    // \u679a\u4e3e\u6784\u9020\u65b9\u6cd5\uff08\u5fc5\u987b\u662f\u79c1\u6709\u7684\uff09\n    private Planet(double mass, double radius) {\n        this.mass = mass;\n        this.radius = radius;\n    }\n\n    // \u679a\u4e3e\u65b9\u6cd5\n    public double getMass() {\n        return mass;\n    }\n\n    public double getRadius() {\n        return radius;\n    }\n\n    // \u8ba1\u7b97\u8868\u9762\u91cd\u529b\n    public double surfaceGravity() {\n        final double G = 6.67300E-11;\n        return G * mass / (radius * radius);\n    }\n\n    // \u8ba1\u7b97\u5728\u8be5\u661f\u7403\u4e0a\u7684\u91cd\u91cf\n    public double surfaceWeight(double otherMass) {\n        return otherMass * surfaceGravity();\n    }\n}\n\n// \u4f7f\u7528\u793a\u4f8b\npublic class PlanetDemo {\n    public static void main(String[] args) {\n        double earthWeight = 70.0; // \u5730\u7403\u4e0a\u7684\u91cd\u91cf\uff08\u5343\u514b\uff09\n\n        for (Planet planet : Planet.values()) {\n            double weight = planet.surfaceWeight(earthWeight);\n            System.out.printf(\"\u5728 %s \u4e0a\u7684\u91cd\u91cf\uff1a%.2f kg%n\", planet, weight);\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#33","title":"3.3 \u5b9e\u73b0\u63a5\u53e3\u7684\u679a\u4e3e","text":"Java<pre><code>interface Operation {\n    double apply(double x, double y);\n}\n\npublic enum BasicOperation implements Operation {\n    PLUS(\"+\") {\n        @Override\n        public double apply(double x, double y) {\n            return x + y;\n        }\n    },\n    MINUS(\"-\") {\n        @Override\n        public double apply(double x, double y) {\n            return x - y;\n        }\n    },\n    TIMES(\"*\") {\n        @Override\n        public double apply(double x, double y) {\n            return x * y;\n        }\n    },\n    DIVIDE(\"/\") {\n        @Override\n        public double apply(double x, double y) {\n            return x / y;\n        }\n    };\n\n    private final String symbol;\n\n    private BasicOperation(String symbol) {\n        this.symbol = symbol;\n    }\n\n    @Override\n    public String toString() {\n        return symbol;\n    }\n}\n\n// \u4f7f\u7528\u793a\u4f8b\npublic class OperationDemo {\n    public static void main(String[] args) {\n        double x = 10.0;\n        double y = 3.0;\n\n        for (BasicOperation op : BasicOperation.values()) {\n            System.out.printf(\"%.1f %s %.1f = %.2f%n\", x, op, y, op.apply(x, y));\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#_2","title":"\u56db\u3001\u5185\u90e8\u7c7b","text":""},{"location":"cs_base/language/java/java-advanced-oop/#41","title":"4.1 \u6210\u5458\u5185\u90e8\u7c7b","text":"Java<pre><code>public class OuterClass {\n    private String outerField = \"\u5916\u90e8\u7c7b\u5b57\u6bb5\";\n    private static String staticField = \"\u9759\u6001\u5b57\u6bb5\";\n\n    // \u6210\u5458\u5185\u90e8\u7c7b\n    public class InnerClass {\n        private String innerField = \"\u5185\u90e8\u7c7b\u5b57\u6bb5\";\n\n        public void innerMethod() {\n            // \u5185\u90e8\u7c7b\u53ef\u4ee5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6240\u6709\u6210\u5458\n            System.out.println(\"\u8bbf\u95ee\u5916\u90e8\u7c7b\u5b57\u6bb5\uff1a\" + outerField);\n            System.out.println(\"\u8bbf\u95ee\u9759\u6001\u5b57\u6bb5\uff1a\" + staticField);\n            System.out.println(\"\u5185\u90e8\u7c7b\u5b57\u6bb5\uff1a\" + innerField);\n\n            // \u8c03\u7528\u5916\u90e8\u7c7b\u65b9\u6cd5\n            outerMethod();\n        }\n\n        public void accessOuter() {\n            // \u660e\u786e\u6307\u5b9a\u5916\u90e8\u7c7b\u5b9e\u4f8b\n            System.out.println(\"\u5916\u90e8\u7c7b\u5b57\u6bb5\uff1a\" + OuterClass.this.outerField);\n        }\n    }\n\n    public void outerMethod() {\n        System.out.println(\"\u5916\u90e8\u7c7b\u65b9\u6cd5\");\n\n        // \u5916\u90e8\u7c7b\u8bbf\u95ee\u5185\u90e8\u7c7b\n        InnerClass inner = new InnerClass();\n        inner.innerMethod();\n    }\n\n    public static void main(String[] args) {\n        // \u521b\u5efa\u5916\u90e8\u7c7b\u5b9e\u4f8b\n        OuterClass outer = new OuterClass();\n\n        // \u521b\u5efa\u5185\u90e8\u7c7b\u5b9e\u4f8b\n        OuterClass.InnerClass inner = outer.new InnerClass();\n        inner.innerMethod();\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#42","title":"4.2 \u9759\u6001\u5185\u90e8\u7c7b","text":"Java<pre><code>public class OuterClass2 {\n    private String outerField = \"\u5916\u90e8\u7c7b\u5b57\u6bb5\";\n    private static String staticField = \"\u9759\u6001\u5b57\u6bb5\";\n\n    // \u9759\u6001\u5185\u90e8\u7c7b\n    public static class StaticInnerClass {\n        private String innerField = \"\u9759\u6001\u5185\u90e8\u7c7b\u5b57\u6bb5\";\n\n        public void innerMethod() {\n            // \u9759\u6001\u5185\u90e8\u7c7b\u53ea\u80fd\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u9759\u6001\u6210\u5458\n            System.out.println(\"\u8bbf\u95ee\u9759\u6001\u5b57\u6bb5\uff1a\" + staticField);\n            System.out.println(\"\u5185\u90e8\u7c7b\u5b57\u6bb5\uff1a\" + innerField);\n\n            // System.out.println(outerField); // \u7f16\u8bd1\u9519\u8bef\n        }\n\n        public void accessOuter(OuterClass2 outer) {\n            // \u901a\u8fc7\u5916\u90e8\u7c7b\u5b9e\u4f8b\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\n            System.out.println(\"\u5916\u90e8\u7c7b\u5b57\u6bb5\uff1a\" + outer.outerField);\n        }\n    }\n\n    public static void main(String[] args) {\n        // \u76f4\u63a5\u521b\u5efa\u9759\u6001\u5185\u90e8\u7c7b\u5b9e\u4f8b\n        StaticInnerClass staticInner = new StaticInnerClass();\n        staticInner.innerMethod();\n\n        // \u8bbf\u95ee\u5916\u90e8\u7c7b\u975e\u9759\u6001\u6210\u5458\n        OuterClass2 outer = new OuterClass2();\n        staticInner.accessOuter(outer);\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#43","title":"4.3 \u5c40\u90e8\u5185\u90e8\u7c7b","text":"Java<pre><code>public class LocalInnerClassDemo {\n    private String outerField = \"\u5916\u90e8\u7c7b\u5b57\u6bb5\";\n\n    public void method() {\n        final String localVar = \"\u5c40\u90e8\u53d8\u91cf\";\n        int count = 10;\n\n        // \u5c40\u90e8\u5185\u90e8\u7c7b\n        class LocalInnerClass {\n            public void localMethod() {\n                System.out.println(\"\u5916\u90e8\u7c7b\u5b57\u6bb5\uff1a\" + outerField);\n                System.out.println(\"\u5c40\u90e8\u53d8\u91cf\uff1a\" + localVar);\n                System.out.println(\"count\uff1a\" + count); // Java 8+ \u53ef\u4ee5\u8bbf\u95ee effectively final \u53d8\u91cf\n            }\n        }\n\n        // \u5728\u65b9\u6cd5\u5185\u4f7f\u7528\u5c40\u90e8\u5185\u90e8\u7c7b\n        LocalInnerClass local = new LocalInnerClass();\n        local.localMethod();\n    }\n\n    public static void main(String[] args) {\n        LocalInnerClassDemo demo = new LocalInnerClassDemo();\n        demo.method();\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#44","title":"4.4 \u533f\u540d\u5185\u90e8\u7c7b","text":"Java<pre><code>interface Greeting {\n    void sayHello(String name);\n}\n\nabstract class AbstractGreeting {\n    public abstract void greet();\n\n    public void commonMethod() {\n        System.out.println(\"\u901a\u7528\u65b9\u6cd5\");\n    }\n}\n\npublic class AnonymousClassDemo {\n    public static void main(String[] args) {\n        // \u533f\u540d\u5185\u90e8\u7c7b\u5b9e\u73b0\u63a5\u53e3\n        Greeting greeting1 = new Greeting() {\n            @Override\n            public void sayHello(String name) {\n                System.out.println(\"Hello, \" + name + \"!\");\n            }\n        };\n        greeting1.sayHello(\"\u5f20\u4e09\");\n\n        // \u533f\u540d\u5185\u90e8\u7c7b\u7ee7\u627f\u62bd\u8c61\u7c7b\n        AbstractGreeting greeting2 = new AbstractGreeting() {\n            @Override\n            public void greet() {\n                System.out.println(\"\u533f\u540d\u7c7b\u7684\u95ee\u5019\");\n            }\n        };\n        greeting2.greet();\n        greeting2.commonMethod();\n\n        // \u533f\u540d\u5185\u90e8\u7c7b\u7ee7\u627f\u5177\u4f53\u7c7b\n        Thread thread = new Thread() {\n            @Override\n            public void run() {\n                System.out.println(\"\u533f\u540d\u7ebf\u7a0b\u8fd0\u884c\");\n            }\n        };\n        thread.start();\n\n        // \u4f7f\u7528 Lambda \u8868\u8fbe\u5f0f\uff08Java 8+\uff09\n        Greeting greeting3 = name -&gt; System.out.println(\"Hi, \" + name + \"!\");\n        greeting3.sayHello(\"\u674e\u56db\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#java-bean","title":"\u4e94\u3001Java Bean \u89c4\u8303","text":""},{"location":"cs_base/language/java/java-advanced-oop/#51-java-bean","title":"5.1 \u6807\u51c6 Java Bean","text":"Java<pre><code>import java.io.Serializable;\n\n// \u6807\u51c6 Java Bean\npublic class Person implements Serializable {\n    private static final long serialVersionUID = 1L;\n\n    // \u79c1\u6709\u5c5e\u6027\n    private String name;\n    private int age;\n    private String email;\n    private boolean married;\n\n    // \u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff08\u5fc5\u987b\uff09\n    public Person() {\n    }\n\n    // \u6709\u53c2\u6784\u9020\u65b9\u6cd5\uff08\u53ef\u9009\uff09\n    public Person(String name, int age, String email, boolean married) {\n        this.name = name;\n        this.age = age;\n        this.email = email;\n        this.married = married;\n    }\n\n    // getter \u65b9\u6cd5\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n\n    // boolean \u7c7b\u578b\u7684 getter \u65b9\u6cd5\u53ef\u4ee5\u7528 is \u5f00\u5934\n    public boolean isMarried() {\n        return married;\n    }\n\n    // setter \u65b9\u6cd5\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public void setAge(int age) {\n        if (age &gt;= 0 &amp;&amp; age &lt;= 150) {\n            this.age = age;\n        }\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n\n    public void setMarried(boolean married) {\n        this.married = married;\n    }\n\n    // toString \u65b9\u6cd5\uff08\u63a8\u8350\uff09\n    @Override\n    public String toString() {\n        return \"Person{\" +\n                \"name='\" + name + '\\'' +\n                \", age=\" + age +\n                \", email='\" + email + '\\'' +\n                \", married=\" + married +\n                '}';\n    }\n\n    // equals \u548c hashCode \u65b9\u6cd5\uff08\u63a8\u8350\uff09\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) return true;\n        if (obj == null || getClass() != obj.getClass()) return false;\n\n        Person person = (Person) obj;\n        return age == person.age &amp;&amp;\n               married == person.married &amp;&amp;\n               name.equals(person.name) &amp;&amp;\n               email.equals(person.email);\n    }\n\n    @Override\n    public int hashCode() {\n        int result = name.hashCode();\n        result = 31 * result + age;\n        result = 31 * result + email.hashCode();\n        result = 31 * result + (married ? 1 : 0);\n        return result;\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#52-java-bean","title":"5.2 Java Bean \u7684\u4f7f\u7528","text":"Java<pre><code>import java.beans.*;\nimport java.lang.reflect.Method;\n\npublic class JavaBeanDemo {\n    public static void main(String[] args) {\n        // \u521b\u5efa Java Bean \u5b9e\u4f8b\n        Person person = new Person();\n\n        // \u4f7f\u7528 setter \u65b9\u6cd5\u8bbe\u7f6e\u5c5e\u6027\n        person.setName(\"\u5f20\u4e09\");\n        person.setAge(25);\n        person.setEmail(\"zhangsan@example.com\");\n        person.setMarried(false);\n\n        // \u4f7f\u7528 getter \u65b9\u6cd5\u83b7\u53d6\u5c5e\u6027\n        System.out.println(\"\u59d3\u540d\uff1a\" + person.getName());\n        System.out.println(\"\u5e74\u9f84\uff1a\" + person.getAge());\n        System.out.println(\"\u90ae\u7bb1\uff1a\" + person.getEmail());\n        System.out.println(\"\u5df2\u5a5a\uff1a\" + person.isMarried());\n\n        System.out.println(person);\n\n        // \u4f7f\u7528\u53cd\u5c04\u548c\u5185\u7701 API\n        try {\n            BeanInfo beanInfo = Introspector.getBeanInfo(Person.class);\n            PropertyDescriptor[] properties = beanInfo.getPropertyDescriptors();\n\n            System.out.println(\"\\nBean \u5c5e\u6027\uff1a\");\n            for (PropertyDescriptor property : properties) {\n                String name = property.getName();\n                if (!\"class\".equals(name)) {  // \u6392\u9664 class \u5c5e\u6027\n                    Method readMethod = property.getReadMethod();\n                    if (readMethod != null) {\n                        Object value = readMethod.invoke(person);\n                        System.out.println(name + \": \" + value);\n                    }\n                }\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#53-java-bean","title":"5.3 Java Bean \u89c4\u8303\u603b\u7ed3","text":"<ol> <li>\u7c7b\u5fc5\u987b\u662f\u516c\u5171\u7684\uff1a\u4f7f\u7528 <code>public</code> \u4fee\u9970\u7b26</li> <li>\u5fc5\u987b\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff1a\u7528\u4e8e\u6846\u67b6\u5b9e\u4f8b\u5316</li> <li>\u5c5e\u6027\u5fc5\u987b\u662f\u79c1\u6709\u7684\uff1a\u4f7f\u7528 <code>private</code> \u4fee\u9970\u7b26</li> <li>\u63d0\u4f9b getter \u548c setter \u65b9\u6cd5\uff1a\u9075\u5faa\u547d\u540d\u89c4\u8303</li> <li>\u5b9e\u73b0 Serializable \u63a5\u53e3\uff1a\u652f\u6301\u5e8f\u5217\u5316</li> <li>\u91cd\u5199 toString\u3001equals\u3001hashCode\uff1a\u63d0\u4f9b\u5b8c\u6574\u7684\u5bf9\u8c61\u884c\u4e3a</li> </ol> Java<pre><code>// \u547d\u540d\u89c4\u8303\u793a\u4f8b\npublic class NamingConventionExample {\n    private String firstName;     // getter: getFirstName(), setter: setFirstName()\n    private boolean active;       // getter: isActive(), setter: setActive()\n    private int age;             // getter: getAge(), setter: setAge()\n    private double salary;       // getter: getSalary(), setter: setSalary()\n\n    // \u6b63\u786e\u7684\u547d\u540d\n    public String getFirstName() { return firstName; }\n    public void setFirstName(String firstName) { this.firstName = firstName; }\n\n    public boolean isActive() { return active; }\n    public void setActive(boolean active) { this.active = active; }\n\n    public int getAge() { return age; }\n    public void setAge(int age) { this.age = age; }\n\n    public double getSalary() { return salary; }\n    public void setSalary(double salary) { this.salary = salary; }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#_3","title":"\u516d\u3001\u4f5c\u7528\u57df\u548c\u9759\u6001\u4e0a\u4e0b\u6587","text":""},{"location":"cs_base/language/java/java-advanced-oop/#61","title":"6.1 \u53d8\u91cf\u4f5c\u7528\u57df","text":"Java<pre><code>public class ScopeDemo {\n    // \u7c7b\u53d8\u91cf\uff08\u9759\u6001\u53d8\u91cf\uff09\n    private static int classVar = 1;\n\n    // \u5b9e\u4f8b\u53d8\u91cf\n    private int instanceVar = 2;\n\n    public void method(int paramVar) {  // \u53c2\u6570\u53d8\u91cf\n        int localVar = 4;  // \u5c40\u90e8\u53d8\u91cf\n\n        System.out.println(\"\u7c7b\u53d8\u91cf\uff1a\" + classVar);\n        System.out.println(\"\u5b9e\u4f8b\u53d8\u91cf\uff1a\" + instanceVar);\n        System.out.println(\"\u53c2\u6570\u53d8\u91cf\uff1a\" + paramVar);\n        System.out.println(\"\u5c40\u90e8\u53d8\u91cf\uff1a\" + localVar);\n\n        // \u4f5c\u7528\u57df\u8303\u56f4\uff1a\u5c40\u90e8\u53d8\u91cf &gt; \u53c2\u6570\u53d8\u91cf &gt; \u5b9e\u4f8b\u53d8\u91cf &gt; \u7c7b\u53d8\u91cf\n\n        if (true) {\n            int blockVar = 5;  // \u5757\u7ea7\u53d8\u91cf\n            System.out.println(\"\u5757\u7ea7\u53d8\u91cf\uff1a\" + blockVar);\n        }\n        // System.out.println(blockVar);  // \u7f16\u8bd1\u9519\u8bef\uff1a\u8d85\u51fa\u4f5c\u7528\u57df\n    }\n\n    public static void staticMethod() {\n        System.out.println(\"\u7c7b\u53d8\u91cf\uff1a\" + classVar);\n        // System.out.println(instanceVar);  // \u7f16\u8bd1\u9519\u8bef\uff1a\u9759\u6001\u65b9\u6cd5\u4e0d\u80fd\u8bbf\u95ee\u5b9e\u4f8b\u53d8\u91cf\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#62","title":"6.2 \u9759\u6001\u4e0a\u4e0b\u6587\u9650\u5236","text":"Java<pre><code>public class StaticContextDemo {\n    private String instanceField = \"\u5b9e\u4f8b\u5b57\u6bb5\";\n    private static String staticField = \"\u9759\u6001\u5b57\u6bb5\";\n\n    public void instanceMethod() {\n        System.out.println(\"\u5b9e\u4f8b\u65b9\u6cd5\");\n    }\n\n    public static void staticMethod() {\n        System.out.println(\"\u9759\u6001\u65b9\u6cd5\");\n    }\n\n    // \u9759\u6001\u65b9\u6cd5\u7684\u9650\u5236\n    public static void restrictedStaticMethod() {\n        // 1. \u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u5b9e\u4f8b\u53d8\u91cf\n        // System.out.println(instanceField);  // \u7f16\u8bd1\u9519\u8bef\n\n        // 2. \u4e0d\u80fd\u76f4\u63a5\u8c03\u7528\u5b9e\u4f8b\u65b9\u6cd5\n        // instanceMethod();  // \u7f16\u8bd1\u9519\u8bef\n\n        // 3. \u4e0d\u80fd\u4f7f\u7528 this \u548c super \u5173\u952e\u5b57\n        // System.out.println(this.staticField);  // \u7f16\u8bd1\u9519\u8bef\n\n        // 4. \u53ef\u4ee5\u8bbf\u95ee\u9759\u6001\u6210\u5458\n        System.out.println(staticField);  // \u6b63\u786e\n        staticMethod();  // \u6b63\u786e\n\n        // 5. \u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u5b9e\u4f8b\u8bbf\u95ee\u5b9e\u4f8b\u6210\u5458\n        StaticContextDemo obj = new StaticContextDemo();\n        System.out.println(obj.instanceField);  // \u6b63\u786e\n        obj.instanceMethod();  // \u6b63\u786e\n    }\n\n    // \u9759\u6001\u4ee3\u7801\u5757\u7684\u9650\u5236\n    static {\n        System.out.println(\"\u9759\u6001\u4ee3\u7801\u5757\");\n        System.out.println(staticField);  // \u53ef\u4ee5\u8bbf\u95ee\u9759\u6001\u5b57\u6bb5\n        staticMethod();  // \u53ef\u4ee5\u8c03\u7528\u9759\u6001\u65b9\u6cd5\n\n        // System.out.println(instanceField);  // \u7f16\u8bd1\u9519\u8bef\n        // instanceMethod();  // \u7f16\u8bd1\u9519\u8bef\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-advanced-oop/#_4","title":"\u603b\u7ed3","text":"<p>\u9ad8\u7ea7\u9762\u5411\u5bf9\u8c61\u7279\u6027\u7684\u6838\u5fc3\u8981\u70b9\uff1a</p> <ol> <li>\u62bd\u8c61\u7c7b\uff1a\u90e8\u5206\u5b9e\u73b0\u7684\u7c7b\uff0c\u7528\u4e8e\u4ee3\u7801\u590d\u7528\u548c\u89c4\u8303\u5b9a\u4e49</li> <li>\u63a5\u53e3\uff1a\u884c\u4e3a\u89c4\u8303\u7684\u5b9a\u4e49\uff0c\u652f\u6301\u591a\u5b9e\u73b0</li> <li>\u679a\u4e3e\uff1a\u7c7b\u578b\u5b89\u5168\u7684\u5e38\u91cf\u96c6\u5408\uff0c\u53ef\u4ee5\u6709\u5c5e\u6027\u548c\u65b9\u6cd5</li> <li>\u5185\u90e8\u7c7b\uff1a\u7c7b\u7684\u5d4c\u5957\u5b9a\u4e49\uff0c\u63d0\u4f9b\u66f4\u597d\u7684\u5c01\u88c5\u6027</li> <li>Java Bean\uff1a\u9075\u5faa\u7279\u5b9a\u89c4\u8303\u7684\u7c7b\uff0c\u4fbf\u4e8e\u6846\u67b6\u4f7f\u7528</li> <li>\u4f5c\u7528\u57df\uff1a\u53d8\u91cf\u7684\u53ef\u89c1\u6027\u8303\u56f4\uff0c\u9759\u6001\u4e0a\u4e0b\u6587\u7684\u9650\u5236</li> </ol> <p>\u8bbe\u8ba1\u5efa\u8bae\uff1a\u5408\u7406\u4f7f\u7528\u8fd9\u4e9b\u7279\u6027\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3001\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002</p>"},{"location":"cs_base/language/java/java-basics/","title":"Java \u57fa\u7840\u8bed\u6cd5","text":""},{"location":"cs_base/language/java/java-basics/#java","title":"Java \u57fa\u7840\u8bed\u6cd5","text":"<p> \u7ea6 429 \u4e2a\u5b57  280 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>\u672c\u7ae0\u5185\u5bb9</p> <p>\u672c\u7ae0\u4ecb\u7ecd Java \u7684\u57fa\u7840\u8bed\u6cd5\uff0c\u5305\u62ec\u53d8\u91cf\u3001\u6570\u636e\u7c7b\u578b\u3001\u8fd0\u7b97\u7b26\u548c\u63a7\u5236\u6d41\u7a0b\u7b49\u6838\u5fc3\u6982\u5ff5\u3002</p>"},{"location":"cs_base/language/java/java-basics/#_1","title":"\u4e00\u3001\u53d8\u91cf\u4e0e\u6570\u636e\u7c7b\u578b","text":""},{"location":"cs_base/language/java/java-basics/#11","title":"1.1 \u53d8\u91cf\u58f0\u660e","text":"<p>\u5728 Java \u4e2d\uff0c\u53d8\u91cf\u5fc5\u987b\u5148\u58f0\u660e\u540e\u4f7f\u7528\uff1a</p> Java<pre><code>// \u58f0\u660e\u53d8\u91cf\nint age;\nString name;\n\n// \u58f0\u660e\u5e76\u521d\u59cb\u5316\nint score = 85;\nString message = \"Hello World\";\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#12","title":"1.2 \u57fa\u672c\u6570\u636e\u7c7b\u578b","text":"<p>Java \u6709 8 \u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff1a</p> \u7c7b\u578b \u5927\u5c0f \u8303\u56f4 \u9ed8\u8ba4\u503c <code>byte</code> 1\u5b57\u8282 -128 ~ 127 0 <code>short</code> 2\u5b57\u8282 -32,768 ~ 32,767 0 <code>int</code> 4\u5b57\u8282 -2^31 ~ 2^31-1 0 <code>long</code> 8\u5b57\u8282 -2^63 ~ 2^63-1 0L <code>float</code> 4\u5b57\u8282 IEEE 754 0.0f <code>double</code> 8\u5b57\u8282 IEEE 754 0.0d <code>char</code> 2\u5b57\u8282 0 ~ 65,535 '\\u0000' <code>boolean</code> 1\u4f4d true/false false Java<pre><code>// \u57fa\u672c\u6570\u636e\u7c7b\u578b\u793a\u4f8b\nbyte b = 100;\nshort s = 1000;\nint i = 100000;\nlong l = 100000L;  // \u6ce8\u610fL\u540e\u7f00\n\nfloat f = 3.14f;   // \u6ce8\u610ff\u540e\u7f00\ndouble d = 3.14159;\n\nchar c = 'A';\nboolean flag = true;\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#13","title":"1.3 \u5f15\u7528\u6570\u636e\u7c7b\u578b","text":"<p>\u9664\u4e86\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u5176\u4ed6\u90fd\u662f\u5f15\u7528\u6570\u636e\u7c7b\u578b\uff1a</p> Java<pre><code>// \u5b57\u7b26\u4e32\nString str = \"Hello Java\";\n\n// \u6570\u7ec4\nint[] numbers = {1, 2, 3, 4, 5};\n\n// \u5bf9\u8c61\nScanner scanner = new Scanner(System.in);\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#14","title":"1.4 \u7c7b\u578b\u8f6c\u6362","text":""},{"location":"cs_base/language/java/java-basics/#_2","title":"\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\uff08\u9690\u5f0f\uff09","text":"Java<pre><code>// \u5c0f\u8303\u56f4 \u2192 \u5927\u8303\u56f4\uff0c\u81ea\u52a8\u8f6c\u6362\nint i = 100;\nlong l = i;        // int \u2192 long\ndouble d = l;      // long \u2192 double\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#_3","title":"\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff08\u663e\u5f0f\uff09","text":"Java<pre><code>// \u5927\u8303\u56f4 \u2192 \u5c0f\u8303\u56f4\uff0c\u9700\u8981\u5f3a\u5236\u8f6c\u6362\ndouble d = 3.14;\nint i = (int) d;   // \u7ed3\u679c\uff1a3\uff08\u5c0f\u6570\u90e8\u5206\u4e22\u5931\uff09\n\n// \u6ce8\u610f\u7cbe\u5ea6\u4e22\u5931\nlong l = 123456789L;\nint i2 = (int) l;  // \u53ef\u80fd\u6ea2\u51fa\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#_4","title":"\u4e8c\u3001\u8fd0\u7b97\u7b26","text":""},{"location":"cs_base/language/java/java-basics/#21","title":"2.1 \u7b97\u672f\u8fd0\u7b97\u7b26","text":"Java<pre><code>int a = 10, b = 3;\n\nSystem.out.println(a + b);  // 13 \u52a0\u6cd5\nSystem.out.println(a - b);  // 7  \u51cf\u6cd5\nSystem.out.println(a * b);  // 30 \u4e58\u6cd5\nSystem.out.println(a / b);  // 3  \u9664\u6cd5\uff08\u6574\u6570\u9664\u6cd5\uff09\nSystem.out.println(a % b);  // 1  \u53d6\u4f59\n\n// \u81ea\u589e\u81ea\u51cf\nint x = 5;\nSystem.out.println(++x);    // 6 \u5148\u81ea\u589e\u518d\u4f7f\u7528\nSystem.out.println(x++);    // 6 \u5148\u4f7f\u7528\u518d\u81ea\u589e\nSystem.out.println(x);      // 7\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#22","title":"2.2 \u5173\u7cfb\u8fd0\u7b97\u7b26","text":"Java<pre><code>int a = 5, b = 3;\n\nSystem.out.println(a &gt; b);   // true\nSystem.out.println(a &lt; b);   // false\nSystem.out.println(a &gt;= b);  // true\nSystem.out.println(a &lt;= b);  // false\nSystem.out.println(a == b);  // false\nSystem.out.println(a != b);  // true\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#23","title":"2.3 \u903b\u8f91\u8fd0\u7b97\u7b26","text":"Java<pre><code>boolean x = true, y = false;\n\nSystem.out.println(x &amp;&amp; y);  // false \u903b\u8f91\u4e0e\nSystem.out.println(x || y);  // true  \u903b\u8f91\u6216\nSystem.out.println(!x);      // false \u903b\u8f91\u975e\n\n// \u77ed\u8def\u8fd0\u7b97\nint a = 5, b = 0;\nif (b != 0 &amp;&amp; a / b &gt; 2) {   // b != 0 \u4e3a false\uff0c\u4e0d\u4f1a\u6267\u884c a / b\n    System.out.println(\"\u6761\u4ef6\u6210\u7acb\");\n}\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#24","title":"2.4 \u8d4b\u503c\u8fd0\u7b97\u7b26","text":"Java<pre><code>int a = 10;\n\na += 5;  // a = a + 5;  \u7ed3\u679c\uff1a15\na -= 3;  // a = a - 3;  \u7ed3\u679c\uff1a12\na *= 2;  // a = a * 2;  \u7ed3\u679c\uff1a24\na /= 4;  // a = a / 4;  \u7ed3\u679c\uff1a6\na %= 5;  // a = a % 5;  \u7ed3\u679c\uff1a1\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#25","title":"2.5 \u4e09\u5143\u8fd0\u7b97\u7b26","text":"Java<pre><code>// \u8bed\u6cd5\uff1a\u6761\u4ef6 ? \u503c1 : \u503c2\nint a = 10, b = 20;\nint max = a &gt; b ? a : b;  // \u7ed3\u679c\uff1a20\n\nString result = (score &gt;= 60) ? \"\u53ca\u683c\" : \"\u4e0d\u53ca\u683c\";\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#_5","title":"\u4e09\u3001\u63a7\u5236\u6d41\u7a0b","text":""},{"location":"cs_base/language/java/java-basics/#31","title":"3.1 \u6761\u4ef6\u8bed\u53e5","text":""},{"location":"cs_base/language/java/java-basics/#if","title":"if \u8bed\u53e5","text":"Java<pre><code>int score = 85;\n\n// \u5355\u5206\u652f\nif (score &gt;= 60) {\n    System.out.println(\"\u53ca\u683c\");\n}\n\n// \u53cc\u5206\u652f\nif (score &gt;= 60) {\n    System.out.println(\"\u53ca\u683c\");\n} else {\n    System.out.println(\"\u4e0d\u53ca\u683c\");\n}\n\n// \u591a\u5206\u652f\nif (score &gt;= 90) {\n    System.out.println(\"\u4f18\u79c0\");\n} else if (score &gt;= 80) {\n    System.out.println(\"\u826f\u597d\");\n} else if (score &gt;= 60) {\n    System.out.println(\"\u53ca\u683c\");\n} else {\n    System.out.println(\"\u4e0d\u53ca\u683c\");\n}\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#switch","title":"switch \u8bed\u53e5","text":"Java<pre><code>int dayOfWeek = 3;\n\nswitch (dayOfWeek) {\n    case 1:\n        System.out.println(\"\u661f\u671f\u4e00\");\n        break;\n    case 2:\n        System.out.println(\"\u661f\u671f\u4e8c\");\n        break;\n    case 3:\n        System.out.println(\"\u661f\u671f\u4e09\");\n        break;\n    case 4:\n        System.out.println(\"\u661f\u671f\u56db\");\n        break;\n    case 5:\n        System.out.println(\"\u661f\u671f\u4e94\");\n        break;\n    case 6:\n    case 7:\n        System.out.println(\"\u5468\u672b\");\n        break;\n    default:\n        System.out.println(\"\u65e0\u6548\u7684\u65e5\u671f\");\n}\n\n// Java 14+ \u65b0\u8bed\u6cd5\nString dayName = switch (dayOfWeek) {\n    case 1 -&gt; \"\u661f\u671f\u4e00\";\n    case 2 -&gt; \"\u661f\u671f\u4e8c\";\n    case 3 -&gt; \"\u661f\u671f\u4e09\";\n    case 4 -&gt; \"\u661f\u671f\u56db\";\n    case 5 -&gt; \"\u661f\u671f\u4e94\";\n    case 6, 7 -&gt; \"\u5468\u672b\";\n    default -&gt; \"\u65e0\u6548\u65e5\u671f\";\n};\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#32","title":"3.2 \u5faa\u73af\u8bed\u53e5","text":""},{"location":"cs_base/language/java/java-basics/#for","title":"for \u5faa\u73af","text":"Java<pre><code>// \u57fa\u672c for \u5faa\u73af\nfor (int i = 1; i &lt;= 5; i++) {\n    System.out.println(\"\u7b2c \" + i + \" \u6b21\u5faa\u73af\");\n}\n\n// \u589e\u5f3a for \u5faa\u73af\uff08for-each\uff09\nint[] numbers = {1, 2, 3, 4, 5};\nfor (int num : numbers) {\n    System.out.println(num);\n}\n\n// \u5d4c\u5957\u5faa\u73af\nfor (int i = 1; i &lt;= 3; i++) {\n    for (int j = 1; j &lt;= 3; j++) {\n        System.out.print(\"(\" + i + \",\" + j + \") \");\n    }\n    System.out.println();\n}\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#while","title":"while \u5faa\u73af","text":"Java<pre><code>// while \u5faa\u73af\nint i = 1;\nwhile (i &lt;= 5) {\n    System.out.println(\"\u7b2c \" + i + \" \u6b21\u5faa\u73af\");\n    i++;\n}\n\n// do-while \u5faa\u73af\nint j = 1;\ndo {\n    System.out.println(\"\u7b2c \" + j + \" \u6b21\u5faa\u73af\");\n    j++;\n} while (j &lt;= 5);\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#33","title":"3.3 \u8df3\u8f6c\u8bed\u53e5","text":""},{"location":"cs_base/language/java/java-basics/#break-continue","title":"break \u548c continue","text":"Java<pre><code>// break\uff1a\u8df3\u51fa\u5faa\u73af\nfor (int i = 1; i &lt;= 10; i++) {\n    if (i == 5) {\n        break;  // \u8df3\u51fa\u5faa\u73af\n    }\n    System.out.println(i);  // \u8f93\u51fa\uff1a1 2 3 4\n}\n\n// continue\uff1a\u8df3\u8fc7\u672c\u6b21\u5faa\u73af\nfor (int i = 1; i &lt;= 5; i++) {\n    if (i == 3) {\n        continue;  // \u8df3\u8fc7\u672c\u6b21\u5faa\u73af\n    }\n    System.out.println(i);  // \u8f93\u51fa\uff1a1 2 4 5\n}\n\n// \u6807\u7b7e\u8df3\u8f6c\nouter: for (int i = 1; i &lt;= 3; i++) {\n    for (int j = 1; j &lt;= 3; j++) {\n        if (i == 2 &amp;&amp; j == 2) {\n            break outer;  // \u8df3\u51fa\u5916\u5c42\u5faa\u73af\n        }\n        System.out.println(\"i=\" + i + \", j=\" + j);\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#_6","title":"\u56db\u3001\u8f93\u5165\u8f93\u51fa","text":""},{"location":"cs_base/language/java/java-basics/#41","title":"4.1 \u8f93\u51fa","text":"Java<pre><code>// \u57fa\u672c\u8f93\u51fa\nSystem.out.print(\"\u4e0d\u6362\u884c\u8f93\u51fa\");\nSystem.out.println(\"\u6362\u884c\u8f93\u51fa\");\n\n// \u683c\u5f0f\u5316\u8f93\u51fa\nString name = \"\u5f20\u4e09\";\nint age = 25;\ndouble salary = 8500.5;\n\nSystem.out.printf(\"\u59d3\u540d\uff1a%s\uff0c\u5e74\u9f84\uff1a%d\uff0c\u5de5\u8d44\uff1a%.2f%n\", name, age, salary);\n// \u8f93\u51fa\uff1a\u59d3\u540d\uff1a\u5f20\u4e09\uff0c\u5e74\u9f84\uff1a25\uff0c\u5de5\u8d44\uff1a8500.50\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#42","title":"4.2 \u8f93\u5165","text":"Java<pre><code>import java.util.Scanner;\n\npublic class InputExample {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"\u8bf7\u8f93\u5165\u59d3\u540d\uff1a\");\n        String name = scanner.nextLine();\n\n        System.out.print(\"\u8bf7\u8f93\u5165\u5e74\u9f84\uff1a\");\n        int age = scanner.nextInt();\n\n        System.out.print(\"\u8bf7\u8f93\u5165\u8eab\u9ad8\uff1a\");\n        double height = scanner.nextDouble();\n\n        System.out.println(\"\u59d3\u540d\uff1a\" + name + \"\uff0c\u5e74\u9f84\uff1a\" + age + \"\uff0c\u8eab\u9ad8\uff1a\" + height);\n\n        scanner.close();  // \u5173\u95ed\u8d44\u6e90\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#_7","title":"\u4e94\u3001\u5e38\u89c1\u9677\u9631\u4e0e\u6ce8\u610f\u4e8b\u9879","text":""},{"location":"cs_base/language/java/java-basics/#51","title":"5.1 \u6574\u6570\u9664\u6cd5","text":"Java<pre><code>int a = 5, b = 2;\nSystem.out.println(a / b);        // 2\uff08\u6574\u6570\u9664\u6cd5\uff09\nSystem.out.println(5.0 / 2);      // 2.5\uff08\u6d6e\u70b9\u9664\u6cd5\uff09\nSystem.out.println((double)a / b); // 2.5\uff08\u5f3a\u5236\u8f6c\u6362\uff09\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#52","title":"5.2 \u6d6e\u70b9\u6570\u6bd4\u8f83","text":"Java<pre><code>// \u9519\u8bef\u7684\u6bd4\u8f83\u65b9\u5f0f\ndouble d1 = 0.1 + 0.2;\ndouble d2 = 0.3;\nSystem.out.println(d1 == d2);  // false\uff01\n\n// \u6b63\u786e\u7684\u6bd4\u8f83\u65b9\u5f0f\ndouble epsilon = 1e-10;\nSystem.out.println(Math.abs(d1 - d2) &lt; epsilon);  // true\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#53","title":"5.3 \u5b57\u7b26\u4e32\u6bd4\u8f83","text":"Java<pre><code>// \u9519\u8bef\u7684\u6bd4\u8f83\u65b9\u5f0f\nString s1 = \"hello\";\nString s2 = \"hello\";\nString s3 = new String(\"hello\");\n\nSystem.out.println(s1 == s2);     // true\uff08\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\uff09\nSystem.out.println(s1 == s3);     // false\uff08\u4e0d\u540c\u5bf9\u8c61\uff09\n\n// \u6b63\u786e\u7684\u6bd4\u8f83\u65b9\u5f0f\nSystem.out.println(s1.equals(s3)); // true\uff08\u5185\u5bb9\u76f8\u540c\uff09\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#54-scanner-nextline","title":"5.4 Scanner \u7684 nextLine() \u95ee\u9898","text":"Java<pre><code>Scanner scanner = new Scanner(System.in);\n\nSystem.out.print(\"\u8f93\u5165\u6570\u5b57\uff1a\");\nint num = scanner.nextInt();\n\nSystem.out.print(\"\u8f93\u5165\u5b57\u7b26\u4e32\uff1a\");\nscanner.nextLine();  // \u6d88\u8d39\u6362\u884c\u7b26\nString str = scanner.nextLine();\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#_8","title":"\u516d\u3001\u7f16\u7a0b\u89c4\u8303","text":""},{"location":"cs_base/language/java/java-basics/#61","title":"6.1 \u547d\u540d\u89c4\u8303","text":"Java<pre><code>// \u7c7b\u540d\uff1a\u5927\u9a7c\u5cf0\u547d\u540d\u6cd5\nclass StudentManager { }\n\n// \u65b9\u6cd5\u540d\u548c\u53d8\u91cf\u540d\uff1a\u5c0f\u9a7c\u5cf0\u547d\u540d\u6cd5\nint studentAge;\nvoid calculateScore() { }\n\n// \u5e38\u91cf\uff1a\u5168\u5927\u5199\uff0c\u4e0b\u5212\u7ebf\u5206\u9694\nfinal int MAX_SIZE = 100;\nfinal String DEFAULT_NAME = \"Unknown\";\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#62","title":"6.2 \u4ee3\u7801\u98ce\u683c","text":"Java<pre><code>// \u826f\u597d\u7684\u4ee3\u7801\u98ce\u683c\npublic class Calculator {\n    private static final double PI = 3.14159;\n\n    public double calculateArea(double radius) {\n        if (radius &lt;= 0) {\n            throw new IllegalArgumentException(\"\u534a\u5f84\u5fc5\u987b\u5927\u4e8e0\");\n        }\n\n        return PI * radius * radius;\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-basics/#_9","title":"\u603b\u7ed3","text":"<p>Java \u57fa\u7840\u8bed\u6cd5\u662f\u5b66\u4e60 Java \u7f16\u7a0b\u7684\u57fa\u77f3\uff0c\u4e3b\u8981\u5305\u62ec\uff1a</p> <ol> <li>\u6570\u636e\u7c7b\u578b\uff1a8\u79cd\u57fa\u672c\u7c7b\u578b + \u5f15\u7528\u7c7b\u578b</li> <li>\u8fd0\u7b97\u7b26\uff1a\u7b97\u672f\u3001\u5173\u7cfb\u3001\u903b\u8f91\u3001\u8d4b\u503c\u3001\u4e09\u5143</li> <li>\u63a7\u5236\u6d41\u7a0b\uff1aif/switch \u6761\u4ef6\u8bed\u53e5\uff0cfor/while \u5faa\u73af\u8bed\u53e5</li> <li>\u8f93\u5165\u8f93\u51fa\uff1aSystem.out \u8f93\u51fa\uff0cScanner \u8f93\u5165</li> </ol> <p>\u5b66\u4e60\u5efa\u8bae\uff1a\u591a\u7ec3\u4e60\u7f16\u7a0b\uff0c\u719f\u7ec3\u638c\u63e1\u57fa\u7840\u8bed\u6cd5\uff0c\u4e3a\u540e\u7eed\u5b66\u4e60\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u6253\u4e0b\u575a\u5b9e\u57fa\u7840\u3002</p>"},{"location":"cs_base/language/java/java-collections/","title":"Java \u96c6\u5408\u6846\u67b6","text":""},{"location":"cs_base/language/java/java-collections/#java","title":"Java \u96c6\u5408\u6846\u67b6","text":"<p> \u7ea6 329 \u4e2a\u5b57  1293 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 18 \u5206\u949f</p> <p>\u672c\u7ae0\u5185\u5bb9</p> <p>\u672c\u7ae0\u4ecb\u7ecd Java \u96c6\u5408\u6846\u67b6\uff1aCollection \u63a5\u53e3\u4f53\u7cfb\u3001Map \u63a5\u53e3\u4f53\u7cfb\u3001\u96c6\u5408\u9009\u62e9\u6307\u5357\u548c\u904d\u5386\u65b9\u6cd5\u3002</p>"},{"location":"cs_base/language/java/java-collections/#_1","title":"\u4e00\u3001\u96c6\u5408\u6846\u67b6\u6982\u8ff0","text":""},{"location":"cs_base/language/java/java-collections/#11","title":"1.1 \u96c6\u5408\u6846\u67b6\u7ed3\u6784","text":"Java<pre><code>/*\nJava \u96c6\u5408\u6846\u67b6\u5c42\u6b21\u7ed3\u6784\uff1a\n\nIterable\n\u2514\u2500\u2500 Collection\n    \u251c\u2500\u2500 List (\u6709\u5e8f\uff0c\u53ef\u91cd\u590d)\n    \u2502   \u251c\u2500\u2500 ArrayList\n    \u2502   \u251c\u2500\u2500 LinkedList\n    \u2502   \u2514\u2500\u2500 Vector\n    \u251c\u2500\u2500 Set (\u65e0\u5e8f\uff0c\u4e0d\u53ef\u91cd\u590d)\n    \u2502   \u251c\u2500\u2500 HashSet\n    \u2502   \u251c\u2500\u2500 LinkedHashSet\n    \u2502   \u2514\u2500\u2500 TreeSet\n    \u2514\u2500\u2500 Queue (\u961f\u5217)\n        \u251c\u2500\u2500 LinkedList\n        \u251c\u2500\u2500 PriorityQueue\n        \u2514\u2500\u2500 ArrayDeque\n\nMap (\u952e\u503c\u5bf9\uff0c\u952e\u4e0d\u53ef\u91cd\u590d)\n\u251c\u2500\u2500 HashMap\n\u251c\u2500\u2500 LinkedHashMap\n\u251c\u2500\u2500 TreeMap\n\u2514\u2500\u2500 Hashtable\n*/\n\nimport java.util.*;\n\npublic class CollectionFrameworkOverview {\n    public static void main(String[] args) {\n        System.out.println(\"=== Java \u96c6\u5408\u6846\u67b6\u6982\u8ff0 ===\");\n\n        // Collection \u63a5\u53e3\u7684\u4e3b\u8981\u65b9\u6cd5\n        demonstrateCollectionMethods();\n\n        // \u96c6\u5408\u7684\u57fa\u672c\u7279\u6027\n        demonstrateCollectionCharacteristics();\n    }\n\n    public static void demonstrateCollectionMethods() {\n        System.out.println(\"\\n--- Collection \u63a5\u53e3\u4e3b\u8981\u65b9\u6cd5 ---\");\n\n        Collection&lt;String&gt; collection = new ArrayList&lt;&gt;();\n\n        // \u6dfb\u52a0\u5143\u7d20\n        collection.add(\"Apple\");\n        collection.add(\"Banana\");\n        collection.add(\"Cherry\");\n        System.out.println(\"\u6dfb\u52a0\u5143\u7d20\u540e: \" + collection);\n\n        // \u67e5\u8be2\u64cd\u4f5c\n        System.out.println(\"\u96c6\u5408\u5927\u5c0f: \" + collection.size());\n        System.out.println(\"\u662f\u5426\u4e3a\u7a7a: \" + collection.isEmpty());\n        System.out.println(\"\u662f\u5426\u5305\u542bApple: \" + collection.contains(\"Apple\"));\n\n        // \u6279\u91cf\u64cd\u4f5c\n        Collection&lt;String&gt; fruits = Arrays.asList(\"Orange\", \"Grape\");\n        collection.addAll(fruits);\n        System.out.println(\"\u6279\u91cf\u6dfb\u52a0\u540e: \" + collection);\n\n        // \u5220\u9664\u64cd\u4f5c\n        collection.remove(\"Banana\");\n        System.out.println(\"\u5220\u9664Banana\u540e: \" + collection);\n\n        // \u8f6c\u6362\u4e3a\u6570\u7ec4\n        String[] array = collection.toArray(new String[0]);\n        System.out.println(\"\u8f6c\u6362\u4e3a\u6570\u7ec4: \" + Arrays.toString(array));\n    }\n\n    public static void demonstrateCollectionCharacteristics() {\n        System.out.println(\"\\n--- \u96c6\u5408\u7279\u6027\u5bf9\u6bd4 ---\");\n\n        // List: \u6709\u5e8f\uff0c\u53ef\u91cd\u590d\n        List&lt;String&gt; list = new ArrayList&lt;&gt;();\n        list.add(\"A\");\n        list.add(\"B\");\n        list.add(\"A\");  // \u53ef\u91cd\u590d\n        System.out.println(\"List (\u6709\u5e8f\uff0c\u53ef\u91cd\u590d): \" + list);\n\n        // Set: \u65e0\u5e8f\uff0c\u4e0d\u53ef\u91cd\u590d\n        Set&lt;String&gt; set = new HashSet&lt;&gt;();\n        set.add(\"A\");\n        set.add(\"B\");\n        set.add(\"A\");  // \u91cd\u590d\u5143\u7d20\u4e0d\u4f1a\u88ab\u6dfb\u52a0\n        System.out.println(\"Set (\u65e0\u5e8f\uff0c\u4e0d\u53ef\u91cd\u590d): \" + set);\n\n        // Map: \u952e\u503c\u5bf9\uff0c\u952e\u4e0d\u53ef\u91cd\u590d\n        Map&lt;String, Integer&gt; map = new HashMap&lt;&gt;();\n        map.put(\"Apple\", 10);\n        map.put(\"Banana\", 20);\n        map.put(\"Apple\", 15);  // \u952e\u91cd\u590d\uff0c\u503c\u4f1a\u88ab\u8986\u76d6\n        System.out.println(\"Map (\u952e\u503c\u5bf9\uff0c\u952e\u4e0d\u53ef\u91cd\u590d): \" + map);\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-collections/#list","title":"\u4e8c\u3001List \u63a5\u53e3\u53ca\u5176\u5b9e\u73b0","text":""},{"location":"cs_base/language/java/java-collections/#21-arraylist","title":"2.1 ArrayList","text":"Java<pre><code>import java.util.*;\n\npublic class ArrayListDemo {\n    public static void main(String[] args) {\n        System.out.println(\"=== ArrayList \u8be6\u89e3 ===\");\n\n        // \u521b\u5efa\u548c\u521d\u59cb\u5316\n        createAndInitialize();\n\n        // \u57fa\u672c\u64cd\u4f5c\n        basicOperations();\n\n        // \u6027\u80fd\u7279\u70b9\n        performanceCharacteristics();\n\n        // \u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\n        threadSafetyIssue();\n    }\n\n    public static void createAndInitialize() {\n        System.out.println(\"\\n--- \u521b\u5efa\u548c\u521d\u59cb\u5316 ---\");\n\n        // 1. \u9ed8\u8ba4\u6784\u9020\u5668\n        ArrayList&lt;String&gt; list1 = new ArrayList&lt;&gt;();\n        System.out.println(\"\u9ed8\u8ba4\u5bb9\u91cf\u7684ArrayList: \" + list1.size());\n\n        // 2. \u6307\u5b9a\u521d\u59cb\u5bb9\u91cf\n        ArrayList&lt;String&gt; list2 = new ArrayList&lt;&gt;(20);\n        System.out.println(\"\u6307\u5b9a\u5bb9\u91cf\u7684ArrayList: \" + list2.size());\n\n        // 3. \u4ece\u5176\u4ed6\u96c6\u5408\u521b\u5efa\n        List&lt;String&gt; sourceList = Arrays.asList(\"A\", \"B\", \"C\");\n        ArrayList&lt;String&gt; list3 = new ArrayList&lt;&gt;(sourceList);\n        System.out.println(\"\u4ece\u5176\u4ed6\u96c6\u5408\u521b\u5efa: \" + list3);\n\n        // 4. \u4f7f\u7528\u96c6\u5408\u5de5\u5382\u65b9\u6cd5\uff08Java 9+\uff09\n        List&lt;String&gt; list4 = List.of(\"X\", \"Y\", \"Z\");  // \u4e0d\u53ef\u53d8\u5217\u8868\n        System.out.println(\"\u4e0d\u53ef\u53d8\u5217\u8868: \" + list4);\n    }\n\n    public static void basicOperations() {\n        System.out.println(\"\\n--- \u57fa\u672c\u64cd\u4f5c ---\");\n\n        ArrayList&lt;String&gt; list = new ArrayList&lt;&gt;();\n\n        // \u6dfb\u52a0\u5143\u7d20\n        list.add(\"First\");\n        list.add(\"Second\");\n        list.add(1, \"Middle\");  // \u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\n        System.out.println(\"\u6dfb\u52a0\u5143\u7d20\u540e: \" + list);\n\n        // \u8bbf\u95ee\u5143\u7d20\n        System.out.println(\"\u7b2c\u4e00\u4e2a\u5143\u7d20: \" + list.get(0));\n        System.out.println(\"\u6700\u540e\u4e00\u4e2a\u5143\u7d20: \" + list.get(list.size() - 1));\n\n        // \u4fee\u6539\u5143\u7d20\n        String oldValue = list.set(1, \"Updated\");\n        System.out.println(\"\u4fee\u6539\u5143\u7d20\uff0c\u65e7\u503c: \" + oldValue + \", \u65b0\u5217\u8868: \" + list);\n\n        // \u67e5\u627e\u5143\u7d20\n        int index = list.indexOf(\"Second\");\n        System.out.println(\"Second\u7684\u7d22\u5f15: \" + index);\n\n        // \u5220\u9664\u5143\u7d20\n        list.remove(\"First\");  // \u6309\u503c\u5220\u9664\n        list.remove(0);        // \u6309\u7d22\u5f15\u5220\u9664\n        System.out.println(\"\u5220\u9664\u5143\u7d20\u540e: \" + list);\n\n        // \u5b50\u5217\u8868\n        list.addAll(Arrays.asList(\"A\", \"B\", \"C\", \"D\"));\n        List&lt;String&gt; subList = list.subList(1, 3);\n        System.out.println(\"\u5b50\u5217\u8868: \" + subList);\n    }\n\n    public static void performanceCharacteristics() {\n        System.out.println(\"\\n--- \u6027\u80fd\u7279\u70b9 ---\");\n\n        ArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;();\n\n        // \u6d4b\u8bd5\u6dfb\u52a0\u6027\u80fd\n        long startTime = System.nanoTime();\n        for (int i = 0; i &lt; 100000; i++) {\n            list.add(i);\n        }\n        long endTime = System.nanoTime();\n        System.out.println(\"\u6dfb\u52a010\u4e07\u4e2a\u5143\u7d20\u8017\u65f6: \" + (endTime - startTime) / 1000000 + \"ms\");\n\n        // \u6d4b\u8bd5\u968f\u673a\u8bbf\u95ee\u6027\u80fd\n        startTime = System.nanoTime();\n        for (int i = 0; i &lt; 10000; i++) {\n            int randomIndex = (int) (Math.random() * list.size());\n            list.get(randomIndex);\n        }\n        endTime = System.nanoTime();\n        System.out.println(\"\u968f\u673a\u8bbf\u95ee1\u4e07\u6b21\u8017\u65f6: \" + (endTime - startTime) / 1000000 + \"ms\");\n\n        // \u6d4b\u8bd5\u4e2d\u95f4\u63d2\u5165\u6027\u80fd\n        startTime = System.nanoTime();\n        for (int i = 0; i &lt; 1000; i++) {\n            list.add(list.size() / 2, i);\n        }\n        endTime = System.nanoTime();\n        System.out.println(\"\u4e2d\u95f4\u63d2\u51651000\u6b21\u8017\u65f6: \" + (endTime - startTime) / 1000000 + \"ms\");\n    }\n\n    public static void threadSafetyIssue() {\n        System.out.println(\"\\n--- \u7ebf\u7a0b\u5b89\u5168\u95ee\u9898 ---\");\n\n        // ArrayList \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\n        ArrayList&lt;Integer&gt; unsafeList = new ArrayList&lt;&gt;();\n\n        // \u7ebf\u7a0b\u5b89\u5168\u7684\u66ff\u4ee3\u65b9\u6848\n        // 1. \u4f7f\u7528 Collections.synchronizedList\n        List&lt;Integer&gt; syncList = Collections.synchronizedList(new ArrayList&lt;&gt;());\n\n        // 2. \u4f7f\u7528 Vector\uff08\u4e0d\u63a8\u8350\uff0c\u6027\u80fd\u8f83\u5dee\uff09\n        Vector&lt;Integer&gt; vector = new Vector&lt;&gt;();\n\n        // 3. \u4f7f\u7528 CopyOnWriteArrayList\uff08\u8bfb\u591a\u5199\u5c11\u573a\u666f\uff09\n        // CopyOnWriteArrayList&lt;Integer&gt; cowList = new CopyOnWriteArrayList&lt;&gt;();\n\n        System.out.println(\"\u7ebf\u7a0b\u5b89\u5168\u7684List\u521b\u5efa\u5b8c\u6210\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-collections/#22-linkedlist","title":"2.2 LinkedList","text":"Java<pre><code>import java.util.*;\n\npublic class LinkedListDemo {\n    public static void main(String[] args) {\n        System.out.println(\"=== LinkedList \u8be6\u89e3 ===\");\n\n        // \u57fa\u672c\u64cd\u4f5c\n        basicOperations();\n\n        // \u961f\u5217\u64cd\u4f5c\n        queueOperations();\n\n        // \u6808\u64cd\u4f5c\n        stackOperations();\n\n        // \u6027\u80fd\u5bf9\u6bd4\n        performanceComparison();\n    }\n\n    public static void basicOperations() {\n        System.out.println(\"\\n--- \u57fa\u672c\u64cd\u4f5c ---\");\n\n        LinkedList&lt;String&gt; list = new LinkedList&lt;&gt;();\n\n        // \u6dfb\u52a0\u5143\u7d20\n        list.add(\"Middle\");\n        list.addFirst(\"First\");\n        list.addLast(\"Last\");\n        System.out.println(\"\u6dfb\u52a0\u5143\u7d20\u540e: \" + list);\n\n        // \u8bbf\u95ee\u5143\u7d20\n        System.out.println(\"\u7b2c\u4e00\u4e2a\u5143\u7d20: \" + list.getFirst());\n        System.out.println(\"\u6700\u540e\u4e00\u4e2a\u5143\u7d20: \" + list.getLast());\n        System.out.println(\"\u7d22\u5f151\u7684\u5143\u7d20: \" + list.get(1));\n\n        // \u5220\u9664\u5143\u7d20\n        String removedFirst = list.removeFirst();\n        String removedLast = list.removeLast();\n        System.out.println(\"\u5220\u9664\u7684\u7b2c\u4e00\u4e2a: \" + removedFirst + \", \u5220\u9664\u7684\u6700\u540e\u4e00\u4e2a: \" + removedLast);\n        System.out.println(\"\u5220\u9664\u540e: \" + list);\n    }\n\n    public static void queueOperations() {\n        System.out.println(\"\\n--- \u961f\u5217\u64cd\u4f5c ---\");\n\n        Queue&lt;String&gt; queue = new LinkedList&lt;&gt;();\n\n        // \u5165\u961f\n        queue.offer(\"First\");\n        queue.offer(\"Second\");\n        queue.offer(\"Third\");\n        System.out.println(\"\u5165\u961f\u540e: \" + queue);\n\n        // \u67e5\u770b\u961f\u9996\u5143\u7d20\n        System.out.println(\"\u961f\u9996\u5143\u7d20: \" + queue.peek());\n\n        // \u51fa\u961f\n        while (!queue.isEmpty()) {\n            String element = queue.poll();\n            System.out.println(\"\u51fa\u961f: \" + element + \", \u5269\u4f59: \" + queue);\n        }\n    }\n\n    public static void stackOperations() {\n        System.out.println(\"\\n--- \u6808\u64cd\u4f5c ---\");\n\n        LinkedList&lt;String&gt; stack = new LinkedList&lt;&gt;();\n\n        // \u538b\u6808\n        stack.push(\"Bottom\");\n        stack.push(\"Middle\");\n        stack.push(\"Top\");\n        System.out.println(\"\u538b\u6808\u540e: \" + stack);\n\n        // \u67e5\u770b\u6808\u9876\u5143\u7d20\n        System.out.println(\"\u6808\u9876\u5143\u7d20: \" + stack.peek());\n\n        // \u5f39\u6808\n        while (!stack.isEmpty()) {\n            String element = stack.pop();\n            System.out.println(\"\u5f39\u6808: \" + element + \", \u5269\u4f59: \" + stack);\n        }\n    }\n\n    public static void performanceComparison() {\n        System.out.println(\"\\n--- ArrayList vs LinkedList \u6027\u80fd\u5bf9\u6bd4 ---\");\n\n        int size = 100000;\n\n        // ArrayList\n        ArrayList&lt;Integer&gt; arrayList = new ArrayList&lt;&gt;();\n        long startTime = System.nanoTime();\n        for (int i = 0; i &lt; size; i++) {\n            arrayList.add(0, i);  // \u5728\u5f00\u5934\u63d2\u5165\n        }\n        long arrayListTime = System.nanoTime() - startTime;\n\n        // LinkedList\n        LinkedList&lt;Integer&gt; linkedList = new LinkedList&lt;&gt;();\n        startTime = System.nanoTime();\n        for (int i = 0; i &lt; size; i++) {\n            linkedList.addFirst(i);  // \u5728\u5f00\u5934\u63d2\u5165\n        }\n        long linkedListTime = System.nanoTime() - startTime;\n\n        System.out.println(\"\u5728\u5f00\u5934\u63d2\u5165\" + size + \"\u4e2a\u5143\u7d20:\");\n        System.out.println(\"ArrayList: \" + arrayListTime / 1000000 + \"ms\");\n        System.out.println(\"LinkedList: \" + linkedListTime / 1000000 + \"ms\");\n\n        // \u968f\u673a\u8bbf\u95ee\u6027\u80fd\u5bf9\u6bd4\n        startTime = System.nanoTime();\n        for (int i = 0; i &lt; 10000; i++) {\n            arrayList.get(i);\n        }\n        long arrayListAccessTime = System.nanoTime() - startTime;\n\n        startTime = System.nanoTime();\n        for (int i = 0; i &lt; 10000; i++) {\n            linkedList.get(i);\n        }\n        long linkedListAccessTime = System.nanoTime() - startTime;\n\n        System.out.println(\"\\n\u968f\u673a\u8bbf\u95ee\u6027\u80fd\u5bf9\u6bd4:\");\n        System.out.println(\"ArrayList: \" + arrayListAccessTime / 1000000 + \"ms\");\n        System.out.println(\"LinkedList: \" + linkedListAccessTime / 1000000 + \"ms\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-collections/#set","title":"\u4e09\u3001Set \u63a5\u53e3\u53ca\u5176\u5b9e\u73b0","text":""},{"location":"cs_base/language/java/java-collections/#31-hashset","title":"3.1 HashSet","text":"Java<pre><code>import java.util.*;\n\npublic class HashSetDemo {\n    public static void main(String[] args) {\n        System.out.println(\"=== HashSet \u8be6\u89e3 ===\");\n\n        // \u57fa\u672c\u64cd\u4f5c\n        basicOperations();\n\n        // \u53bb\u91cd\u7279\u6027\n        duplicateRemoval();\n\n        // \u81ea\u5b9a\u4e49\u5bf9\u8c61\u7684HashSet\n        customObjectHashSet();\n\n        // \u6027\u80fd\u7279\u70b9\n        performanceCharacteristics();\n    }\n\n    public static void basicOperations() {\n        System.out.println(\"\\n--- \u57fa\u672c\u64cd\u4f5c ---\");\n\n        HashSet&lt;String&gt; set = new HashSet&lt;&gt;();\n\n        // \u6dfb\u52a0\u5143\u7d20\n        set.add(\"Apple\");\n        set.add(\"Banana\");\n        set.add(\"Cherry\");\n        set.add(\"Apple\");  // \u91cd\u590d\u5143\u7d20\u4e0d\u4f1a\u88ab\u6dfb\u52a0\n        System.out.println(\"\u6dfb\u52a0\u5143\u7d20\u540e: \" + set);\n\n        // \u67e5\u8be2\u64cd\u4f5c\n        System.out.println(\"\u96c6\u5408\u5927\u5c0f: \" + set.size());\n        System.out.println(\"\u662f\u5426\u5305\u542bApple: \" + set.contains(\"Apple\"));\n        System.out.println(\"\u662f\u5426\u4e3a\u7a7a: \" + set.isEmpty());\n\n        // \u5220\u9664\u64cd\u4f5c\n        boolean removed = set.remove(\"Banana\");\n        System.out.println(\"\u5220\u9664Banana: \" + removed + \", \u7ed3\u679c: \" + set);\n\n        // \u96c6\u5408\u8fd0\u7b97\n        HashSet&lt;String&gt; otherSet = new HashSet&lt;&gt;(Arrays.asList(\"Apple\", \"Date\", \"Elderberry\"));\n\n        // \u4ea4\u96c6\n        HashSet&lt;String&gt; intersection = new HashSet&lt;&gt;(set);\n        intersection.retainAll(otherSet);\n        System.out.println(\"\u4ea4\u96c6: \" + intersection);\n\n        // \u5e76\u96c6\n        HashSet&lt;String&gt; union = new HashSet&lt;&gt;(set);\n        union.addAll(otherSet);\n        System.out.println(\"\u5e76\u96c6: \" + union);\n\n        // \u5dee\u96c6\n        HashSet&lt;String&gt; difference = new HashSet&lt;&gt;(set);\n        difference.removeAll(otherSet);\n        System.out.println(\"\u5dee\u96c6: \" + difference);\n    }\n\n    public static void duplicateRemoval() {\n        System.out.println(\"\\n--- \u53bb\u91cd\u7279\u6027 ---\");\n\n        // \u6570\u7ec4\u53bb\u91cd\n        Integer[] array = {1, 2, 3, 2, 4, 3, 5, 1};\n        HashSet&lt;Integer&gt; uniqueSet = new HashSet&lt;&gt;(Arrays.asList(array));\n        System.out.println(\"\u539f\u6570\u7ec4: \" + Arrays.toString(array));\n        System.out.println(\"\u53bb\u91cd\u540e: \" + uniqueSet);\n\n        // \u8f6c\u56de\u6570\u7ec4\n        Integer[] uniqueArray = uniqueSet.toArray(new Integer[0]);\n        System.out.println(\"\u53bb\u91cd\u6570\u7ec4: \" + Arrays.toString(uniqueArray));\n    }\n\n    public static void customObjectHashSet() {\n        System.out.println(\"\\n--- \u81ea\u5b9a\u4e49\u5bf9\u8c61\u7684HashSet ---\");\n\n        HashSet&lt;Person&gt; personSet = new HashSet&lt;&gt;();\n\n        Person p1 = new Person(\"\u5f20\u4e09\", 25);\n        Person p2 = new Person(\"\u674e\u56db\", 30);\n        Person p3 = new Person(\"\u5f20\u4e09\", 25);  // \u4e0ep1\u76f8\u540c\n\n        personSet.add(p1);\n        personSet.add(p2);\n        personSet.add(p3);\n\n        System.out.println(\"Person\u96c6\u5408\u5927\u5c0f: \" + personSet.size());\n        for (Person p : personSet) {\n            System.out.println(p);\n        }\n    }\n\n    public static void performanceCharacteristics() {\n        System.out.println(\"\\n--- \u6027\u80fd\u7279\u70b9 ---\");\n\n        HashSet&lt;Integer&gt; set = new HashSet&lt;&gt;();\n\n        // \u6dfb\u52a0\u6027\u80fd\n        long startTime = System.nanoTime();\n        for (int i = 0; i &lt; 100000; i++) {\n            set.add(i);\n        }\n        long addTime = System.nanoTime() - startTime;\n\n        // \u67e5\u627e\u6027\u80fd\n        startTime = System.nanoTime();\n        for (int i = 0; i &lt; 100000; i++) {\n            set.contains(i);\n        }\n        long containsTime = System.nanoTime() - startTime;\n\n        System.out.println(\"\u6dfb\u52a010\u4e07\u4e2a\u5143\u7d20\u8017\u65f6: \" + addTime / 1000000 + \"ms\");\n        System.out.println(\"\u67e5\u627e10\u4e07\u6b21\u8017\u65f6: \" + containsTime / 1000000 + \"ms\");\n    }\n}\n\n// \u81ea\u5b9a\u4e49Person\u7c7b\uff0c\u91cd\u5199equals\u548chashCode\nclass Person {\n    private String name;\n    private int age;\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) return true;\n        if (obj == null || getClass() != obj.getClass()) return false;\n        Person person = (Person) obj;\n        return age == person.age &amp;&amp; Objects.equals(name, person.name);\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(name, age);\n    }\n\n    @Override\n    public String toString() {\n        return \"Person{name='\" + name + \"', age=\" + age + \"}\";\n    }\n\n    // getter\u65b9\u6cd5\n    public String getName() { return name; }\n    public int getAge() { return age; }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-collections/#32-treeset","title":"3.2 TreeSet","text":"Java<pre><code>import java.util.*;\n\npublic class TreeSetDemo {\n    public static void main(String[] args) {\n        System.out.println(\"=== TreeSet \u8be6\u89e3 ===\");\n\n        // \u57fa\u672c\u64cd\u4f5c\n        basicOperations();\n\n        // \u6392\u5e8f\u7279\u6027\n        sortingFeatures();\n\n        // \u81ea\u5b9a\u4e49\u6392\u5e8f\n        customSorting();\n\n        // \u8303\u56f4\u64cd\u4f5c\n        rangeOperations();\n    }\n\n    public static void basicOperations() {\n        System.out.println(\"\\n--- \u57fa\u672c\u64cd\u4f5c ---\");\n\n        TreeSet&lt;Integer&gt; treeSet = new TreeSet&lt;&gt;();\n\n        // \u6dfb\u52a0\u5143\u7d20\uff08\u81ea\u52a8\u6392\u5e8f\uff09\n        treeSet.add(5);\n        treeSet.add(2);\n        treeSet.add(8);\n        treeSet.add(1);\n        treeSet.add(9);\n        System.out.println(\"\u6dfb\u52a0\u5143\u7d20\u540e\uff08\u81ea\u52a8\u6392\u5e8f\uff09: \" + treeSet);\n\n        // \u8bbf\u95ee\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n        System.out.println(\"\u6700\u5c0f\u5143\u7d20: \" + treeSet.first());\n        System.out.println(\"\u6700\u5927\u5143\u7d20: \" + treeSet.last());\n\n        // \u5220\u9664\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n        System.out.println(\"\u5220\u9664\u5e76\u8fd4\u56de\u6700\u5c0f\u5143\u7d20: \" + treeSet.pollFirst());\n        System.out.println(\"\u5220\u9664\u5e76\u8fd4\u56de\u6700\u5927\u5143\u7d20: \" + treeSet.pollLast());\n        System.out.println(\"\u5220\u9664\u540e: \" + treeSet);\n    }\n\n    public static void sortingFeatures() {\n        System.out.println(\"\\n--- \u6392\u5e8f\u7279\u6027 ---\");\n\n        // \u5b57\u7b26\u4e32\u7684\u81ea\u7136\u6392\u5e8f\n        TreeSet&lt;String&gt; stringSet = new TreeSet&lt;&gt;();\n        stringSet.addAll(Arrays.asList(\"banana\", \"apple\", \"cherry\", \"date\"));\n        System.out.println(\"\u5b57\u7b26\u4e32\u6392\u5e8f: \" + stringSet);\n\n        // \u6570\u5b57\u7684\u81ea\u7136\u6392\u5e8f\n        TreeSet&lt;Double&gt; numberSet = new TreeSet&lt;&gt;();\n        numberSet.addAll(Arrays.asList(3.14, 2.71, 1.41, 1.73));\n        System.out.println(\"\u6570\u5b57\u6392\u5e8f: \" + numberSet);\n    }\n\n    public static void customSorting() {\n        System.out.println(\"\\n--- \u81ea\u5b9a\u4e49\u6392\u5e8f ---\");\n\n        // \u4f7f\u7528Comparator\u8fdb\u884c\u81ea\u5b9a\u4e49\u6392\u5e8f\n        // 1. \u6309\u5b57\u7b26\u4e32\u957f\u5ea6\u6392\u5e8f\n        TreeSet&lt;String&gt; lengthSortedSet = new TreeSet&lt;&gt;(Comparator.comparing(String::length));\n        lengthSortedSet.addAll(Arrays.asList(\"a\", \"hello\", \"world\", \"java\", \"programming\"));\n        System.out.println(\"\u6309\u957f\u5ea6\u6392\u5e8f: \" + lengthSortedSet);\n\n        // 2. \u9006\u5e8f\u6392\u5e8f\n        TreeSet&lt;Integer&gt; reverseSet = new TreeSet&lt;&gt;(Collections.reverseOrder());\n        reverseSet.addAll(Arrays.asList(1, 5, 3, 9, 2, 7));\n        System.out.println(\"\u9006\u5e8f\u6392\u5e8f: \" + reverseSet);\n\n        // 3. \u81ea\u5b9a\u4e49\u5bf9\u8c61\u6392\u5e8f\n        TreeSet&lt;Student&gt; studentSet = new TreeSet&lt;&gt;(Comparator.comparing(Student::getScore).reversed());\n        studentSet.add(new Student(\"\u5f20\u4e09\", 85));\n        studentSet.add(new Student(\"\u674e\u56db\", 92));\n        studentSet.add(new Student(\"\u738b\u4e94\", 78));\n        studentSet.add(new Student(\"\u8d75\u516d\", 95));\n\n        System.out.println(\"\u5b66\u751f\u6309\u5206\u6570\u964d\u5e8f\u6392\u5e8f:\");\n        for (Student student : studentSet) {\n            System.out.println(student);\n        }\n    }\n\n    public static void rangeOperations() {\n        System.out.println(\"\\n--- \u8303\u56f4\u64cd\u4f5c ---\");\n\n        TreeSet&lt;Integer&gt; set = new TreeSet&lt;&gt;();\n        for (int i = 1; i &lt;= 10; i++) {\n            set.add(i);\n        }\n        System.out.println(\"\u539f\u96c6\u5408: \" + set);\n\n        // \u5b50\u96c6\u64cd\u4f5c\n        System.out.println(\"\u5c0f\u4e8e5\u7684\u5143\u7d20: \" + set.headSet(5));\n        System.out.println(\"\u5927\u4e8e\u7b49\u4e8e7\u7684\u5143\u7d20: \" + set.tailSet(7));\n        System.out.println(\"3\u52308\u4e4b\u95f4\u7684\u5143\u7d20: \" + set.subSet(3, 8));\n\n        // \u67e5\u627e\u64cd\u4f5c\n        System.out.println(\"\u5c0f\u4e8e\u7b49\u4e8e6\u7684\u6700\u5927\u5143\u7d20: \" + set.floor(6));\n        System.out.println(\"\u5927\u4e8e\u7b49\u4e8e6\u7684\u6700\u5c0f\u5143\u7d20: \" + set.ceiling(6));\n        System.out.println(\"\u5c0f\u4e8e6\u7684\u6700\u5927\u5143\u7d20: \" + set.lower(6));\n        System.out.println(\"\u5927\u4e8e6\u7684\u6700\u5c0f\u5143\u7d20: \" + set.higher(6));\n    }\n}\n\nclass Student {\n    private String name;\n    private int score;\n\n    public Student(String name, int score) {\n        this.name = name;\n        this.score = score;\n    }\n\n    public String getName() { return name; }\n    public int getScore() { return score; }\n\n    @Override\n    public String toString() {\n        return \"Student{name='\" + name + \"', score=\" + score + \"}\";\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-collections/#map","title":"\u56db\u3001Map \u63a5\u53e3\u53ca\u5176\u5b9e\u73b0","text":""},{"location":"cs_base/language/java/java-collections/#41-hashmap","title":"4.1 HashMap","text":"Java<pre><code>import java.util.*;\n\npublic class HashMapDemo {\n    public static void main(String[] args) {\n        System.out.println(\"=== HashMap \u8be6\u89e3 ===\");\n\n        // \u57fa\u672c\u64cd\u4f5c\n        basicOperations();\n\n        // \u904d\u5386\u65b9\u5f0f\n        iterationMethods();\n\n        // \u5e38\u7528\u65b9\u6cd5\n        commonMethods();\n\n        // \u6027\u80fd\u7279\u70b9\n        performanceCharacteristics();\n    }\n\n    public static void basicOperations() {\n        System.out.println(\"\\n--- \u57fa\u672c\u64cd\u4f5c ---\");\n\n        HashMap&lt;String, Integer&gt; map = new HashMap&lt;&gt;();\n\n        // \u6dfb\u52a0\u952e\u503c\u5bf9\n        map.put(\"Apple\", 10);\n        map.put(\"Banana\", 20);\n        map.put(\"Cherry\", 15);\n        System.out.println(\"\u6dfb\u52a0\u5143\u7d20\u540e: \" + map);\n\n        // \u83b7\u53d6\u503c\n        Integer appleCount = map.get(\"Apple\");\n        System.out.println(\"Apple\u7684\u6570\u91cf: \" + appleCount);\n\n        // \u83b7\u53d6\u503c\uff08\u5e26\u9ed8\u8ba4\u503c\uff09\n        Integer orangeCount = map.getOrDefault(\"Orange\", 0);\n        System.out.println(\"Orange\u7684\u6570\u91cf\uff08\u9ed8\u8ba4\u503c\uff09: \" + orangeCount);\n\n        // \u68c0\u67e5\u952e\u548c\u503c\n        System.out.println(\"\u662f\u5426\u5305\u542b\u952eApple: \" + map.containsKey(\"Apple\"));\n        System.out.println(\"\u662f\u5426\u5305\u542b\u503c20: \" + map.containsValue(20));\n\n        // \u5220\u9664\u5143\u7d20\n        Integer removedValue = map.remove(\"Banana\");\n        System.out.println(\"\u5220\u9664Banana\uff0c\u8fd4\u56de\u503c: \" + removedValue);\n        System.out.println(\"\u5220\u9664\u540e: \" + map);\n\n        // \u66ff\u6362\u503c\n        map.replace(\"Apple\", 25);\n        System.out.println(\"\u66ff\u6362Apple\u7684\u503c\u540e: \" + map);\n    }\n\n    public static void iterationMethods() {\n        System.out.println(\"\\n--- \u904d\u5386\u65b9\u5f0f ---\");\n\n        Map&lt;String, Integer&gt; map = new HashMap&lt;&gt;();\n        map.put(\"Java\", 25);\n        map.put(\"Python\", 30);\n        map.put(\"JavaScript\", 28);\n        map.put(\"C++\", 35);\n\n        // 1. \u904d\u5386\u952e\n        System.out.println(\"\u904d\u5386\u952e:\");\n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        // 2. \u904d\u5386\u503c\n        System.out.println(\"\\n\u904d\u5386\u503c:\");\n        for (Integer value : map.values()) {\n            System.out.println(\"Value: \" + value);\n        }\n\n        // 3. \u904d\u5386\u952e\u503c\u5bf9\n        System.out.println(\"\\n\u904d\u5386\u952e\u503c\u5bf9:\");\n        for (Map.Entry&lt;String, Integer&gt; entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // 4. \u4f7f\u7528Lambda\u8868\u8fbe\u5f0f\uff08Java 8+\uff09\n        System.out.println(\"\\n\u4f7f\u7528Lambda\u8868\u8fbe\u5f0f:\");\n        map.forEach((key, value) -&gt; System.out.println(key + \" -&gt; \" + value));\n\n        // 5. \u4f7f\u7528Stream API\n        System.out.println(\"\\n\u4f7f\u7528Stream API\u8fc7\u6ee4:\");\n        map.entrySet().stream()\n           .filter(entry -&gt; entry.getValue() &gt; 28)\n           .forEach(entry -&gt; System.out.println(entry.getKey() + \": \" + entry.getValue()));\n    }\n\n    public static void commonMethods() {\n        System.out.println(\"\\n--- \u5e38\u7528\u65b9\u6cd5 ---\");\n\n        HashMap&lt;String, List&lt;String&gt;&gt; groupMap = new HashMap&lt;&gt;();\n\n        // putIfAbsent - \u5982\u679c\u952e\u4e0d\u5b58\u5728\u624d\u6dfb\u52a0\n        groupMap.putIfAbsent(\"fruits\", new ArrayList&lt;&gt;());\n        groupMap.get(\"fruits\").add(\"apple\");\n        groupMap.get(\"fruits\").add(\"banana\");\n\n        groupMap.putIfAbsent(\"vegetables\", new ArrayList&lt;&gt;());\n        groupMap.get(\"vegetables\").add(\"carrot\");\n\n        System.out.println(\"\u5206\u7ec4\u6570\u636e: \" + groupMap);\n\n        // compute - \u8ba1\u7b97\u65b0\u503c\n        HashMap&lt;String, Integer&gt; countMap = new HashMap&lt;&gt;();\n        String[] words = {\"apple\", \"banana\", \"apple\", \"cherry\", \"banana\", \"apple\"};\n\n        for (String word : words) {\n            countMap.compute(word, (key, value) -&gt; (value == null) ? 1 : value + 1);\n        }\n        System.out.println(\"\u5355\u8bcd\u8ba1\u6570: \" + countMap);\n\n        // merge - \u5408\u5e76\u503c\n        HashMap&lt;String, Integer&gt; map1 = new HashMap&lt;&gt;();\n        map1.put(\"a\", 1);\n        map1.put(\"b\", 2);\n\n        HashMap&lt;String, Integer&gt; map2 = new HashMap&lt;&gt;();\n        map2.put(\"b\", 3);\n        map2.put(\"c\", 4);\n\n        // \u5c06map2\u5408\u5e76\u5230map1\u4e2d\n        map2.forEach((key, value) -&gt; map1.merge(key, value, Integer::sum));\n        System.out.println(\"\u5408\u5e76\u540e\u7684map: \" + map1);\n    }\n\n    public static void performanceCharacteristics() {\n        System.out.println(\"\\n--- \u6027\u80fd\u7279\u70b9 ---\");\n\n        HashMap&lt;Integer, String&gt; map = new HashMap&lt;&gt;();\n\n        // \u6d4b\u8bd5\u63d2\u5165\u6027\u80fd\n        long startTime = System.nanoTime();\n        for (int i = 0; i &lt; 100000; i++) {\n            map.put(i, \"Value\" + i);\n        }\n        long insertTime = System.nanoTime() - startTime;\n\n        // \u6d4b\u8bd5\u67e5\u627e\u6027\u80fd\n        startTime = System.nanoTime();\n        for (int i = 0; i &lt; 100000; i++) {\n            map.get(i);\n        }\n        long searchTime = System.nanoTime() - startTime;\n\n        System.out.println(\"\u63d2\u516510\u4e07\u4e2a\u5143\u7d20\u8017\u65f6: \" + insertTime / 1000000 + \"ms\");\n        System.out.println(\"\u67e5\u627e10\u4e07\u6b21\u8017\u65f6: \" + searchTime / 1000000 + \"ms\");\n\n        // \u8d1f\u8f7d\u56e0\u5b50\u7684\u5f71\u54cd\n        System.out.println(\"\\n\u8d1f\u8f7d\u56e0\u5b50\u5bf9\u6027\u80fd\u7684\u5f71\u54cd:\");\n        testLoadFactor(0.5f);\n        testLoadFactor(0.75f);  // \u9ed8\u8ba4\u503c\n        testLoadFactor(1.0f);\n    }\n\n    private static void testLoadFactor(float loadFactor) {\n        HashMap&lt;Integer, String&gt; map = new HashMap&lt;&gt;(16, loadFactor);\n\n        long startTime = System.nanoTime();\n        for (int i = 0; i &lt; 10000; i++) {\n            map.put(i, \"Value\" + i);\n        }\n        long time = System.nanoTime() - startTime;\n\n        System.out.println(\"\u8d1f\u8f7d\u56e0\u5b50 \" + loadFactor + \" \u63d2\u5165\u8017\u65f6: \" + time / 1000000 + \"ms\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-collections/#42-treemap","title":"4.2 TreeMap","text":"Java<pre><code>import java.util.*;\n\npublic class TreeMapDemo {\n    public static void main(String[] args) {\n        System.out.println(\"=== TreeMap \u8be6\u89e3 ===\");\n\n        // \u57fa\u672c\u64cd\u4f5c\n        basicOperations();\n\n        // \u6392\u5e8f\u7279\u6027\n        sortingFeatures();\n\n        // \u8303\u56f4\u64cd\u4f5c\n        rangeOperations();\n\n        // \u5bfc\u822a\u65b9\u6cd5\n        navigationMethods();\n    }\n\n    public static void basicOperations() {\n        System.out.println(\"\\n--- \u57fa\u672c\u64cd\u4f5c ---\");\n\n        TreeMap&lt;String, Integer&gt; treeMap = new TreeMap&lt;&gt;();\n\n        // \u6dfb\u52a0\u5143\u7d20\uff08\u6309\u952e\u81ea\u52a8\u6392\u5e8f\uff09\n        treeMap.put(\"Charlie\", 25);\n        treeMap.put(\"Alice\", 30);\n        treeMap.put(\"Bob\", 28);\n        treeMap.put(\"David\", 35);\n\n        System.out.println(\"\u6dfb\u52a0\u5143\u7d20\u540e\uff08\u6309\u952e\u6392\u5e8f\uff09: \" + treeMap);\n\n        // \u83b7\u53d6\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u952e\u503c\u5bf9\n        System.out.println(\"\u7b2c\u4e00\u4e2a\u952e\u503c\u5bf9: \" + treeMap.firstEntry());\n        System.out.println(\"\u6700\u540e\u4e00\u4e2a\u952e\u503c\u5bf9: \" + treeMap.lastEntry());\n\n        // \u83b7\u53d6\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u952e\n        System.out.println(\"\u7b2c\u4e00\u4e2a\u952e: \" + treeMap.firstKey());\n        System.out.println(\"\u6700\u540e\u4e00\u4e2a\u952e: \" + treeMap.lastKey());\n    }\n\n    public static void sortingFeatures() {\n        System.out.println(\"\\n--- \u6392\u5e8f\u7279\u6027 ---\");\n\n        // \u81ea\u7136\u6392\u5e8f\uff08\u5b57\u7b26\u4e32\uff09\n        TreeMap&lt;String, String&gt; naturalOrder = new TreeMap&lt;&gt;();\n        naturalOrder.put(\"zebra\", \"\u6591\u9a6c\");\n        naturalOrder.put(\"apple\", \"\u82f9\u679c\");\n        naturalOrder.put(\"banana\", \"\u9999\u8549\");\n        System.out.println(\"\u81ea\u7136\u6392\u5e8f: \" + naturalOrder);\n\n        // \u81ea\u5b9a\u4e49\u6392\u5e8f\uff08\u6309\u952e\u957f\u5ea6\uff09\n        TreeMap&lt;String, String&gt; lengthOrder = new TreeMap&lt;&gt;(Comparator.comparing(String::length));\n        lengthOrder.put(\"a\", \"\u77ed\");\n        lengthOrder.put(\"hello\", \"\u4e2d\u7b49\");\n        lengthOrder.put(\"programming\", \"\u957f\");\n        System.out.println(\"\u6309\u957f\u5ea6\u6392\u5e8f: \" + lengthOrder);\n\n        // \u9006\u5e8f\u6392\u5e8f\n        TreeMap&lt;Integer, String&gt; reverseOrder = new TreeMap&lt;&gt;(Collections.reverseOrder());\n        reverseOrder.put(1, \"\u4e00\");\n        reverseOrder.put(3, \"\u4e09\");\n        reverseOrder.put(2, \"\u4e8c\");\n        reverseOrder.put(5, \"\u4e94\");\n        System.out.println(\"\u9006\u5e8f\u6392\u5e8f: \" + reverseOrder);\n    }\n\n    public static void rangeOperations() {\n        System.out.println(\"\\n--- \u8303\u56f4\u64cd\u4f5c ---\");\n\n        TreeMap&lt;Integer, String&gt; map = new TreeMap&lt;&gt;();\n        for (int i = 1; i &lt;= 10; i++) {\n            map.put(i, \"Value\" + i);\n        }\n        System.out.println(\"\u539fMap: \" + map);\n\n        // \u5b50Map\u64cd\u4f5c\n        System.out.println(\"\u952e\u5c0f\u4e8e5\u7684\u5b50Map: \" + map.headMap(5));\n        System.out.println(\"\u952e\u5927\u4e8e\u7b49\u4e8e7\u7684\u5b50Map: \" + map.tailMap(7));\n        System.out.println(\"\u952e\u57283\u52308\u4e4b\u95f4\u7684\u5b50Map: \" + map.subMap(3, 8));\n\n        // \u5305\u542b\u8fb9\u754c\u7684\u5b50Map\n        System.out.println(\"\u952e\u57283\u52308\u4e4b\u95f4\uff08\u5305\u542b8\uff09: \" + map.subMap(3, true, 8, true));\n    }\n\n    public static void navigationMethods() {\n        System.out.println(\"\\n--- \u5bfc\u822a\u65b9\u6cd5 ---\");\n\n        TreeMap&lt;Integer, String&gt; map = new TreeMap&lt;&gt;();\n        int[] keys = {1, 3, 5, 7, 9, 11, 13, 15};\n        for (int key : keys) {\n            map.put(key, \"Value\" + key);\n        }\n        System.out.println(\"\u539fMap: \" + map);\n\n        int searchKey = 8;\n        System.out.println(\"\\n\u67e5\u627e\u952e: \" + searchKey);\n\n        // \u67e5\u627e\u64cd\u4f5c\n        System.out.println(\"\u5c0f\u4e8e\u7b49\u4e8e\" + searchKey + \"\u7684\u6700\u5927\u952e: \" + map.floorKey(searchKey));\n        System.out.println(\"\u5927\u4e8e\u7b49\u4e8e\" + searchKey + \"\u7684\u6700\u5c0f\u952e: \" + map.ceilingKey(searchKey));\n        System.out.println(\"\u5c0f\u4e8e\" + searchKey + \"\u7684\u6700\u5927\u952e: \" + map.lowerKey(searchKey));\n        System.out.println(\"\u5927\u4e8e\" + searchKey + \"\u7684\u6700\u5c0f\u952e: \" + map.higherKey(searchKey));\n\n        // \u5bf9\u5e94\u7684Entry\u64cd\u4f5c\n        System.out.println(\"\\n\u5bf9\u5e94\u7684Entry\u64cd\u4f5c:\");\n        System.out.println(\"floorEntry: \" + map.floorEntry(searchKey));\n        System.out.println(\"ceilingEntry: \" + map.ceilingEntry(searchKey));\n        System.out.println(\"lowerEntry: \" + map.lowerEntry(searchKey));\n        System.out.println(\"higherEntry: \" + map.higherEntry(searchKey));\n\n        // \u5220\u9664\u5e76\u8fd4\u56de\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\n        System.out.println(\"\\n\u5220\u9664\u64cd\u4f5c:\");\n        System.out.println(\"\u5220\u9664\u5e76\u8fd4\u56de\u7b2c\u4e00\u4e2a: \" + map.pollFirstEntry());\n        System.out.println(\"\u5220\u9664\u5e76\u8fd4\u56de\u6700\u540e\u4e00\u4e2a: \" + map.pollLastEntry());\n        System.out.println(\"\u5220\u9664\u540e: \" + map);\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-collections/#_2","title":"\u4e94\u3001\u96c6\u5408\u9009\u62e9\u6307\u5357","text":""},{"location":"cs_base/language/java/java-collections/#51","title":"5.1 \u96c6\u5408\u9009\u62e9\u51b3\u7b56\u6811","text":"Java<pre><code>import java.util.*;\nimport java.util.concurrent.CopyOnWriteArrayList;\n\npublic class CollectionSelectionGuide {\n    public static void main(String[] args) {\n        System.out.println(\"=== \u96c6\u5408\u9009\u62e9\u6307\u5357 ===\");\n\n        // \u6f14\u793a\u4e0d\u540c\u573a\u666f\u4e0b\u7684\u96c6\u5408\u9009\u62e9\n        demonstrateListSelection();\n        demonstrateSetSelection();\n        demonstrateMapSelection();\n        demonstrateQueueSelection();\n\n        // \u6027\u80fd\u5bf9\u6bd4\n        performanceComparison();\n    }\n\n    public static void demonstrateListSelection() {\n        System.out.println(\"\\n--- List \u9009\u62e9\u6307\u5357 ---\");\n\n        // \u573a\u666f1\uff1a\u9891\u7e41\u968f\u673a\u8bbf\u95ee\n        System.out.println(\"\u573a\u666f1\uff1a\u9891\u7e41\u968f\u673a\u8bbf\u95ee -&gt; \u9009\u62e9ArrayList\");\n        List&lt;Integer&gt; arrayList = new ArrayList&lt;&gt;();\n        // ArrayList \u63d0\u4f9b O(1) \u7684\u968f\u673a\u8bbf\u95ee\n\n        // \u573a\u666f2\uff1a\u9891\u7e41\u5728\u5f00\u5934/\u4e2d\u95f4\u63d2\u5165\u5220\u9664\n        System.out.println(\"\u573a\u666f2\uff1a\u9891\u7e41\u5728\u5f00\u5934/\u4e2d\u95f4\u63d2\u5165\u5220\u9664 -&gt; \u9009\u62e9LinkedList\");\n        List&lt;Integer&gt; linkedList = new LinkedList&lt;&gt;();\n        // LinkedList \u63d0\u4f9b O(1) \u7684\u63d2\u5165\u5220\u9664\uff08\u5982\u679c\u6709\u5f15\u7528\uff09\n\n        // \u573a\u666f3\uff1a\u7ebf\u7a0b\u5b89\u5168\u9700\u6c42\n        System.out.println(\"\u573a\u666f3\uff1a\u7ebf\u7a0b\u5b89\u5168 -&gt; \u9009\u62e9Vector\u6216Collections.synchronizedList\");\n        List&lt;Integer&gt; syncList = Collections.synchronizedList(new ArrayList&lt;&gt;());\n        Vector&lt;Integer&gt; vector = new Vector&lt;&gt;();\n\n        // \u573a\u666f4\uff1a\u8bfb\u591a\u5199\u5c11\u7684\u5e76\u53d1\u573a\u666f\n        System.out.println(\"\u573a\u666f4\uff1a\u8bfb\u591a\u5199\u5c11\u5e76\u53d1 -&gt; \u9009\u62e9CopyOnWriteArrayList\");\n        List&lt;Integer&gt; cowList = new CopyOnWriteArrayList&lt;&gt;();\n    }\n\n    public static void demonstrateSetSelection() {\n        System.out.println(\"\\n--- Set \u9009\u62e9\u6307\u5357 ---\");\n\n        // \u573a\u666f1\uff1a\u5feb\u901f\u67e5\u627e\uff0c\u4e0d\u9700\u8981\u6392\u5e8f\n        System.out.println(\"\u573a\u666f1\uff1a\u5feb\u901f\u67e5\u627e\uff0c\u65e0\u5e8f -&gt; \u9009\u62e9HashSet\");\n        Set&lt;String&gt; hashSet = new HashSet&lt;&gt;();\n        // HashSet \u63d0\u4f9b O(1) \u7684\u67e5\u627e\u6027\u80fd\n\n        // \u573a\u666f2\uff1a\u9700\u8981\u4fdd\u6301\u63d2\u5165\u987a\u5e8f\n        System.out.println(\"\u573a\u666f2\uff1a\u4fdd\u6301\u63d2\u5165\u987a\u5e8f -&gt; \u9009\u62e9LinkedHashSet\");\n        Set&lt;String&gt; linkedHashSet = new LinkedHashSet&lt;&gt;();\n\n        // \u573a\u666f3\uff1a\u9700\u8981\u6392\u5e8f\n        System.out.println(\"\u573a\u666f3\uff1a\u9700\u8981\u6392\u5e8f -&gt; \u9009\u62e9TreeSet\");\n        Set&lt;String&gt; treeSet = new TreeSet&lt;&gt;();\n        // TreeSet \u63d0\u4f9b O(log n) \u7684\u64cd\u4f5c\uff0c\u4f46\u5143\u7d20\u6709\u5e8f\n\n        // \u573a\u666f4\uff1a\u679a\u4e3e\u7c7b\u578b\n        System.out.println(\"\u573a\u666f4\uff1a\u679a\u4e3e\u7c7b\u578b -&gt; \u9009\u62e9EnumSet\");\n        Set&lt;DayOfWeek&gt; enumSet = EnumSet.allOf(DayOfWeek.class);\n    }\n\n    public static void demonstrateMapSelection() {\n        System.out.println(\"\\n--- Map \u9009\u62e9\u6307\u5357 ---\");\n\n        // \u573a\u666f1\uff1a\u4e00\u822c\u7528\u9014\uff0c\u9ad8\u6027\u80fd\n        System.out.println(\"\u573a\u666f1\uff1a\u4e00\u822c\u7528\u9014\uff0c\u9ad8\u6027\u80fd -&gt; \u9009\u62e9HashMap\");\n        Map&lt;String, Integer&gt; hashMap = new HashMap&lt;&gt;();\n\n        // \u573a\u666f2\uff1a\u9700\u8981\u4fdd\u6301\u63d2\u5165\u987a\u5e8f\n        System.out.println(\"\u573a\u666f2\uff1a\u4fdd\u6301\u63d2\u5165\u987a\u5e8f -&gt; \u9009\u62e9LinkedHashMap\");\n        Map&lt;String, Integer&gt; linkedHashMap = new LinkedHashMap&lt;&gt;();\n\n        // \u573a\u666f3\uff1a\u9700\u8981\u6392\u5e8f\n        System.out.println(\"\u573a\u666f3\uff1a\u9700\u8981\u6392\u5e8f -&gt; \u9009\u62e9TreeMap\");\n        Map&lt;String, Integer&gt; treeMap = new TreeMap&lt;&gt;();\n\n        // \u573a\u666f4\uff1a\u7ebf\u7a0b\u5b89\u5168\n        System.out.println(\"\u573a\u666f4\uff1a\u7ebf\u7a0b\u5b89\u5168 -&gt; \u9009\u62e9ConcurrentHashMap\");\n        // Map&lt;String, Integer&gt; concurrentMap = new ConcurrentHashMap&lt;&gt;();\n\n        // \u573a\u666f5\uff1a\u679a\u4e3e\u952e\n        System.out.println(\"\u573a\u666f5\uff1a\u679a\u4e3e\u952e -&gt; \u9009\u62e9EnumMap\");\n        Map&lt;DayOfWeek, String&gt; enumMap = new EnumMap&lt;&gt;(DayOfWeek.class);\n    }\n\n    public static void demonstrateQueueSelection() {\n        System.out.println(\"\\n--- Queue \u9009\u62e9\u6307\u5357 ---\");\n\n        // \u573a\u666f1\uff1aFIFO\u961f\u5217\n        System.out.println(\"\u573a\u666f1\uff1aFIFO\u961f\u5217 -&gt; \u9009\u62e9LinkedList\u6216ArrayDeque\");\n        Queue&lt;String&gt; fifoQueue = new LinkedList&lt;&gt;();\n        Queue&lt;String&gt; arrayDeque = new ArrayDeque&lt;&gt;();\n\n        // \u573a\u666f2\uff1a\u4f18\u5148\u7ea7\u961f\u5217\n        System.out.println(\"\u573a\u666f2\uff1a\u4f18\u5148\u7ea7\u961f\u5217 -&gt; \u9009\u62e9PriorityQueue\");\n        Queue&lt;Integer&gt; priorityQueue = new PriorityQueue&lt;&gt;();\n\n        // \u573a\u666f3\uff1a\u53cc\u7aef\u961f\u5217\n        System.out.println(\"\u573a\u666f3\uff1a\u53cc\u7aef\u961f\u5217 -&gt; \u9009\u62e9ArrayDeque\");\n        Deque&lt;String&gt; deque = new ArrayDeque&lt;&gt;();\n    }\n\n    public static void performanceComparison() {\n        System.out.println(\"\\n--- \u6027\u80fd\u5bf9\u6bd4 ---\");\n\n        int size = 100000;\n\n        // List \u6027\u80fd\u5bf9\u6bd4\n        System.out.println(\"\\nList \u6dfb\u52a0\u6027\u80fd\u5bf9\u6bd4\uff08\u5728\u672b\u5c3e\u6dfb\u52a0\uff09:\");\n        testListAddPerformance(new ArrayList&lt;&gt;(), \"ArrayList\", size);\n        testListAddPerformance(new LinkedList&lt;&gt;(), \"LinkedList\", size);\n        testListAddPerformance(new Vector&lt;&gt;(), \"Vector\", size);\n\n        // Set \u6027\u80fd\u5bf9\u6bd4\n        System.out.println(\"\\nSet \u6dfb\u52a0\u6027\u80fd\u5bf9\u6bd4:\");\n        testSetAddPerformance(new HashSet&lt;&gt;(), \"HashSet\", size);\n        testSetAddPerformance(new LinkedHashSet&lt;&gt;(), \"LinkedHashSet\", size);\n        testSetAddPerformance(new TreeSet&lt;&gt;(), \"TreeSet\", size);\n\n        // Map \u6027\u80fd\u5bf9\u6bd4\n        System.out.println(\"\\nMap \u6dfb\u52a0\u6027\u80fd\u5bf9\u6bd4:\");\n        testMapPutPerformance(new HashMap&lt;&gt;(), \"HashMap\", size);\n        testMapPutPerformance(new LinkedHashMap&lt;&gt;(), \"LinkedHashMap\", size);\n        testMapPutPerformance(new TreeMap&lt;&gt;(), \"TreeMap\", size);\n    }\n\n    private static void testListAddPerformance(List&lt;Integer&gt; list, String name, int size) {\n        long startTime = System.nanoTime();\n        for (int i = 0; i &lt; size; i++) {\n            list.add(i);\n        }\n        long endTime = System.nanoTime();\n        System.out.println(name + \": \" + (endTime - startTime) / 1000000 + \"ms\");\n    }\n\n    private static void testSetAddPerformance(Set&lt;Integer&gt; set, String name, int size) {\n        long startTime = System.nanoTime();\n        for (int i = 0; i &lt; size; i++) {\n            set.add(i);\n        }\n        long endTime = System.nanoTime();\n        System.out.println(name + \": \" + (endTime - startTime) / 1000000 + \"ms\");\n    }\n\n    private static void testMapPutPerformance(Map&lt;Integer, String&gt; map, String name, int size) {\n        long startTime = System.nanoTime();\n        for (int i = 0; i &lt; size; i++) {\n            map.put(i, \"Value\" + i);\n        }\n        long endTime = System.nanoTime();\n        System.out.println(name + \": \" + (endTime - startTime) / 1000000 + \"ms\");\n    }\n}\n\n// \u793a\u4f8b\u679a\u4e3e\nenum DayOfWeek {\n    MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY\n}\n</code></pre>"},{"location":"cs_base/language/java/java-collections/#52","title":"5.2 \u96c6\u5408\u9009\u62e9\u51b3\u7b56\u8868","text":"Java<pre><code>public class CollectionDecisionTable {\n    public static void main(String[] args) {\n        printCollectionDecisionTable();\n    }\n\n    public static void printCollectionDecisionTable() {\n        System.out.println(\"=== \u96c6\u5408\u9009\u62e9\u51b3\u7b56\u8868 ===\");\n\n        System.out.println(\"\\n\u3010List \u9009\u62e9\u3011\");\n        System.out.println(\"\u9700\u6c42\u573a\u666f                    | \u63a8\u8350\u9009\u62e9        | \u65f6\u95f4\u590d\u6742\u5ea6     | \u8bf4\u660e\");\n        System.out.println(\"---------------------------|---------------|-------------|------------------\");\n        System.out.println(\"\u9891\u7e41\u968f\u673a\u8bbf\u95ee                 | ArrayList     | get: O(1)   | \u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\");\n        System.out.println(\"\u9891\u7e41\u5728\u5f00\u5934/\u4e2d\u95f4\u63d2\u5165\u5220\u9664        | LinkedList    | add: O(1)*  | \u57fa\u4e8e\u94fe\u8868\u5b9e\u73b0\");\n        System.out.println(\"\u9700\u8981\u7ebf\u7a0b\u5b89\u5168                 | Vector        | \u540cArrayList  | \u540c\u6b65\u65b9\u6cd5\");\n        System.out.println(\"\u8bfb\u591a\u5199\u5c11\u7684\u5e76\u53d1\u573a\u666f            | CopyOnWrite   | read: O(1)  | \u5199\u65f6\u590d\u5236\");\n\n        System.out.println(\"\\n\u3010Set \u9009\u62e9\u3011\");\n        System.out.println(\"\u9700\u6c42\u573a\u666f                    | \u63a8\u8350\u9009\u62e9        | \u65f6\u95f4\u590d\u6742\u5ea6     | \u8bf4\u660e\");\n        System.out.println(\"---------------------------|---------------|-------------|------------------\");\n        System.out.println(\"\u5feb\u901f\u67e5\u627e\uff0c\u65e0\u5e8f\u8981\u6c42            | HashSet       | O(1)        | \u57fa\u4e8e\u54c8\u5e0c\u8868\");\n        System.out.println(\"\u4fdd\u6301\u63d2\u5165\u987a\u5e8f                 | LinkedHashSet | O(1)        | \u54c8\u5e0c\u8868+\u94fe\u8868\");\n        System.out.println(\"\u9700\u8981\u6392\u5e8f                    | TreeSet       | O(log n)    | \u57fa\u4e8e\u7ea2\u9ed1\u6811\");\n        System.out.println(\"\u679a\u4e3e\u7c7b\u578b                    | EnumSet       | O(1)        | \u4f4d\u5411\u91cf\u5b9e\u73b0\");\n\n        System.out.println(\"\\n\u3010Map \u9009\u62e9\u3011\");\n        System.out.println(\"\u9700\u6c42\u573a\u666f                    | \u63a8\u8350\u9009\u62e9        | \u65f6\u95f4\u590d\u6742\u5ea6     | \u8bf4\u660e\");\n        System.out.println(\"---------------------------|---------------|-------------|------------------\");\n        System.out.println(\"\u4e00\u822c\u7528\u9014\uff0c\u9ad8\u6027\u80fd              | HashMap       | O(1)        | \u57fa\u4e8e\u54c8\u5e0c\u8868\");\n        System.out.println(\"\u4fdd\u6301\u63d2\u5165\u987a\u5e8f                 | LinkedHashMap | O(1)        | \u54c8\u5e0c\u8868+\u94fe\u8868\");\n        System.out.println(\"\u9700\u8981\u6392\u5e8f                    | TreeMap       | O(log n)    | \u57fa\u4e8e\u7ea2\u9ed1\u6811\");\n        System.out.println(\"\u7ebf\u7a0b\u5b89\u5168                    | ConcurrentMap | O(1)        | \u5206\u6bb5\u9501\");\n        System.out.println(\"\u679a\u4e3e\u952e                      | EnumMap       | O(1)        | \u6570\u7ec4\u5b9e\u73b0\");\n\n        System.out.println(\"\\n\u3010Queue \u9009\u62e9\u3011\");\n        System.out.println(\"\u9700\u6c42\u573a\u666f                    | \u63a8\u8350\u9009\u62e9        | \u65f6\u95f4\u590d\u6742\u5ea6     | \u8bf4\u660e\");\n        System.out.println(\"---------------------------|---------------|-------------|------------------\");\n        System.out.println(\"FIFO\u961f\u5217                   | ArrayDeque    | O(1)        | \u5faa\u73af\u6570\u7ec4\");\n        System.out.println(\"\u53cc\u7aef\u961f\u5217                    | ArrayDeque    | O(1)        | \u4e24\u7aef\u64cd\u4f5c\");\n        System.out.println(\"\u4f18\u5148\u7ea7\u961f\u5217                  | PriorityQueue | O(log n)    | \u57fa\u4e8e\u5806\");\n        System.out.println(\"\u7ebf\u7a0b\u5b89\u5168\u961f\u5217                | BlockingQueue | varies      | \u963b\u585e\u961f\u5217\");\n\n        System.out.println(\"\\n\u3010\u5185\u5b58\u4f7f\u7528\u5bf9\u6bd4\u3011\");\n        System.out.println(\"\u96c6\u5408\u7c7b\u578b        | \u5185\u5b58\u5f00\u9500    | \u8bf4\u660e\");\n        System.out.println(\"---------------|-----------|---------------------------\");\n        System.out.println(\"ArrayList      | \u4f4e        | \u53ea\u5b58\u50a8\u5143\u7d20\u6570\u7ec4\");\n        System.out.println(\"LinkedList     | \u9ad8        | \u6bcf\u4e2a\u8282\u70b9\u989d\u5916\u5b58\u50a8\u524d\u540e\u6307\u9488\");\n        System.out.println(\"HashSet        | \u4e2d        | \u57fa\u4e8eHashMap\u5b9e\u73b0\");\n        System.out.println(\"TreeSet        | \u4e2d        | \u7ea2\u9ed1\u6811\u8282\u70b9\u5f00\u9500\");\n        System.out.println(\"HashMap        | \u4e2d        | \u54c8\u5e0c\u8868+\u94fe\u8868/\u7ea2\u9ed1\u6811\");\n        System.out.println(\"TreeMap        | \u9ad8        | \u7ea2\u9ed1\u6811\u8282\u70b9\u5f00\u9500\u8f83\u5927\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-collections/#_3","title":"\u516d\u3001\u96c6\u5408\u904d\u5386\u65b9\u6cd5","text":""},{"location":"cs_base/language/java/java-collections/#61","title":"6.1 \u4f20\u7edf\u904d\u5386\u65b9\u5f0f","text":"Java<pre><code>import java.util.*;\n\npublic class CollectionIterationDemo {\n    public static void main(String[] args) {\n        System.out.println(\"=== \u96c6\u5408\u904d\u5386\u65b9\u6cd5 ===\");\n\n        // List \u904d\u5386\n        demonstrateListIteration();\n\n        // Set \u904d\u5386\n        demonstrateSetIteration();\n\n        // Map \u904d\u5386\n        demonstrateMapIteration();\n\n        // Iterator \u7684\u9ad8\u7ea7\u7528\u6cd5\n        demonstrateIteratorAdvanced();\n    }\n\n    public static void demonstrateListIteration() {\n        System.out.println(\"\\n--- List \u904d\u5386\u65b9\u5f0f ---\");\n\n        List&lt;String&gt; list = Arrays.asList(\"Apple\", \"Banana\", \"Cherry\", \"Date\");\n\n        // 1. \u4f20\u7edffor\u5faa\u73af\n        System.out.println(\"1. \u4f20\u7edffor\u5faa\u73af:\");\n        for (int i = 0; i &lt; list.size(); i++) {\n            System.out.println(\"Index \" + i + \": \" + list.get(i));\n        }\n\n        // 2. \u589e\u5f3afor\u5faa\u73af\uff08for-each\uff09\n        System.out.println(\"\\n2. \u589e\u5f3afor\u5faa\u73af:\");\n        for (String item : list) {\n            System.out.println(\"Item: \" + item);\n        }\n\n        // 3. Iterator\n        System.out.println(\"\\n3. Iterator:\");\n        Iterator&lt;String&gt; iterator = list.iterator();\n        while (iterator.hasNext()) {\n            String item = iterator.next();\n            System.out.println(\"Item: \" + item);\n        }\n\n        // 4. ListIterator\uff08\u53cc\u5411\u904d\u5386\uff09\n        System.out.println(\"\\n4. ListIterator\uff08\u53cd\u5411\u904d\u5386\uff09:\");\n        ListIterator&lt;String&gt; listIterator = list.listIterator(list.size());\n        while (listIterator.hasPrevious()) {\n            String item = listIterator.previous();\n            System.out.println(\"Item: \" + item);\n        }\n\n        // 5. Stream API\uff08Java 8+\uff09\n        System.out.println(\"\\n5. Stream API:\");\n        list.stream().forEach(item -&gt; System.out.println(\"Item: \" + item));\n    }\n\n    public static void demonstrateSetIteration() {\n        System.out.println(\"\\n--- Set \u904d\u5386\u65b9\u5f0f ---\");\n\n        Set&lt;String&gt; set = new HashSet&lt;&gt;(Arrays.asList(\"Apple\", \"Banana\", \"Cherry\", \"Date\"));\n\n        // 1. \u589e\u5f3afor\u5faa\u73af\n        System.out.println(\"1. \u589e\u5f3afor\u5faa\u73af:\");\n        for (String item : set) {\n            System.out.println(\"Item: \" + item);\n        }\n\n        // 2. Iterator\n        System.out.println(\"\\n2. Iterator:\");\n        Iterator&lt;String&gt; iterator = set.iterator();\n        while (iterator.hasNext()) {\n            String item = iterator.next();\n            System.out.println(\"Item: \" + item);\n        }\n\n        // 3. Stream API\n        System.out.println(\"\\n3. Stream API:\");\n        set.stream().forEach(item -&gt; System.out.println(\"Item: \" + item));\n\n        // 4. \u8fc7\u6ee4\u904d\u5386\n        System.out.println(\"\\n4. \u8fc7\u6ee4\u904d\u5386\uff08\u4ee5A\u5f00\u5934\uff09:\");\n        set.stream()\n           .filter(item -&gt; item.startsWith(\"A\"))\n           .forEach(item -&gt; System.out.println(\"Filtered: \" + item));\n    }\n\n    public static void demonstrateMapIteration() {\n        System.out.println(\"\\n--- Map \u904d\u5386\u65b9\u5f0f ---\");\n\n        Map&lt;String, Integer&gt; map = new HashMap&lt;&gt;();\n        map.put(\"Apple\", 10);\n        map.put(\"Banana\", 20);\n        map.put(\"Cherry\", 15);\n        map.put(\"Date\", 25);\n\n        // 1. \u904d\u5386\u952e\n        System.out.println(\"1. \u904d\u5386\u952e:\");\n        for (String key : map.keySet()) {\n            System.out.println(\"Key: \" + key + \", Value: \" + map.get(key));\n        }\n\n        // 2. \u904d\u5386\u503c\n        System.out.println(\"\\n2. \u904d\u5386\u503c:\");\n        for (Integer value : map.values()) {\n            System.out.println(\"Value: \" + value);\n        }\n\n        // 3. \u904d\u5386\u952e\u503c\u5bf9\n        System.out.println(\"\\n3. \u904d\u5386\u952e\u503c\u5bf9:\");\n        for (Map.Entry&lt;String, Integer&gt; entry : map.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // 4. \u4f7f\u7528Iterator\u904d\u5386\u952e\u503c\u5bf9\n        System.out.println(\"\\n4. \u4f7f\u7528Iterator\u904d\u5386\u952e\u503c\u5bf9:\");\n        Iterator&lt;Map.Entry&lt;String, Integer&gt;&gt; iterator = map.entrySet().iterator();\n        while (iterator.hasNext()) {\n            Map.Entry&lt;String, Integer&gt; entry = iterator.next();\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n\n        // 5. Lambda\u8868\u8fbe\u5f0f\uff08Java 8+\uff09\n        System.out.println(\"\\n5. Lambda\u8868\u8fbe\u5f0f:\");\n        map.forEach((key, value) -&gt; System.out.println(key + \" -&gt; \" + value));\n\n        // 6. Stream API \u590d\u6742\u64cd\u4f5c\n        System.out.println(\"\\n6. Stream API \u590d\u6742\u64cd\u4f5c\uff08\u503c\u5927\u4e8e15\uff09:\");\n        map.entrySet().stream()\n           .filter(entry -&gt; entry.getValue() &gt; 15)\n           .sorted(Map.Entry.comparingByValue())\n           .forEach(entry -&gt; System.out.println(entry.getKey() + \": \" + entry.getValue()));\n    }\n\n    public static void demonstrateIteratorAdvanced() {\n        System.out.println(\"\\n--- Iterator \u9ad8\u7ea7\u7528\u6cd5 ---\");\n\n        // \u5b89\u5168\u5220\u9664\u5143\u7d20\n        List&lt;String&gt; list = new ArrayList&lt;&gt;(Arrays.asList(\"A\", \"B\", \"C\", \"D\", \"E\"));\n        System.out.println(\"\u539f\u5217\u8868: \" + list);\n\n        // \u9519\u8bef\u7684\u5220\u9664\u65b9\u5f0f\uff08\u4f1a\u629b\u51faConcurrentModificationException\uff09\n        // for (String item : list) {\n        //     if (item.equals(\"C\")) {\n        //         list.remove(item);  // \u9519\u8bef\uff01\n        //     }\n        // }\n\n        // \u6b63\u786e\u7684\u5220\u9664\u65b9\u5f0f\n        Iterator&lt;String&gt; iterator = list.iterator();\n        while (iterator.hasNext()) {\n            String item = iterator.next();\n            if (item.equals(\"C\")) {\n                iterator.remove();  // \u6b63\u786e\uff01\n            }\n        }\n        System.out.println(\"\u5220\u9664C\u540e: \" + list);\n\n        // ListIterator \u7684\u53cc\u5411\u904d\u5386\u548c\u4fee\u6539\n        List&lt;Integer&gt; numbers = new ArrayList&lt;&gt;(Arrays.asList(1, 2, 3, 4, 5));\n        System.out.println(\"\\n\u539f\u6570\u5b57\u5217\u8868: \" + numbers);\n\n        ListIterator&lt;Integer&gt; listIterator = numbers.listIterator();\n        while (listIterator.hasNext()) {\n            Integer num = listIterator.next();\n            if (num % 2 == 0) {\n                listIterator.set(num * 10);  // \u5076\u6570\u4e58\u4ee510\n            }\n            if (num == 3) {\n                listIterator.add(99);  // \u57283\u540e\u9762\u6dfb\u52a099\n            }\n        }\n        System.out.println(\"\u4fee\u6539\u540e: \" + numbers);\n\n        // \u53cd\u5411\u904d\u5386\n        System.out.println(\"\\n\u53cd\u5411\u904d\u5386:\");\n        while (listIterator.hasPrevious()) {\n            System.out.println(\"Previous: \" + listIterator.previous());\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-collections/#_4","title":"\u603b\u7ed3","text":"<p>Java \u96c6\u5408\u6846\u67b6\u662f Java \u7f16\u7a0b\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u638c\u63e1\u5176\u4f7f\u7528\u65b9\u6cd5\u548c\u6700\u4f73\u5b9e\u8df5\u5bf9\u4e8e\u7f16\u5199\u9ad8\u6548\u3001\u53ef\u7ef4\u62a4\u7684\u4ee3\u7801\u81f3\u5173\u91cd\u8981\u3002</p>"},{"location":"cs_base/language/java/java-collections/#_5","title":"\u5173\u952e\u8981\u70b9","text":"<ol> <li>\u9009\u62e9\u5408\u9002\u7684\u96c6\u5408\u7c7b\u578b\uff1a\u6839\u636e\u5177\u4f53\u9700\u6c42\u9009\u62e9 List\u3001Set\u3001Map \u6216 Queue</li> <li>\u6027\u80fd\u8003\u8651\uff1a\u4e86\u89e3\u4e0d\u540c\u5b9e\u73b0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u9002\u7528\u573a\u666f</li> <li>\u7ebf\u7a0b\u5b89\u5168\uff1a\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u9009\u62e9\u5408\u9002\u7684\u5e76\u53d1\u96c6\u5408</li> <li>\u5185\u5b58\u4f18\u5316\uff1a\u5408\u7406\u8bbe\u7f6e\u521d\u59cb\u5bb9\u91cf\uff0c\u907f\u514d\u9891\u7e41\u6269\u5bb9</li> <li>\u904d\u5386\u65b9\u5f0f\uff1a\u9009\u62e9\u5408\u9002\u7684\u904d\u5386\u65b9\u6cd5\uff0c\u5584\u7528 Stream API</li> <li>\u907f\u514d\u9677\u9631\uff1a\u6ce8\u610f equals/hashCode \u7684\u91cd\u5199\uff0c\u907f\u514d\u5728\u904d\u5386\u65f6\u4fee\u6539\u96c6\u5408</li> </ol> <p>\u901a\u8fc7\u6df1\u5165\u7406\u89e3\u548c\u5b9e\u8df5\u8fd9\u4e9b\u6982\u5ff5\uff0c\u4f60\u5c06\u80fd\u591f\u66f4\u597d\u5730\u5229\u7528 Java \u96c6\u5408\u6846\u67b6\u6765\u89e3\u51b3\u5b9e\u9645\u7f16\u7a0b\u95ee\u9898\u3002</p>"},{"location":"cs_base/language/java/java-concurrency/","title":"Java \u5e76\u53d1\u7f16\u7a0b","text":""},{"location":"cs_base/language/java/java-concurrency/#java","title":"Java \u5e76\u53d1\u7f16\u7a0b","text":"<p> \u7ea6 828 \u4e2a\u5b57  529 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p>"},{"location":"cs_base/language/java/java-concurrency/#_1","title":"\u6982\u8ff0","text":"<p>Java\u5e76\u53d1\u7f16\u7a0b\u662f\u73b0\u4ee3Java\u5f00\u53d1\u4e2d\u7684\u91cd\u8981\u6280\u80fd\uff0c\u5b83\u5141\u8bb8\u7a0b\u5e8f\u540c\u65f6\u6267\u884c\u591a\u4e2a\u4efb\u52a1\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\u548c\u54cd\u5e94\u6027\u3002\u672c\u7ae0\u5c06\u6df1\u5165\u63a2\u8ba8Java\u5e76\u53d1\u7f16\u7a0b\u7684\u6838\u5fc3\u6982\u5ff5\u548c\u5b9e\u8df5\u3002</p>"},{"location":"cs_base/language/java/java-concurrency/#1","title":"1. \u7ebf\u7a0b\u57fa\u7840","text":""},{"location":"cs_base/language/java/java-concurrency/#11","title":"1.1 \u4ec0\u4e48\u662f\u7ebf\u7a0b","text":"<p>\u7ebf\u7a0b\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u7ebf\u7a0b\u3002\u5728Java\u4e2d\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u7a0b\u5e8f\u8ba1\u6570\u5668\u3001\u865a\u62df\u673a\u6808\u548c\u672c\u5730\u65b9\u6cd5\u6808\uff0c\u4f46\u5171\u4eab\u5806\u5185\u5b58\u548c\u65b9\u6cd5\u533a\u3002</p>"},{"location":"cs_base/language/java/java-concurrency/#12","title":"1.2 \u521b\u5efa\u7ebf\u7a0b\u7684\u65b9\u5f0f","text":""},{"location":"cs_base/language/java/java-concurrency/#thread","title":"\u65b9\u5f0f\u4e00\uff1a\u7ee7\u627fThread\u7c7b","text":"Java<pre><code>class MyThread extends Thread {\n    @Override\n    public void run() {\n        for (int i = 0; i &lt; 5; i++) {\n            System.out.println(Thread.currentThread().getName() + \": \" + i);\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n\npublic class ThreadExample1 {\n    public static void main(String[] args) {\n        MyThread t1 = new MyThread();\n        MyThread t2 = new MyThread();\n\n        t1.setName(\"\u7ebf\u7a0b1\");\n        t2.setName(\"\u7ebf\u7a0b2\");\n\n        t1.start();\n        t2.start();\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#runnable","title":"\u65b9\u5f0f\u4e8c\uff1a\u5b9e\u73b0Runnable\u63a5\u53e3","text":"Java<pre><code>class MyRunnable implements Runnable {\n    @Override\n    public void run() {\n        for (int i = 0; i &lt; 5; i++) {\n            System.out.println(Thread.currentThread().getName() + \": \" + i);\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n\npublic class ThreadExample2 {\n    public static void main(String[] args) {\n        MyRunnable runnable = new MyRunnable();\n\n        Thread t1 = new Thread(runnable, \"\u7ebf\u7a0b1\");\n        Thread t2 = new Thread(runnable, \"\u7ebf\u7a0b2\");\n\n        t1.start();\n        t2.start();\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#callable","title":"\u65b9\u5f0f\u4e09\uff1a\u5b9e\u73b0Callable\u63a5\u53e3","text":"Java<pre><code>import java.util.concurrent.*;\n\nclass MyCallable implements Callable&lt;String&gt; {\n    @Override\n    public String call() throws Exception {\n        Thread.sleep(2000);\n        return \"\u4efb\u52a1\u5b8c\u6210: \" + Thread.currentThread().getName();\n    }\n}\n\npublic class ThreadExample3 {\n    public static void main(String[] args) {\n        ExecutorService executor = Executors.newFixedThreadPool(2);\n\n        Future&lt;String&gt; future1 = executor.submit(new MyCallable());\n        Future&lt;String&gt; future2 = executor.submit(new MyCallable());\n\n        try {\n            System.out.println(future1.get());\n            System.out.println(future2.get());\n        } catch (InterruptedException | ExecutionException e) {\n            e.printStackTrace();\n        }\n\n        executor.shutdown();\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#13","title":"1.3 \u7ebf\u7a0b\u7684\u751f\u547d\u5468\u671f","text":"<p>\u7ebf\u7a0b\u5728\u5176\u751f\u547d\u5468\u671f\u4e2d\u4f1a\u7ecf\u5386\u4ee5\u4e0b\u72b6\u6001\uff1a</p> <ol> <li>NEW\uff08\u65b0\u5efa\uff09\uff1a\u7ebf\u7a0b\u5bf9\u8c61\u5df2\u521b\u5efa\uff0c\u4f46\u5c1a\u672a\u8c03\u7528start()\u65b9\u6cd5</li> <li>RUNNABLE\uff08\u53ef\u8fd0\u884c\uff09\uff1a\u7ebf\u7a0b\u6b63\u5728Java\u865a\u62df\u673a\u4e2d\u6267\u884c</li> <li>BLOCKED\uff08\u963b\u585e\uff09\uff1a\u7ebf\u7a0b\u88ab\u963b\u585e\u7b49\u5f85\u76d1\u89c6\u5668\u9501</li> <li>WAITING\uff08\u7b49\u5f85\uff09\uff1a\u7ebf\u7a0b\u65e0\u9650\u671f\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u7279\u5b9a\u64cd\u4f5c</li> <li>TIMED_WAITING\uff08\u8d85\u65f6\u7b49\u5f85\uff09\uff1a\u7ebf\u7a0b\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u64cd\u4f5c\uff0c\u4f46\u6709\u65f6\u95f4\u9650\u5236</li> <li>TERMINATED\uff08\u7ec8\u6b62\uff09\uff1a\u7ebf\u7a0b\u5df2\u9000\u51fa</li> </ol> Java<pre><code>public class ThreadStateExample {\n    public static void main(String[] args) throws InterruptedException {\n        Thread thread = new Thread(() -&gt; {\n            try {\n                Thread.sleep(2000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n\n        System.out.println(\"\u521b\u5efa\u540e: \" + thread.getState()); // NEW\n\n        thread.start();\n        System.out.println(\"\u542f\u52a8\u540e: \" + thread.getState()); // RUNNABLE\n\n        Thread.sleep(100);\n        System.out.println(\"\u7761\u7720\u4e2d: \" + thread.getState()); // TIMED_WAITING\n\n        thread.join();\n        System.out.println(\"\u7ed3\u675f\u540e: \" + thread.getState()); // TERMINATED\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#2","title":"2. \u7ebf\u7a0b\u540c\u6b65\u673a\u5236","text":""},{"location":"cs_base/language/java/java-concurrency/#21-synchronized","title":"2.1 synchronized\u5173\u952e\u5b57","text":"<p><code>synchronized</code>\u662fJava\u4e2d\u6700\u57fa\u672c\u7684\u540c\u6b65\u673a\u5236\uff0c\u53ef\u4ee5\u7528\u4e8e\u65b9\u6cd5\u6216\u4ee3\u7801\u5757\u3002</p>"},{"location":"cs_base/language/java/java-concurrency/#_2","title":"\u540c\u6b65\u65b9\u6cd5","text":"Java<pre><code>class Counter {\n    private int count = 0;\n\n    // \u540c\u6b65\u65b9\u6cd5\n    public synchronized void increment() {\n        count++;\n    }\n\n    public synchronized int getCount() {\n        return count;\n    }\n}\n\npublic class SynchronizedMethodExample {\n    public static void main(String[] args) throws InterruptedException {\n        Counter counter = new Counter();\n\n        Thread t1 = new Thread(() -&gt; {\n            for (int i = 0; i &lt; 1000; i++) {\n                counter.increment();\n            }\n        });\n\n        Thread t2 = new Thread(() -&gt; {\n            for (int i = 0; i &lt; 1000; i++) {\n                counter.increment();\n            }\n        });\n\n        t1.start();\n        t2.start();\n\n        t1.join();\n        t2.join();\n\n        System.out.println(\"\u6700\u7ec8\u8ba1\u6570: \" + counter.getCount()); // \u5e94\u8be5\u662f2000\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#_3","title":"\u540c\u6b65\u4ee3\u7801\u5757","text":"Java<pre><code>class BankAccount {\n    private double balance;\n    private final Object lock = new Object();\n\n    public BankAccount(double initialBalance) {\n        this.balance = initialBalance;\n    }\n\n    public void deposit(double amount) {\n        synchronized (lock) {\n            balance += amount;\n            System.out.println(\"\u5b58\u5165: \" + amount + \", \u4f59\u989d: \" + balance);\n        }\n    }\n\n    public void withdraw(double amount) {\n        synchronized (lock) {\n            if (balance &gt;= amount) {\n                balance -= amount;\n                System.out.println(\"\u53d6\u51fa: \" + amount + \", \u4f59\u989d: \" + balance);\n            } else {\n                System.out.println(\"\u4f59\u989d\u4e0d\u8db3\uff0c\u65e0\u6cd5\u53d6\u51fa: \" + amount);\n            }\n        }\n    }\n\n    public double getBalance() {\n        synchronized (lock) {\n            return balance;\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#22-lock","title":"2.2 Lock\u63a5\u53e3","text":"<p><code>java.util.concurrent.locks.Lock</code>\u63a5\u53e3\u63d0\u4f9b\u4e86\u6bd4synchronized\u66f4\u7075\u6d3b\u7684\u9501\u5b9a\u64cd\u4f5c\u3002</p> Java<pre><code>import java.util.concurrent.locks.Lock;\nimport java.util.concurrent.locks.ReentrantLock;\n\nclass LockCounter {\n    private int count = 0;\n    private final Lock lock = new ReentrantLock();\n\n    public void increment() {\n        lock.lock();\n        try {\n            count++;\n        } finally {\n            lock.unlock();\n        }\n    }\n\n    public int getCount() {\n        lock.lock();\n        try {\n            return count;\n        } finally {\n            lock.unlock();\n        }\n    }\n\n    // \u5c1d\u8bd5\u83b7\u53d6\u9501\uff0c\u907f\u514d\u65e0\u9650\u7b49\u5f85\n    public boolean tryIncrement() {\n        if (lock.tryLock()) {\n            try {\n                count++;\n                return true;\n            } finally {\n                lock.unlock();\n            }\n        }\n        return false;\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#23-readwritelock","title":"2.3 ReadWriteLock\u8bfb\u5199\u9501","text":"Java<pre><code>import java.util.concurrent.locks.ReadWriteLock;\nimport java.util.concurrent.locks.ReentrantReadWriteLock;\n\nclass ReadWriteCounter {\n    private int count = 0;\n    private final ReadWriteLock lock = new ReentrantReadWriteLock();\n\n    public void increment() {\n        lock.writeLock().lock();\n        try {\n            count++;\n        } finally {\n            lock.writeLock().unlock();\n        }\n    }\n\n    public int getCount() {\n        lock.readLock().lock();\n        try {\n            return count;\n        } finally {\n            lock.readLock().unlock();\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#3","title":"3. \u7ebf\u7a0b\u6c60","text":""},{"location":"cs_base/language/java/java-concurrency/#31","title":"3.1 \u4e3a\u4ec0\u4e48\u4f7f\u7528\u7ebf\u7a0b\u6c60","text":"<ul> <li>\u964d\u4f4e\u8d44\u6e90\u6d88\u8017\uff1a\u91cd\u590d\u5229\u7528\u5df2\u521b\u5efa\u7684\u7ebf\u7a0b</li> <li>\u63d0\u9ad8\u54cd\u5e94\u901f\u5ea6\uff1a\u4efb\u52a1\u5230\u8fbe\u65f6\u4e0d\u9700\u8981\u7b49\u5f85\u7ebf\u7a0b\u521b\u5efa</li> <li>\u63d0\u9ad8\u7ebf\u7a0b\u7684\u53ef\u7ba1\u7406\u6027\uff1a\u7edf\u4e00\u5206\u914d\u3001\u8c03\u4f18\u548c\u76d1\u63a7</li> </ul>"},{"location":"cs_base/language/java/java-concurrency/#32-threadpoolexecutor","title":"3.2 ThreadPoolExecutor","text":"Java<pre><code>import java.util.concurrent.*;\n\npublic class ThreadPoolExample {\n    public static void main(String[] args) {\n        // \u521b\u5efa\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60\n        ThreadPoolExecutor executor = new ThreadPoolExecutor(\n            2,                      // \u6838\u5fc3\u7ebf\u7a0b\u6570\n            4,                      // \u6700\u5927\u7ebf\u7a0b\u6570\n            60L,                    // \u7a7a\u95f2\u7ebf\u7a0b\u5b58\u6d3b\u65f6\u95f4\n            TimeUnit.SECONDS,       // \u65f6\u95f4\u5355\u4f4d\n            new LinkedBlockingQueue&lt;&gt;(10), // \u5de5\u4f5c\u961f\u5217\n            Executors.defaultThreadFactory(), // \u7ebf\u7a0b\u5de5\u5382\n            new ThreadPoolExecutor.AbortPolicy() // \u62d2\u7edd\u7b56\u7565\n        );\n\n        // \u63d0\u4ea4\u4efb\u52a1\n        for (int i = 0; i &lt; 10; i++) {\n            final int taskId = i;\n            executor.submit(() -&gt; {\n                System.out.println(\"\u6267\u884c\u4efb\u52a1 \" + taskId + \n                    \" \u5728\u7ebf\u7a0b \" + Thread.currentThread().getName());\n                try {\n                    Thread.sleep(2000);\n                } catch (InterruptedException e) {\n                    Thread.currentThread().interrupt();\n                }\n            });\n        }\n\n        // \u5173\u95ed\u7ebf\u7a0b\u6c60\n        executor.shutdown();\n        try {\n            if (!executor.awaitTermination(60, TimeUnit.SECONDS)) {\n                executor.shutdownNow();\n            }\n        } catch (InterruptedException e) {\n            executor.shutdownNow();\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#33","title":"3.3 \u5e38\u7528\u7ebf\u7a0b\u6c60\u7c7b\u578b","text":"Java<pre><code>import java.util.concurrent.*;\n\npublic class ExecutorServiceExample {\n    public static void main(String[] args) {\n        // 1. \u56fa\u5b9a\u5927\u5c0f\u7ebf\u7a0b\u6c60\n        ExecutorService fixedPool = Executors.newFixedThreadPool(3);\n\n        // 2. \u7f13\u5b58\u7ebf\u7a0b\u6c60\n        ExecutorService cachedPool = Executors.newCachedThreadPool();\n\n        // 3. \u5355\u7ebf\u7a0b\u6c60\n        ExecutorService singlePool = Executors.newSingleThreadExecutor();\n\n        // 4. \u5b9a\u65f6\u4efb\u52a1\u7ebf\u7a0b\u6c60\n        ScheduledExecutorService scheduledPool = Executors.newScheduledThreadPool(2);\n\n        // \u5b9a\u65f6\u4efb\u52a1\u793a\u4f8b\n        scheduledPool.scheduleAtFixedRate(() -&gt; {\n            System.out.println(\"\u5b9a\u65f6\u4efb\u52a1\u6267\u884c: \" + System.currentTimeMillis());\n        }, 0, 2, TimeUnit.SECONDS);\n\n        // \u5ef6\u8fdf\u4efb\u52a1\u793a\u4f8b\n        scheduledPool.schedule(() -&gt; {\n            System.out.println(\"\u5ef6\u8fdf\u4efb\u52a1\u6267\u884c\");\n        }, 5, TimeUnit.SECONDS);\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#4","title":"4. \u5e76\u53d1\u5de5\u5177\u7c7b","text":""},{"location":"cs_base/language/java/java-concurrency/#41-countdownlatch","title":"4.1 CountDownLatch","text":"Java<pre><code>import java.util.concurrent.CountDownLatch;\n\npublic class CountDownLatchExample {\n    public static void main(String[] args) throws InterruptedException {\n        int taskCount = 3;\n        CountDownLatch latch = new CountDownLatch(taskCount);\n\n        for (int i = 0; i &lt; taskCount; i++) {\n            final int taskId = i;\n            new Thread(() -&gt; {\n                try {\n                    System.out.println(\"\u4efb\u52a1 \" + taskId + \" \u5f00\u59cb\u6267\u884c\");\n                    Thread.sleep(2000);\n                    System.out.println(\"\u4efb\u52a1 \" + taskId + \" \u6267\u884c\u5b8c\u6210\");\n                } catch (InterruptedException e) {\n                    Thread.currentThread().interrupt();\n                } finally {\n                    latch.countDown(); // \u8ba1\u6570\u5668\u51cf1\n                }\n            }).start();\n        }\n\n        System.out.println(\"\u7b49\u5f85\u6240\u6709\u4efb\u52a1\u5b8c\u6210...\");\n        latch.await(); // \u7b49\u5f85\u8ba1\u6570\u5668\u5f52\u96f6\n        System.out.println(\"\u6240\u6709\u4efb\u52a1\u5df2\u5b8c\u6210\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#42-cyclicbarrier","title":"4.2 CyclicBarrier","text":"Java<pre><code>import java.util.concurrent.CyclicBarrier;\n\npublic class CyclicBarrierExample {\n    public static void main(String[] args) {\n        int threadCount = 3;\n        CyclicBarrier barrier = new CyclicBarrier(threadCount, () -&gt; {\n            System.out.println(\"\u6240\u6709\u7ebf\u7a0b\u90fd\u5230\u8fbe\u5c4f\u969c\u70b9\uff0c\u5f00\u59cb\u4e0b\u4e00\u9636\u6bb5\");\n        });\n\n        for (int i = 0; i &lt; threadCount; i++) {\n            final int threadId = i;\n            new Thread(() -&gt; {\n                try {\n                    System.out.println(\"\u7ebf\u7a0b \" + threadId + \" \u6b63\u5728\u5de5\u4f5c...\");\n                    Thread.sleep((threadId + 1) * 1000);\n                    System.out.println(\"\u7ebf\u7a0b \" + threadId + \" \u5230\u8fbe\u5c4f\u969c\u70b9\");\n\n                    barrier.await(); // \u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\n\n                    System.out.println(\"\u7ebf\u7a0b \" + threadId + \" \u7ee7\u7eed\u6267\u884c\");\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }).start();\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#43-semaphore","title":"4.3 Semaphore","text":"Java<pre><code>import java.util.concurrent.Semaphore;\n\npublic class SemaphoreExample {\n    public static void main(String[] args) {\n        // \u521b\u5efa\u4e00\u4e2a\u4fe1\u53f7\u91cf\uff0c\u5141\u8bb8\u6700\u591a3\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\n        Semaphore semaphore = new Semaphore(3);\n\n        for (int i = 0; i &lt; 10; i++) {\n            final int threadId = i;\n            new Thread(() -&gt; {\n                try {\n                    semaphore.acquire(); // \u83b7\u53d6\u8bb8\u53ef\n                    System.out.println(\"\u7ebf\u7a0b \" + threadId + \" \u83b7\u5f97\u8bb8\u53ef\uff0c\u5f00\u59cb\u6267\u884c\");\n                    Thread.sleep(2000);\n                    System.out.println(\"\u7ebf\u7a0b \" + threadId + \" \u6267\u884c\u5b8c\u6210\uff0c\u91ca\u653e\u8bb8\u53ef\");\n                } catch (InterruptedException e) {\n                    Thread.currentThread().interrupt();\n                } finally {\n                    semaphore.release(); // \u91ca\u653e\u8bb8\u53ef\n                }\n            }).start();\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#5-javajmm","title":"5. Java\u5185\u5b58\u6a21\u578b\uff08JMM\uff09","text":""},{"location":"cs_base/language/java/java-concurrency/#51-jmm","title":"5.1 JMM\u57fa\u672c\u6982\u5ff5","text":"<p>Java\u5185\u5b58\u6a21\u578b\u5b9a\u4e49\u4e86Java\u7a0b\u5e8f\u4e2d\u5404\u79cd\u53d8\u91cf\u7684\u8bbf\u95ee\u89c4\u5219\uff0c\u4ee5\u53ca\u5728JVM\u4e2d\u5c06\u53d8\u91cf\u5b58\u50a8\u5230\u5185\u5b58\u548c\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u53d8\u91cf\u8fd9\u6837\u7684\u5e95\u5c42\u7ec6\u8282\u3002</p>"},{"location":"cs_base/language/java/java-concurrency/#52-volatile","title":"5.2 volatile\u5173\u952e\u5b57","text":"Java<pre><code>public class VolatileExample {\n    private volatile boolean flag = false;\n    private int count = 0;\n\n    public void writer() {\n        count = 42;     // 1\n        flag = true;    // 2\n    }\n\n    public void reader() {\n        if (flag) {     // 3\n            int i = count; // 4\n            System.out.println(\"count = \" + i);\n        }\n    }\n\n    public static void main(String[] args) {\n        VolatileExample example = new VolatileExample();\n\n        new Thread(example::writer).start();\n        new Thread(example::reader).start();\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#53-happens-before","title":"5.3 happens-before\u539f\u5219","text":"<ol> <li>\u7a0b\u5e8f\u987a\u5e8f\u89c4\u5219\uff1a\u5728\u4e00\u4e2a\u7ebf\u7a0b\u5185\uff0c\u6309\u7167\u7a0b\u5e8f\u4ee3\u7801\u987a\u5e8f</li> <li>\u76d1\u89c6\u5668\u9501\u89c4\u5219\uff1aunlock\u64cd\u4f5chappens-before\u540e\u7eed\u7684lock\u64cd\u4f5c</li> <li>volatile\u53d8\u91cf\u89c4\u5219\uff1a\u5199\u64cd\u4f5chappens-before\u540e\u7eed\u7684\u8bfb\u64cd\u4f5c</li> <li>\u7ebf\u7a0b\u542f\u52a8\u89c4\u5219\uff1aThread.start()happens-before\u8be5\u7ebf\u7a0b\u7684\u6bcf\u4e00\u4e2a\u52a8\u4f5c</li> <li>\u7ebf\u7a0b\u7ec8\u6b62\u89c4\u5219\uff1a\u7ebf\u7a0b\u4e2d\u7684\u6240\u6709\u64cd\u4f5chappens-before\u5176\u4ed6\u7ebf\u7a0b\u68c0\u6d4b\u5230\u8be5\u7ebf\u7a0b\u7ec8\u6b62</li> <li>\u4f20\u9012\u6027\uff1a\u5982\u679cA happens-before B\uff0cB happens-before C\uff0c\u90a3\u4e48A happens-before C</li> </ol>"},{"location":"cs_base/language/java/java-concurrency/#6","title":"6. \u5e76\u53d1\u96c6\u5408","text":""},{"location":"cs_base/language/java/java-concurrency/#61-concurrenthashmap","title":"6.1 ConcurrentHashMap","text":"Java<pre><code>import java.util.concurrent.ConcurrentHashMap;\n\npublic class ConcurrentHashMapExample {\n    public static void main(String[] args) {\n        ConcurrentHashMap&lt;String, Integer&gt; map = new ConcurrentHashMap&lt;&gt;();\n\n        // \u7ebf\u7a0b\u5b89\u5168\u7684\u64cd\u4f5c\n        map.put(\"key1\", 1);\n        map.putIfAbsent(\"key2\", 2);\n\n        // \u539f\u5b50\u64cd\u4f5c\n        map.compute(\"key1\", (key, val) -&gt; val == null ? 1 : val + 1);\n        map.computeIfAbsent(\"key3\", key -&gt; 3);\n\n        System.out.println(map);\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#62-blockingqueue","title":"6.2 BlockingQueue","text":"Java<pre><code>import java.util.concurrent.ArrayBlockingQueue;\nimport java.util.concurrent.BlockingQueue;\n\npublic class BlockingQueueExample {\n    public static void main(String[] args) {\n        BlockingQueue&lt;String&gt; queue = new ArrayBlockingQueue&lt;&gt;(10);\n\n        // \u751f\u4ea7\u8005\n        Thread producer = new Thread(() -&gt; {\n            try {\n                for (int i = 0; i &lt; 5; i++) {\n                    String item = \"Item \" + i;\n                    queue.put(item);\n                    System.out.println(\"\u751f\u4ea7: \" + item);\n                    Thread.sleep(1000);\n                }\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n            }\n        });\n\n        // \u6d88\u8d39\u8005\n        Thread consumer = new Thread(() -&gt; {\n            try {\n                for (int i = 0; i &lt; 5; i++) {\n                    String item = queue.take();\n                    System.out.println(\"\u6d88\u8d39: \" + item);\n                    Thread.sleep(2000);\n                }\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n            }\n        });\n\n        producer.start();\n        consumer.start();\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#7","title":"7. \u5e76\u53d1\u7f16\u7a0b\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"cs_base/language/java/java-concurrency/#71","title":"7.1 \u907f\u514d\u6b7b\u9501","text":"Java<pre><code>public class DeadlockAvoidance {\n    private final Object lock1 = new Object();\n    private final Object lock2 = new Object();\n\n    // \u9519\u8bef\u7684\u505a\u6cd5 - \u53ef\u80fd\u5bfc\u81f4\u6b7b\u9501\n    public void method1() {\n        synchronized (lock1) {\n            synchronized (lock2) {\n                // \u4e1a\u52a1\u903b\u8f91\n            }\n        }\n    }\n\n    public void method2() {\n        synchronized (lock2) {\n            synchronized (lock1) {\n                // \u4e1a\u52a1\u903b\u8f91\n            }\n        }\n    }\n\n    // \u6b63\u786e\u7684\u505a\u6cd5 - \u6309\u987a\u5e8f\u83b7\u53d6\u9501\n    public void safeMethod1() {\n        synchronized (lock1) {\n            synchronized (lock2) {\n                // \u4e1a\u52a1\u903b\u8f91\n            }\n        }\n    }\n\n    public void safeMethod2() {\n        synchronized (lock1) { // \u540c\u6837\u7684\u987a\u5e8f\n            synchronized (lock2) {\n                // \u4e1a\u52a1\u903b\u8f91\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#72","title":"7.2 \u4f7f\u7528\u4e0d\u53ef\u53d8\u5bf9\u8c61","text":"Java<pre><code>public final class ImmutablePerson {\n    private final String name;\n    private final int age;\n\n    public ImmutablePerson(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    // \u4e0d\u63d0\u4f9bsetter\u65b9\u6cd5\uff0c\u786e\u4fdd\u4e0d\u53ef\u53d8\u6027\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#73","title":"7.3 \u6b63\u786e\u5904\u7406\u4e2d\u65ad","text":"Java<pre><code>public class InterruptExample {\n    public void interruptibleTask() {\n        while (!Thread.currentThread().isInterrupted()) {\n            try {\n                // \u53ef\u80fd\u88ab\u4e2d\u65ad\u7684\u64cd\u4f5c\n                Thread.sleep(1000);\n                // \u6267\u884c\u4efb\u52a1\n            } catch (InterruptedException e) {\n                // \u6062\u590d\u4e2d\u65ad\u72b6\u6001\n                Thread.currentThread().interrupt();\n                System.out.println(\"\u4efb\u52a1\u88ab\u4e2d\u65ad\");\n                break;\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-concurrency/#_4","title":"\u603b\u7ed3","text":"<p>Java\u5e76\u53d1\u7f16\u7a0b\u662f\u4e00\u4e2a\u590d\u6742\u4f46\u91cd\u8981\u7684\u4e3b\u9898\u3002\u638c\u63e1\u4ee5\u4e0b\u8981\u70b9\uff1a</p> <ol> <li>\u7ebf\u7a0b\u57fa\u7840\uff1a\u7406\u89e3\u7ebf\u7a0b\u7684\u521b\u5efa\u65b9\u5f0f\u548c\u751f\u547d\u5468\u671f</li> <li>\u540c\u6b65\u673a\u5236\uff1a\u5408\u7406\u4f7f\u7528synchronized\u3001Lock\u7b49\u540c\u6b65\u5de5\u5177</li> <li>\u7ebf\u7a0b\u6c60\uff1a\u4f7f\u7528\u7ebf\u7a0b\u6c60\u7ba1\u7406\u7ebf\u7a0b\u8d44\u6e90</li> <li>\u5e76\u53d1\u5de5\u5177\u7c7b\uff1a\u719f\u7ec3\u4f7f\u7528CountDownLatch\u3001CyclicBarrier\u7b49</li> <li>\u5185\u5b58\u6a21\u578b\uff1a\u7406\u89e3JMM\u548chappens-before\u539f\u5219</li> <li>\u5e76\u53d1\u96c6\u5408\uff1a\u4f7f\u7528\u7ebf\u7a0b\u5b89\u5168\u7684\u96c6\u5408\u7c7b</li> <li>\u6700\u4f73\u5b9e\u8df5\uff1a\u907f\u514d\u6b7b\u9501\uff0c\u4f7f\u7528\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u6b63\u786e\u5904\u7406\u4e2d\u65ad</li> </ol> <p>\u901a\u8fc7\u5408\u7406\u4f7f\u7528\u8fd9\u4e9b\u5e76\u53d1\u7f16\u7a0b\u6280\u672f\uff0c\u53ef\u4ee5\u7f16\u5199\u51fa\u9ad8\u6027\u80fd\u3001\u7ebf\u7a0b\u5b89\u5168\u7684Java\u5e94\u7528\u7a0b\u5e8f\u3002</p>"},{"location":"cs_base/language/java/java-core-libraries/","title":"Macro Syntax Error","text":""},{"location":"cs_base/language/java/java-core-libraries/#macro-syntax-error","title":"Macro Syntax Error","text":"<p> \u7ea6 12 \u4e2a\u5b57  1 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p> <p>File: <code>cs_base/language/java/java-core-libraries.md</code></p> <p>Line 683 in Markdown file: unexpected '}' </p>Markdown<pre><code>        int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n</code></pre>"},{"location":"cs_base/language/java/java-exception/","title":"Java \u5f02\u5e38\u5904\u7406","text":""},{"location":"cs_base/language/java/java-exception/#java","title":"Java \u5f02\u5e38\u5904\u7406","text":"<p> \u7ea6 324 \u4e2a\u5b57  1001 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 14 \u5206\u949f</p> <p>\u672c\u7ae0\u5185\u5bb9</p> <p>\u672c\u7ae0\u4ecb\u7ecd Java \u7684\u5f02\u5e38\u5904\u7406\u673a\u5236\uff1a\u5f02\u5e38\u4f53\u7cfb\u3001\u5904\u7406\u8bed\u6cd5\u3001\u81ea\u5b9a\u4e49\u5f02\u5e38\u548c\u6700\u4f73\u5b9e\u8df5\u3002</p>"},{"location":"cs_base/language/java/java-exception/#_1","title":"\u4e00\u3001\u5f02\u5e38\u4f53\u7cfb\u6982\u8ff0","text":""},{"location":"cs_base/language/java/java-exception/#11","title":"1.1 \u5f02\u5e38\u5c42\u6b21\u7ed3\u6784","text":"Java<pre><code>/*\n\u5f02\u5e38\u5c42\u6b21\u7ed3\u6784\uff1a\n\nThrowable\n\u251c\u2500\u2500 Error (\u9519\u8bef)\n\u2502   \u251c\u2500\u2500 OutOfMemoryError\n\u2502   \u251c\u2500\u2500 StackOverflowError\n\u2502   \u2514\u2500\u2500 VirtualMachineError\n\u2514\u2500\u2500 Exception (\u5f02\u5e38)\n    \u251c\u2500\u2500 RuntimeException (\u8fd0\u884c\u65f6\u5f02\u5e38/\u975e\u68c0\u67e5\u5f02\u5e38)\n    \u2502   \u251c\u2500\u2500 NullPointerException\n    \u2502   \u251c\u2500\u2500 IndexOutOfBoundsException\n    \u2502   \u251c\u2500\u2500 IllegalArgumentException\n    \u2502   \u2514\u2500\u2500 ClassCastException\n    \u2514\u2500\u2500 \u68c0\u67e5\u5f02\u5e38 (Checked Exception)\n        \u251c\u2500\u2500 IOException\n        \u251c\u2500\u2500 SQLException\n        \u251c\u2500\u2500 ClassNotFoundException\n        \u2514\u2500\u2500 ParseException\n*/\n\npublic class ExceptionHierarchyDemo {\n    public static void main(String[] args) {\n        System.out.println(\"=== \u5f02\u5e38\u5c42\u6b21\u7ed3\u6784\u6f14\u793a ===\");\n\n        // Error \u793a\u4f8b\uff08\u901a\u5e38\u4e0d\u5e94\u8be5\u88ab\u6355\u83b7\uff09\n        try {\n            // \u6a21\u62df\u6808\u6ea2\u51fa\n            // recursiveMethod();\n        } catch (StackOverflowError e) {\n            System.out.println(\"\u6355\u83b7\u5230 Error: \" + e.getClass().getSimpleName());\n        }\n\n        // RuntimeException \u793a\u4f8b\n        try {\n            String str = null;\n            int length = str.length();  // NullPointerException\n        } catch (RuntimeException e) {\n            System.out.println(\"\u6355\u83b7\u5230\u8fd0\u884c\u65f6\u5f02\u5e38: \" + e.getClass().getSimpleName());\n        }\n\n        // \u68c0\u67e5\u5f02\u5e38\u793a\u4f8b\n        try {\n            Class.forName(\"com.nonexistent.Class\");  // ClassNotFoundException\n        } catch (ClassNotFoundException e) {\n            System.out.println(\"\u6355\u83b7\u5230\u68c0\u67e5\u5f02\u5e38: \" + e.getClass().getSimpleName());\n        }\n    }\n\n    // \u9012\u5f52\u65b9\u6cd5\u5bfc\u81f4\u6808\u6ea2\u51fa\n    public static void recursiveMethod() {\n        recursiveMethod();\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-exception/#12","title":"1.2 \u5e38\u89c1\u8fd0\u884c\u65f6\u5f02\u5e38","text":"Java<pre><code>import java.util.ArrayList;\nimport java.util.List;\n\npublic class CommonRuntimeExceptionsDemo {\n    public static void main(String[] args) {\n        System.out.println(\"=== \u5e38\u89c1\u8fd0\u884c\u65f6\u5f02\u5e38 ===\");\n\n        // 1. NullPointerException\n        demonstrateNullPointerException();\n\n        // 2. IndexOutOfBoundsException\n        demonstrateIndexOutOfBoundsException();\n\n        // 3. IllegalArgumentException\n        demonstrateIllegalArgumentException();\n\n        // 4. ClassCastException\n        demonstrateClassCastException();\n\n        // 5. NumberFormatException\n        demonstrateNumberFormatException();\n\n        // 6. ArithmeticException\n        demonstrateArithmeticException();\n    }\n\n    public static void demonstrateNullPointerException() {\n        System.out.println(\"\\n--- NullPointerException ---\");\n        try {\n            String str = null;\n            System.out.println(str.length());  // \u7a7a\u6307\u9488\u5f02\u5e38\n        } catch (NullPointerException e) {\n            System.out.println(\"\u6355\u83b7\u5f02\u5e38: \" + e.getMessage());\n        }\n    }\n\n    public static void demonstrateIndexOutOfBoundsException() {\n        System.out.println(\"\\n--- IndexOutOfBoundsException ---\");\n        try {\n            List&lt;String&gt; list = new ArrayList&lt;&gt;();\n            list.add(\"item1\");\n            System.out.println(list.get(5));  // \u7d22\u5f15\u8d8a\u754c\n        } catch (IndexOutOfBoundsException e) {\n            System.out.println(\"\u6355\u83b7\u5f02\u5e38: \" + e.getMessage());\n        }\n\n        try {\n            int[] array = {1, 2, 3};\n            System.out.println(array[10]);  // \u6570\u7ec4\u8d8a\u754c\n        } catch (ArrayIndexOutOfBoundsException e) {\n            System.out.println(\"\u6355\u83b7\u5f02\u5e38: \" + e.getMessage());\n        }\n    }\n\n    public static void demonstrateIllegalArgumentException() {\n        System.out.println(\"\\n--- IllegalArgumentException ---\");\n        try {\n            Thread.sleep(-1000);  // \u8d1f\u6570\u53c2\u6570\n        } catch (IllegalArgumentException e) {\n            System.out.println(\"\u6355\u83b7\u5f02\u5e38: \" + e.getMessage());\n        } catch (InterruptedException e) {\n            System.out.println(\"\u7ebf\u7a0b\u4e2d\u65ad\u5f02\u5e38\");\n        }\n    }\n\n    public static void demonstrateClassCastException() {\n        System.out.println(\"\\n--- ClassCastException ---\");\n        try {\n            Object obj = \"Hello\";\n            Integer num = (Integer) obj;  // \u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\n        } catch (ClassCastException e) {\n            System.out.println(\"\u6355\u83b7\u5f02\u5e38: \" + e.getMessage());\n        }\n    }\n\n    public static void demonstrateNumberFormatException() {\n        System.out.println(\"\\n--- NumberFormatException ---\");\n        try {\n            int num = Integer.parseInt(\"abc\");  // \u6570\u5b57\u683c\u5f0f\u5f02\u5e38\n        } catch (NumberFormatException e) {\n            System.out.println(\"\u6355\u83b7\u5f02\u5e38: \" + e.getMessage());\n        }\n    }\n\n    public static void demonstrateArithmeticException() {\n        System.out.println(\"\\n--- ArithmeticException ---\");\n        try {\n            int result = 10 / 0;  // \u9664\u96f6\u5f02\u5e38\n        } catch (ArithmeticException e) {\n            System.out.println(\"\u6355\u83b7\u5f02\u5e38: \" + e.getMessage());\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-exception/#_2","title":"\u4e8c\u3001\u5f02\u5e38\u5904\u7406\u8bed\u6cd5","text":""},{"location":"cs_base/language/java/java-exception/#21-try-catch-finally","title":"2.1 try-catch-finally \u8bed\u53e5","text":"Java<pre><code>import java.io.*;\nimport java.util.Scanner;\n\npublic class TryCatchFinallyDemo {\n    public static void main(String[] args) {\n        // \u57fa\u672c try-catch\n        basicTryCatch();\n\n        // \u591a\u4e2a catch \u5757\n        multipleCatch();\n\n        // try-catch-finally\n        tryCatchFinally();\n\n        // finally \u7684\u6267\u884c\u65f6\u673a\n        finallyExecutionOrder();\n    }\n\n    public static void basicTryCatch() {\n        System.out.println(\"=== \u57fa\u672c try-catch ===\");\n        try {\n            int[] array = {1, 2, 3};\n            System.out.println(array[5]);\n        } catch (ArrayIndexOutOfBoundsException e) {\n            System.out.println(\"\u6570\u7ec4\u8d8a\u754c: \" + e.getMessage());\n        }\n        System.out.println(\"\u7a0b\u5e8f\u7ee7\u7eed\u6267\u884c\");\n    }\n\n    public static void multipleCatch() {\n        System.out.println(\"\\n=== \u591a\u4e2a catch \u5757 ===\");\n        Scanner scanner = new Scanner(System.in);\n\n        try {\n            System.out.print(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u6570\u5b57: \");\n            String input = \"abc\";  // \u6a21\u62df\u8f93\u5165\n            int number = Integer.parseInt(input);\n            int result = 100 / number;\n            System.out.println(\"\u7ed3\u679c: \" + result);\n        } catch (NumberFormatException e) {\n            System.out.println(\"\u8f93\u5165\u683c\u5f0f\u9519\u8bef: \" + e.getMessage());\n        } catch (ArithmeticException e) {\n            System.out.println(\"\u7b97\u672f\u9519\u8bef: \" + e.getMessage());\n        } catch (Exception e) {\n            System.out.println(\"\u5176\u4ed6\u5f02\u5e38: \" + e.getMessage());\n        }\n    }\n\n    public static void tryCatchFinally() {\n        System.out.println(\"\\n=== try-catch-finally ===\");\n        FileInputStream fis = null;\n        try {\n            fis = new FileInputStream(\"nonexistent.txt\");\n            System.out.println(\"\u6587\u4ef6\u6253\u5f00\u6210\u529f\");\n        } catch (FileNotFoundException e) {\n            System.out.println(\"\u6587\u4ef6\u672a\u627e\u5230: \" + e.getMessage());\n        } finally {\n            System.out.println(\"finally \u5757\u6267\u884c\");\n            if (fis != null) {\n                try {\n                    fis.close();\n                    System.out.println(\"\u6587\u4ef6\u5df2\u5173\u95ed\");\n                } catch (IOException e) {\n                    System.out.println(\"\u5173\u95ed\u6587\u4ef6\u65f6\u51fa\u9519: \" + e.getMessage());\n                }\n            }\n        }\n    }\n\n    public static void finallyExecutionOrder() {\n        System.out.println(\"\\n=== finally \u6267\u884c\u987a\u5e8f ===\");\n        System.out.println(\"\u8fd4\u56de\u503c: \" + testFinally());\n    }\n\n    public static int testFinally() {\n        try {\n            System.out.println(\"try \u5757\u6267\u884c\");\n            return 1;\n        } catch (Exception e) {\n            System.out.println(\"catch \u5757\u6267\u884c\");\n            return 2;\n        } finally {\n            System.out.println(\"finally \u5757\u6267\u884c\");\n            // \u6ce8\u610f\uff1afinally \u4e2d\u7684 return \u4f1a\u8986\u76d6 try/catch \u4e2d\u7684 return\n            // return 3;  // \u4e0d\u63a8\u8350\u5728 finally \u4e2d\u4f7f\u7528 return\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-exception/#22-try-with-resources-java-7","title":"2.2 try-with-resources \u8bed\u53e5\uff08Java 7+\uff09","text":"Java<pre><code>import java.io.*;\nimport java.util.Scanner;\n\npublic class TryWithResourcesDemo {\n    public static void main(String[] args) {\n        // \u4f20\u7edf\u65b9\u5f0f\n        traditionalWay();\n\n        // try-with-resources \u65b9\u5f0f\n        tryWithResources();\n\n        // \u591a\u4e2a\u8d44\u6e90\n        multipleResources();\n\n        // \u81ea\u5b9a\u4e49\u8d44\u6e90\u7c7b\n        customResource();\n    }\n\n    public static void traditionalWay() {\n        System.out.println(\"=== \u4f20\u7edf\u65b9\u5f0f ===\");\n        FileInputStream fis = null;\n        BufferedReader reader = null;\n        try {\n            fis = new FileInputStream(\"test.txt\");\n            reader = new BufferedReader(new InputStreamReader(fis));\n            String line = reader.readLine();\n            System.out.println(\"\u8bfb\u53d6\u5185\u5bb9: \" + line);\n        } catch (IOException e) {\n            System.out.println(\"IO\u5f02\u5e38: \" + e.getMessage());\n        } finally {\n            // \u624b\u52a8\u5173\u95ed\u8d44\u6e90\n            if (reader != null) {\n                try {\n                    reader.close();\n                } catch (IOException e) {\n                    System.out.println(\"\u5173\u95ed reader \u5931\u8d25\");\n                }\n            }\n            if (fis != null) {\n                try {\n                    fis.close();\n                } catch (IOException e) {\n                    System.out.println(\"\u5173\u95ed fis \u5931\u8d25\");\n                }\n            }\n        }\n    }\n\n    public static void tryWithResources() {\n        System.out.println(\"\\n=== try-with-resources \u65b9\u5f0f ===\");\n        // \u8d44\u6e90\u4f1a\u81ea\u52a8\u5173\u95ed\n        try (FileInputStream fis = new FileInputStream(\"test.txt\");\n             BufferedReader reader = new BufferedReader(new InputStreamReader(fis))) {\n\n            String line = reader.readLine();\n            System.out.println(\"\u8bfb\u53d6\u5185\u5bb9: \" + line);\n\n        } catch (IOException e) {\n            System.out.println(\"IO\u5f02\u5e38: \" + e.getMessage());\n        }\n        // \u4e0d\u9700\u8981 finally \u5757\uff0c\u8d44\u6e90\u81ea\u52a8\u5173\u95ed\n    }\n\n    public static void multipleResources() {\n        System.out.println(\"\\n=== \u591a\u4e2a\u8d44\u6e90 ===\");\n        try (Scanner scanner = new Scanner(System.in);\n             FileWriter writer = new FileWriter(\"output.txt\")) {\n\n            // \u4f7f\u7528\u591a\u4e2a\u8d44\u6e90\n            writer.write(\"Hello, World!\");\n            System.out.println(\"\u5199\u5165\u5b8c\u6210\");\n\n        } catch (IOException e) {\n            System.out.println(\"IO\u5f02\u5e38: \" + e.getMessage());\n        }\n    }\n\n    public static void customResource() {\n        System.out.println(\"\\n=== \u81ea\u5b9a\u4e49\u8d44\u6e90\u7c7b ===\");\n        try (MyResource resource = new MyResource(\"\u6d4b\u8bd5\u8d44\u6e90\")) {\n            resource.doSomething();\n        } catch (Exception e) {\n            System.out.println(\"\u5f02\u5e38: \" + e.getMessage());\n        }\n    }\n}\n\n// \u81ea\u5b9a\u4e49\u8d44\u6e90\u7c7b\uff0c\u5b9e\u73b0 AutoCloseable \u63a5\u53e3\nclass MyResource implements AutoCloseable {\n    private String name;\n\n    public MyResource(String name) {\n        this.name = name;\n        System.out.println(\"\u8d44\u6e90 \" + name + \" \u5df2\u521b\u5efa\");\n    }\n\n    public void doSomething() {\n        System.out.println(\"\u4f7f\u7528\u8d44\u6e90 \" + name);\n    }\n\n    @Override\n    public void close() throws Exception {\n        System.out.println(\"\u8d44\u6e90 \" + name + \" \u5df2\u5173\u95ed\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-exception/#_3","title":"\u4e09\u3001\u5f02\u5e38\u58f0\u660e\u548c\u629b\u51fa","text":""},{"location":"cs_base/language/java/java-exception/#31-throws","title":"3.1 throws \u58f0\u660e\u5f02\u5e38","text":"Java<pre><code>import java.io.*;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\npublic class ThrowsDemo {\n    public static void main(String[] args) {\n        try {\n            // \u8c03\u7528\u58f0\u660e\u5f02\u5e38\u7684\u65b9\u6cd5\n            readFile(\"test.txt\");\n            parseDate(\"2024-01-01\");\n            processData(null);\n        } catch (IOException e) {\n            System.out.println(\"IO\u5f02\u5e38: \" + e.getMessage());\n        } catch (ParseException e) {\n            System.out.println(\"\u89e3\u6790\u5f02\u5e38: \" + e.getMessage());\n        } catch (IllegalArgumentException e) {\n            System.out.println(\"\u53c2\u6570\u5f02\u5e38: \" + e.getMessage());\n        }\n    }\n\n    // \u58f0\u660e\u53ef\u80fd\u629b\u51fa\u7684\u68c0\u67e5\u5f02\u5e38\n    public static void readFile(String filename) throws IOException {\n        FileReader reader = new FileReader(filename);\n        // \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\n        reader.close();\n    }\n\n    // \u58f0\u660e\u591a\u4e2a\u5f02\u5e38\n    public static Date parseDate(String dateStr) throws ParseException, IllegalArgumentException {\n        if (dateStr == null || dateStr.trim().isEmpty()) {\n            throw new IllegalArgumentException(\"\u65e5\u671f\u5b57\u7b26\u4e32\u4e0d\u80fd\u4e3a\u7a7a\");\n        }\n\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n        return sdf.parse(dateStr);\n    }\n\n    // \u8fd0\u884c\u65f6\u5f02\u5e38\u4e0d\u9700\u8981\u58f0\u660e\uff0c\u4f46\u53ef\u4ee5\u58f0\u660e\n    public static void processData(String data) throws IllegalArgumentException {\n        if (data == null) {\n            throw new IllegalArgumentException(\"\u6570\u636e\u4e0d\u80fd\u4e3anull\");\n        }\n        System.out.println(\"\u5904\u7406\u6570\u636e: \" + data);\n    }\n\n    // \u65b9\u6cd5\u91cd\u5199\u65f6\u7684\u5f02\u5e38\u58f0\u660e\u89c4\u5219\n    public static void demonstrateOverrideRules() {\n        // \u5b50\u7c7b\u91cd\u5199\u65b9\u6cd5\u65f6\uff0c\u4e0d\u80fd\u58f0\u660e\u6bd4\u7236\u7c7b\u66f4\u591a\u7684\u68c0\u67e5\u5f02\u5e38\n    }\n}\n\n// \u6f14\u793a\u65b9\u6cd5\u91cd\u5199\u65f6\u7684\u5f02\u5e38\u89c4\u5219\nclass Parent {\n    public void method1() throws IOException {\n        // \u7236\u7c7b\u65b9\u6cd5\u58f0\u660e IOException\n    }\n\n    public void method2() {\n        // \u7236\u7c7b\u65b9\u6cd5\u4e0d\u58f0\u660e\u5f02\u5e38\n    }\n}\n\nclass Child extends Parent {\n    @Override\n    public void method1() throws FileNotFoundException {\n        // \u6b63\u786e\uff1aFileNotFoundException \u662f IOException \u7684\u5b50\u7c7b\n    }\n\n    @Override\n    public void method2() throws RuntimeException {\n        // \u6b63\u786e\uff1a\u53ef\u4ee5\u58f0\u660e\u8fd0\u884c\u65f6\u5f02\u5e38\n    }\n\n    // \u9519\u8bef\u793a\u4f8b\uff08\u7f16\u8bd1\u9519\u8bef\uff09\uff1a\n    // public void method2() throws IOException {\n    //     // \u9519\u8bef\uff1a\u4e0d\u80fd\u58f0\u660e\u6bd4\u7236\u7c7b\u66f4\u591a\u7684\u68c0\u67e5\u5f02\u5e38\n    // }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-exception/#32-throw","title":"3.2 throw \u629b\u51fa\u5f02\u5e38","text":"Java<pre><code>public class ThrowDemo {\n    public static void main(String[] args) {\n        try {\n            validateAge(150);\n            divide(10, 0);\n            processUser(null);\n        } catch (IllegalArgumentException e) {\n            System.out.println(\"\u53c2\u6570\u5f02\u5e38: \" + e.getMessage());\n        } catch (ArithmeticException e) {\n            System.out.println(\"\u7b97\u672f\u5f02\u5e38: \" + e.getMessage());\n        } catch (NullPointerException e) {\n            System.out.println(\"\u7a7a\u6307\u9488\u5f02\u5e38: \" + e.getMessage());\n        }\n    }\n\n    // \u629b\u51fa\u8fd0\u884c\u65f6\u5f02\u5e38\n    public static void validateAge(int age) {\n        if (age &lt; 0 || age &gt; 120) {\n            throw new IllegalArgumentException(\"\u5e74\u9f84\u5fc5\u987b\u5728 0-120 \u4e4b\u95f4\uff0c\u5f53\u524d\u503c: \" + age);\n        }\n        System.out.println(\"\u5e74\u9f84\u9a8c\u8bc1\u901a\u8fc7: \" + age);\n    }\n\n    // \u629b\u51fa\u7b97\u672f\u5f02\u5e38\n    public static int divide(int a, int b) {\n        if (b == 0) {\n            throw new ArithmeticException(\"\u9664\u6570\u4e0d\u80fd\u4e3a\u96f6\");\n        }\n        return a / b;\n    }\n\n    // \u629b\u51fa\u7a7a\u6307\u9488\u5f02\u5e38\n    public static void processUser(User user) {\n        if (user == null) {\n            throw new NullPointerException(\"\u7528\u6237\u5bf9\u8c61\u4e0d\u80fd\u4e3anull\");\n        }\n        System.out.println(\"\u5904\u7406\u7528\u6237: \" + user.getName());\n    }\n\n    // \u91cd\u65b0\u629b\u51fa\u5f02\u5e38\n    public static void rethrowException() {\n        try {\n            riskyOperation();\n        } catch (Exception e) {\n            System.out.println(\"\u8bb0\u5f55\u5f02\u5e38\u65e5\u5fd7: \" + e.getMessage());\n            // \u91cd\u65b0\u629b\u51fa\u5f02\u5e38\n            throw e;\n        }\n    }\n\n    public static void riskyOperation() {\n        throw new RuntimeException(\"\u64cd\u4f5c\u5931\u8d25\");\n    }\n}\n\nclass User {\n    private String name;\n\n    public User(String name) {\n        this.name = name;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-exception/#_4","title":"\u56db\u3001\u81ea\u5b9a\u4e49\u5f02\u5e38","text":""},{"location":"cs_base/language/java/java-exception/#41","title":"4.1 \u521b\u5efa\u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b","text":"Java<pre><code>// \u81ea\u5b9a\u4e49\u68c0\u67e5\u5f02\u5e38\nclass BusinessException extends Exception {\n    private int errorCode;\n\n    public BusinessException(String message) {\n        super(message);\n    }\n\n    public BusinessException(String message, Throwable cause) {\n        super(message, cause);\n    }\n\n    public BusinessException(int errorCode, String message) {\n        super(message);\n        this.errorCode = errorCode;\n    }\n\n    public BusinessException(int errorCode, String message, Throwable cause) {\n        super(message, cause);\n        this.errorCode = errorCode;\n    }\n\n    public int getErrorCode() {\n        return errorCode;\n    }\n}\n\n// \u81ea\u5b9a\u4e49\u8fd0\u884c\u65f6\u5f02\u5e38\nclass ValidationException extends RuntimeException {\n    private String field;\n    private Object value;\n\n    public ValidationException(String field, Object value, String message) {\n        super(String.format(\"\u5b57\u6bb5 '%s' \u7684\u503c '%s' \u9a8c\u8bc1\u5931\u8d25: %s\", field, value, message));\n        this.field = field;\n        this.value = value;\n    }\n\n    public String getField() {\n        return field;\n    }\n\n    public Object getValue() {\n        return value;\n    }\n}\n\n// \u5177\u4f53\u7684\u4e1a\u52a1\u5f02\u5e38\nclass UserNotFoundException extends BusinessException {\n    public UserNotFoundException(String userId) {\n        super(1001, \"\u7528\u6237\u4e0d\u5b58\u5728: \" + userId);\n    }\n}\n\nclass InsufficientBalanceException extends BusinessException {\n    private double currentBalance;\n    private double requiredAmount;\n\n    public InsufficientBalanceException(double currentBalance, double requiredAmount) {\n        super(1002, String.format(\"\u4f59\u989d\u4e0d\u8db3\uff0c\u5f53\u524d\u4f59\u989d: %.2f\uff0c\u9700\u8981\u91d1\u989d: %.2f\", \n                                  currentBalance, requiredAmount));\n        this.currentBalance = currentBalance;\n        this.requiredAmount = requiredAmount;\n    }\n\n    public double getCurrentBalance() {\n        return currentBalance;\n    }\n\n    public double getRequiredAmount() {\n        return requiredAmount;\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-exception/#42","title":"4.2 \u4f7f\u7528\u81ea\u5b9a\u4e49\u5f02\u5e38","text":"Java<pre><code>import java.util.HashMap;\nimport java.util.Map;\n\npublic class CustomExceptionDemo {\n    private static Map&lt;String, User&gt; userDatabase = new HashMap&lt;&gt;();\n    private static Map&lt;String, Double&gt; accountBalance = new HashMap&lt;&gt;();\n\n    static {\n        // \u521d\u59cb\u5316\u6d4b\u8bd5\u6570\u636e\n        userDatabase.put(\"user001\", new User(\"\u5f20\u4e09\"));\n        userDatabase.put(\"user002\", new User(\"\u674e\u56db\"));\n        accountBalance.put(\"user001\", 1000.0);\n        accountBalance.put(\"user002\", 500.0);\n    }\n\n    public static void main(String[] args) {\n        // \u6d4b\u8bd5\u7528\u6237\u67e5\u627e\n        testUserLookup();\n\n        // \u6d4b\u8bd5\u8f6c\u8d26\u64cd\u4f5c\n        testTransfer();\n\n        // \u6d4b\u8bd5\u6570\u636e\u9a8c\u8bc1\n        testValidation();\n    }\n\n    public static void testUserLookup() {\n        System.out.println(\"=== \u6d4b\u8bd5\u7528\u6237\u67e5\u627e ===\");\n        try {\n            User user = findUser(\"user001\");\n            System.out.println(\"\u627e\u5230\u7528\u6237: \" + user.getName());\n\n            User nonExistentUser = findUser(\"user999\");\n        } catch (UserNotFoundException e) {\n            System.out.println(\"\u5f02\u5e38\u4ee3\u7801: \" + e.getErrorCode());\n            System.out.println(\"\u5f02\u5e38\u4fe1\u606f: \" + e.getMessage());\n        }\n    }\n\n    public static void testTransfer() {\n        System.out.println(\"\\n=== \u6d4b\u8bd5\u8f6c\u8d26\u64cd\u4f5c ===\");\n        try {\n            transfer(\"user001\", \"user002\", 500.0);\n            System.out.println(\"\u8f6c\u8d26\u6210\u529f\");\n\n            transfer(\"user002\", \"user001\", 1000.0);  // \u4f59\u989d\u4e0d\u8db3\n        } catch (BusinessException e) {\n            System.out.println(\"\u4e1a\u52a1\u5f02\u5e38: \" + e.getMessage());\n            if (e instanceof InsufficientBalanceException) {\n                InsufficientBalanceException ibe = (InsufficientBalanceException) e;\n                System.out.println(\"\u5f53\u524d\u4f59\u989d: \" + ibe.getCurrentBalance());\n                System.out.println(\"\u9700\u8981\u91d1\u989d: \" + ibe.getRequiredAmount());\n            }\n        }\n    }\n\n    public static void testValidation() {\n        System.out.println(\"\\n=== \u6d4b\u8bd5\u6570\u636e\u9a8c\u8bc1 ===\");\n        try {\n            validateUser(\"\u5f20\u4e09\", 25, \"zhangsan@example.com\");\n            System.out.println(\"\u7528\u6237\u9a8c\u8bc1\u901a\u8fc7\");\n\n            validateUser(\"\", -5, \"invalid-email\");  // \u591a\u4e2a\u9a8c\u8bc1\u9519\u8bef\n        } catch (ValidationException e) {\n            System.out.println(\"\u9a8c\u8bc1\u5f02\u5e38: \" + e.getMessage());\n            System.out.println(\"\u9519\u8bef\u5b57\u6bb5: \" + e.getField());\n            System.out.println(\"\u9519\u8bef\u503c: \" + e.getValue());\n        }\n    }\n\n    // \u67e5\u627e\u7528\u6237\n    public static User findUser(String userId) throws UserNotFoundException {\n        User user = userDatabase.get(userId);\n        if (user == null) {\n            throw new UserNotFoundException(userId);\n        }\n        return user;\n    }\n\n    // \u8f6c\u8d26\u64cd\u4f5c\n    public static void transfer(String fromUserId, String toUserId, double amount) \n            throws BusinessException {\n        // \u68c0\u67e5\u7528\u6237\u662f\u5426\u5b58\u5728\n        findUser(fromUserId);\n        findUser(toUserId);\n\n        // \u68c0\u67e5\u4f59\u989d\n        double currentBalance = accountBalance.getOrDefault(fromUserId, 0.0);\n        if (currentBalance &lt; amount) {\n            throw new InsufficientBalanceException(currentBalance, amount);\n        }\n\n        // \u6267\u884c\u8f6c\u8d26\n        accountBalance.put(fromUserId, currentBalance - amount);\n        accountBalance.put(toUserId, accountBalance.getOrDefault(toUserId, 0.0) + amount);\n    }\n\n    // \u7528\u6237\u6570\u636e\u9a8c\u8bc1\n    public static void validateUser(String name, int age, String email) {\n        if (name == null || name.trim().isEmpty()) {\n            throw new ValidationException(\"name\", name, \"\u59d3\u540d\u4e0d\u80fd\u4e3a\u7a7a\");\n        }\n\n        if (age &lt; 0 || age &gt; 120) {\n            throw new ValidationException(\"age\", age, \"\u5e74\u9f84\u5fc5\u987b\u57280-120\u4e4b\u95f4\");\n        }\n\n        if (email == null || !email.contains(\"@\")) {\n            throw new ValidationException(\"email\", email, \"\u90ae\u7bb1\u683c\u5f0f\u4e0d\u6b63\u786e\");\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-exception/#_5","title":"\u4e94\u3001\u5f02\u5e38\u5904\u7406\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"cs_base/language/java/java-exception/#51","title":"5.1 \u5f02\u5e38\u5904\u7406\u539f\u5219","text":"Java<pre><code>import java.io.*;\nimport java.util.logging.Logger;\n\npublic class ExceptionBestPracticesDemo {\n    private static final Logger logger = Logger.getLogger(ExceptionBestPracticesDemo.class.getName());\n\n    public static void main(String[] args) {\n        // 1. \u5177\u4f53\u5f02\u5e38\u5904\u7406\n        specificExceptionHandling();\n\n        // 2. \u5f02\u5e38\u4fe1\u606f\u8bb0\u5f55\n        exceptionLogging();\n\n        // 3. \u8d44\u6e90\u6e05\u7406\n        resourceCleanup();\n\n        // 4. \u5f02\u5e38\u8f6c\u6362\n        exceptionTranslation();\n    }\n\n    // 1. \u5177\u4f53\u5f02\u5e38\u5904\u7406 - \u597d\u7684\u505a\u6cd5\n    public static void specificExceptionHandling() {\n        System.out.println(\"=== \u5177\u4f53\u5f02\u5e38\u5904\u7406 ===\");\n\n        // \u597d\u7684\u505a\u6cd5\uff1a\u6355\u83b7\u5177\u4f53\u5f02\u5e38\n        try {\n            int[] array = {1, 2, 3};\n            System.out.println(array[5]);\n        } catch (ArrayIndexOutOfBoundsException e) {\n            System.out.println(\"\u6570\u7ec4\u7d22\u5f15\u8d8a\u754c: \" + e.getMessage());\n            // \u5177\u4f53\u7684\u5904\u7406\u903b\u8f91\n        }\n\n        // \u907f\u514d\u7684\u505a\u6cd5\uff1a\u6355\u83b7\u8fc7\u4e8e\u5bbd\u6cdb\u7684\u5f02\u5e38\n        try {\n            // \u4e00\u4e9b\u64cd\u4f5c\n        } catch (Exception e) {\n            // \u8fd9\u6837\u505a\u4f1a\u63a9\u76d6\u5177\u4f53\u7684\u5f02\u5e38\u7c7b\u578b\n            System.out.println(\"\u53d1\u751f\u5f02\u5e38: \" + e.getMessage());\n        }\n    }\n\n    // 2. \u5f02\u5e38\u4fe1\u606f\u8bb0\u5f55\n    public static void exceptionLogging() {\n        System.out.println(\"\\n=== \u5f02\u5e38\u4fe1\u606f\u8bb0\u5f55 ===\");\n\n        try {\n            riskyOperation();\n        } catch (Exception e) {\n            // \u8bb0\u5f55\u5b8c\u6574\u7684\u5f02\u5e38\u4fe1\u606f\n            logger.severe(\"\u64cd\u4f5c\u5931\u8d25: \" + e.getMessage());\n\n            // \u6253\u5370\u5806\u6808\u8ddf\u8e2a\uff08\u5f00\u53d1\u73af\u5883\uff09\n            e.printStackTrace();\n\n            // \u8bb0\u5f55\u5f02\u5e38\u4e0a\u4e0b\u6587\u4fe1\u606f\n            System.out.println(\"\u5f02\u5e38\u53d1\u751f\u65f6\u95f4: \" + java.time.LocalDateTime.now());\n            System.out.println(\"\u5f02\u5e38\u7c7b\u578b: \" + e.getClass().getSimpleName());\n            System.out.println(\"\u5f02\u5e38\u6d88\u606f: \" + e.getMessage());\n        }\n    }\n\n    // 3. \u8d44\u6e90\u6e05\u7406\n    public static void resourceCleanup() {\n        System.out.println(\"\\n=== \u8d44\u6e90\u6e05\u7406 ===\");\n\n        // \u63a8\u8350\uff1a\u4f7f\u7528 try-with-resources\n        try (FileInputStream fis = new FileInputStream(\"test.txt\");\n             BufferedReader reader = new BufferedReader(new InputStreamReader(fis))) {\n\n            // \u4f7f\u7528\u8d44\u6e90\n            String line = reader.readLine();\n\n        } catch (IOException e) {\n            System.out.println(\"IO\u5f02\u5e38: \" + e.getMessage());\n        }\n        // \u8d44\u6e90\u81ea\u52a8\u5173\u95ed\n    }\n\n    // 4. \u5f02\u5e38\u8f6c\u6362\n    public static void exceptionTranslation() {\n        System.out.println(\"\\n=== \u5f02\u5e38\u8f6c\u6362 ===\");\n\n        try {\n            lowLevelOperation();\n        } catch (IOException e) {\n            // \u5c06\u4f4e\u7ea7\u5f02\u5e38\u8f6c\u6362\u4e3a\u4e1a\u52a1\u5f02\u5e38\n            throw new BusinessException(\"\u4e1a\u52a1\u64cd\u4f5c\u5931\u8d25\", e);\n        }\n    }\n\n    public static void riskyOperation() {\n        throw new RuntimeException(\"\u6a21\u62df\u5f02\u5e38\");\n    }\n\n    public static void lowLevelOperation() throws IOException {\n        throw new IOException(\"\u4f4e\u7ea7IO\u5f02\u5e38\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-exception/#52","title":"5.2 \u5f02\u5e38\u5904\u7406\u53cd\u6a21\u5f0f\uff08\u5e94\u907f\u514d\u7684\u505a\u6cd5\uff09","text":"Java<pre><code>public class ExceptionAntiPatternsDemo {\n    public static void main(String[] args) {\n        // \u6f14\u793a\u5e94\u8be5\u907f\u514d\u7684\u5f02\u5e38\u5904\u7406\u65b9\u5f0f\n        demonstrateAntiPatterns();\n    }\n\n    public static void demonstrateAntiPatterns() {\n        System.out.println(\"=== \u5f02\u5e38\u5904\u7406\u53cd\u6a21\u5f0f ===\");\n\n        // \u53cd\u6a21\u5f0f1\uff1a\u5ffd\u7565\u5f02\u5e38\n        badPattern1_IgnoreException();\n\n        // \u53cd\u6a21\u5f0f2\uff1a\u6355\u83b7\u5f02\u5e38\u4f46\u4e0d\u5904\u7406\n        badPattern2_CatchAndIgnore();\n\n        // \u53cd\u6a21\u5f0f3\uff1a\u8fc7\u5ea6\u4f7f\u7528\u5f02\u5e38\n        badPattern3_OveruseException();\n\n        // \u53cd\u6a21\u5f0f4\uff1a\u5f02\u5e38\u4fe1\u606f\u4e0d\u660e\u786e\n        badPattern4_VagueExceptionMessage();\n    }\n\n    // \u53cd\u6a21\u5f0f1\uff1a\u5ffd\u7565\u5f02\u5e38\uff08\u975e\u5e38\u5371\u9669\uff09\n    public static void badPattern1_IgnoreException() {\n        System.out.println(\"\\n--- \u53cd\u6a21\u5f0f1\uff1a\u5ffd\u7565\u5f02\u5e38 ---\");\n\n        // \u9519\u8bef\u505a\u6cd5\uff1a\u4e0d\u5904\u7406\u53ef\u80fd\u7684\u5f02\u5e38\n        try {\n            int result = Integer.parseInt(\"abc\");\n        } catch (NumberFormatException e) {\n            // \u4ec0\u4e48\u90fd\u4e0d\u505a - \u8fd9\u662f\u5371\u9669\u7684\uff01\n        }\n\n        // \u6b63\u786e\u505a\u6cd5\uff1a\u81f3\u5c11\u8bb0\u5f55\u5f02\u5e38\n        try {\n            int result = Integer.parseInt(\"abc\");\n        } catch (NumberFormatException e) {\n            System.out.println(\"\u6570\u5b57\u683c\u5f0f\u9519\u8bef: \" + e.getMessage());\n            // \u6216\u8005\u91cd\u65b0\u629b\u51fa\u5f02\u5e38\n        }\n    }\n\n    // \u53cd\u6a21\u5f0f2\uff1a\u6355\u83b7\u5f02\u5e38\u4f46\u4e0d\u5904\u7406\n    public static void badPattern2_CatchAndIgnore() {\n        System.out.println(\"\\n--- \u53cd\u6a21\u5f0f2\uff1a\u6355\u83b7\u5f02\u5e38\u4f46\u4e0d\u5904\u7406 ---\");\n\n        // \u9519\u8bef\u505a\u6cd5\uff1a\u6355\u83b7\u6240\u6709\u5f02\u5e38\n        try {\n            // \u590d\u6742\u7684\u64cd\u4f5c\n            complexOperation();\n        } catch (Exception e) {\n            // \u53ea\u662f\u7b80\u5355\u6253\u5370\uff0c\u6ca1\u6709\u5177\u4f53\u5904\u7406\n            System.out.println(\"\u51fa\u9519\u4e86: \" + e.getMessage());\n        }\n\n        // \u6b63\u786e\u505a\u6cd5\uff1a\u9488\u5bf9\u4e0d\u540c\u5f02\u5e38\u8fdb\u884c\u4e0d\u540c\u5904\u7406\n        try {\n            complexOperation();\n        } catch (IllegalArgumentException e) {\n            System.out.println(\"\u53c2\u6570\u9519\u8bef: \" + e.getMessage());\n            // \u5177\u4f53\u7684\u53c2\u6570\u9519\u8bef\u5904\u7406\n        } catch (RuntimeException e) {\n            System.out.println(\"\u8fd0\u884c\u65f6\u9519\u8bef: \" + e.getMessage());\n            // \u5177\u4f53\u7684\u8fd0\u884c\u65f6\u9519\u8bef\u5904\u7406\n        }\n    }\n\n    // \u53cd\u6a21\u5f0f3\uff1a\u8fc7\u5ea6\u4f7f\u7528\u5f02\u5e38\u8fdb\u884c\u6d41\u7a0b\u63a7\u5236\n    public static void badPattern3_OveruseException() {\n        System.out.println(\"\\n--- \u53cd\u6a21\u5f0f3\uff1a\u8fc7\u5ea6\u4f7f\u7528\u5f02\u5e38 ---\");\n\n        // \u9519\u8bef\u505a\u6cd5\uff1a\u4f7f\u7528\u5f02\u5e38\u63a7\u5236\u6b63\u5e38\u6d41\u7a0b\n        try {\n            for (int i = 0; ; i++) {\n                System.out.println(getArrayElement(new int[]{1, 2, 3}, i));\n            }\n        } catch (ArrayIndexOutOfBoundsException e) {\n            // \u4f7f\u7528\u5f02\u5e38\u6765\u7ed3\u675f\u5faa\u73af - \u8fd9\u662f\u9519\u8bef\u7684\uff01\n            System.out.println(\"\u6570\u7ec4\u904d\u5386\u7ed3\u675f\");\n        }\n\n        // \u6b63\u786e\u505a\u6cd5\uff1a\u4f7f\u7528\u6b63\u5e38\u7684\u6d41\u7a0b\u63a7\u5236\n        int[] array = {1, 2, 3};\n        for (int i = 0; i &lt; array.length; i++) {\n            System.out.println(array[i]);\n        }\n    }\n\n    // \u53cd\u6a21\u5f0f4\uff1a\u5f02\u5e38\u4fe1\u606f\u4e0d\u660e\u786e\n    public static void badPattern4_VagueExceptionMessage() {\n        System.out.println(\"\\n--- \u53cd\u6a21\u5f0f4\uff1a\u5f02\u5e38\u4fe1\u606f\u4e0d\u660e\u786e ---\");\n\n        // \u9519\u8bef\u505a\u6cd5\uff1a\u5f02\u5e38\u4fe1\u606f\u4e0d\u660e\u786e\n        try {\n            validateUserData(\"\", -1);\n        } catch (IllegalArgumentException e) {\n            System.out.println(\"\u53c2\u6570\u9519\u8bef\");  // \u4fe1\u606f\u592a\u6a21\u7cca\n        }\n\n        // \u6b63\u786e\u505a\u6cd5\uff1a\u63d0\u4f9b\u8be6\u7ec6\u7684\u5f02\u5e38\u4fe1\u606f\n        try {\n            validateUserDataCorrect(\"\", -1);\n        } catch (IllegalArgumentException e) {\n            System.out.println(\"\u8be6\u7ec6\u9519\u8bef\u4fe1\u606f: \" + e.getMessage());\n        }\n    }\n\n    public static void complexOperation() {\n        if (Math.random() &gt; 0.5) {\n            throw new IllegalArgumentException(\"\u968f\u673a\u53c2\u6570\u9519\u8bef\");\n        }\n        throw new RuntimeException(\"\u968f\u673a\u8fd0\u884c\u65f6\u9519\u8bef\");\n    }\n\n    public static int getArrayElement(int[] array, int index) {\n        return array[index];  // \u53ef\u80fd\u629b\u51fa ArrayIndexOutOfBoundsException\n    }\n\n    public static void validateUserData(String name, int age) {\n        if (name.isEmpty()) {\n            throw new IllegalArgumentException(\"\u9519\u8bef\");  // \u4fe1\u606f\u4e0d\u660e\u786e\n        }\n        if (age &lt; 0) {\n            throw new IllegalArgumentException(\"\u9519\u8bef\");  // \u4fe1\u606f\u4e0d\u660e\u786e\n        }\n    }\n\n    public static void validateUserDataCorrect(String name, int age) {\n        if (name.isEmpty()) {\n            throw new IllegalArgumentException(\"\u7528\u6237\u540d\u4e0d\u80fd\u4e3a\u7a7a\");\n        }\n        if (age &lt; 0) {\n            throw new IllegalArgumentException(\"\u5e74\u9f84\u4e0d\u80fd\u4e3a\u8d1f\u6570\uff0c\u5f53\u524d\u503c: \" + age);\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-exception/#53-java-7","title":"5.3 Java 7+ \u5f02\u5e38\u5904\u7406\u589e\u5f3a","text":"Java<pre><code>import java.io.*;\nimport java.sql.*;\n\npublic class Java7ExceptionEnhancementsDemo {\n    public static void main(String[] args) {\n        // 1. \u591a\u5f02\u5e38\u6355\u83b7\n        multiCatchDemo();\n\n        // 2. \u91cd\u65b0\u629b\u51fa\u5f02\u5e38\u7684\u7c7b\u578b\u63a8\u65ad\n        rethrowDemo();\n\n        // 3. try-with-resources \u7684\u6291\u5236\u5f02\u5e38\n        suppressedExceptionsDemo();\n    }\n\n    // 1. \u591a\u5f02\u5e38\u6355\u83b7\uff08Java 7+\uff09\n    public static void multiCatchDemo() {\n        System.out.println(\"=== \u591a\u5f02\u5e38\u6355\u83b7 ===\");\n\n        // Java 7 \u4e4b\u524d\u7684\u5199\u6cd5\n        try {\n            riskyOperation();\n        } catch (IOException e) {\n            System.out.println(\"IO\u5f02\u5e38: \" + e.getMessage());\n            logException(e);\n        } catch (SQLException e) {\n            System.out.println(\"SQL\u5f02\u5e38: \" + e.getMessage());\n            logException(e);\n        }\n\n        // Java 7+ \u7684\u5199\u6cd5\uff1a\u591a\u5f02\u5e38\u6355\u83b7\n        try {\n            riskyOperation();\n        } catch (IOException | SQLException e) {\n            System.out.println(\"IO\u6216SQL\u5f02\u5e38: \" + e.getMessage());\n            logException(e);\n            // \u6ce8\u610f\uff1ae \u662f final \u7684\uff0c\u4e0d\u80fd\u91cd\u65b0\u8d4b\u503c\n        }\n    }\n\n    // 2. \u91cd\u65b0\u629b\u51fa\u5f02\u5e38\u7684\u7c7b\u578b\u63a8\u65ad\uff08Java 7+\uff09\n    public static void rethrowDemo() throws IOException, SQLException {\n        System.out.println(\"\\n=== \u91cd\u65b0\u629b\u51fa\u5f02\u5e38\u7684\u7c7b\u578b\u63a8\u65ad ===\");\n\n        try {\n            riskyOperation();\n        } catch (Exception e) {\n            System.out.println(\"\u6355\u83b7\u5f02\u5e38: \" + e.getClass().getSimpleName());\n            // Java 7+ \u53ef\u4ee5\u63a8\u65ad\u51fa\u5b9e\u9645\u7684\u5f02\u5e38\u7c7b\u578b\n            throw e;  // \u7f16\u8bd1\u5668\u77e5\u9053\u8fd9\u91cc\u53ea\u53ef\u80fd\u629b\u51fa IOException \u6216 SQLException\n        }\n    }\n\n    // 3. try-with-resources \u7684\u6291\u5236\u5f02\u5e38\n    public static void suppressedExceptionsDemo() {\n        System.out.println(\"\\n=== \u6291\u5236\u5f02\u5e38\u6f14\u793a ===\");\n\n        try (ProblematicResource resource = new ProblematicResource()) {\n            resource.doSomething();\n        } catch (Exception e) {\n            System.out.println(\"\u4e3b\u5f02\u5e38: \" + e.getMessage());\n\n            // \u68c0\u67e5\u6291\u5236\u7684\u5f02\u5e38\n            Throwable[] suppressed = e.getSuppressed();\n            for (Throwable t : suppressed) {\n                System.out.println(\"\u6291\u5236\u5f02\u5e38: \" + t.getMessage());\n            }\n        }\n    }\n\n    public static void riskyOperation() throws IOException, SQLException {\n        double random = Math.random();\n        if (random &lt; 0.3) {\n            throw new IOException(\"IO\u64cd\u4f5c\u5931\u8d25\");\n        } else if (random &lt; 0.6) {\n            throw new SQLException(\"\u6570\u636e\u5e93\u64cd\u4f5c\u5931\u8d25\");\n        }\n        System.out.println(\"\u64cd\u4f5c\u6210\u529f\");\n    }\n\n    public static void logException(Exception e) {\n        System.out.println(\"\u8bb0\u5f55\u5f02\u5e38\u65e5\u5fd7: \" + e.getClass().getSimpleName());\n    }\n}\n\n// \u6f14\u793a\u6291\u5236\u5f02\u5e38\u7684\u8d44\u6e90\u7c7b\nclass ProblematicResource implements AutoCloseable {\n    public void doSomething() throws Exception {\n        throw new Exception(\"\u4e1a\u52a1\u64cd\u4f5c\u5f02\u5e38\");\n    }\n\n    @Override\n    public void close() throws Exception {\n        throw new Exception(\"\u5173\u95ed\u8d44\u6e90\u5f02\u5e38\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-exception/#_6","title":"\u603b\u7ed3","text":"<p>Java \u5f02\u5e38\u5904\u7406\u7684\u6838\u5fc3\u8981\u70b9\uff1a</p> <ol> <li>\u5f02\u5e38\u4f53\u7cfb\uff1aError\u3001RuntimeException\u3001\u68c0\u67e5\u5f02\u5e38\u7684\u533a\u522b</li> <li>\u5904\u7406\u8bed\u6cd5\uff1atry-catch-finally\u3001try-with-resources</li> <li>\u5f02\u5e38\u58f0\u660e\uff1athrows \u58f0\u660e\u3001throw \u629b\u51fa</li> <li>\u81ea\u5b9a\u4e49\u5f02\u5e38\uff1a\u7ee7\u627f\u5408\u9002\u7684\u5f02\u5e38\u7c7b\uff0c\u63d0\u4f9b\u6709\u610f\u4e49\u7684\u4fe1\u606f</li> <li>\u6700\u4f73\u5b9e\u8df5\uff1a    - \u6355\u83b7\u5177\u4f53\u5f02\u5e38\u800c\u975e Exception    - \u63d0\u4f9b\u6709\u610f\u4e49\u7684\u5f02\u5e38\u4fe1\u606f    - \u6b63\u786e\u6e05\u7406\u8d44\u6e90    - \u4e0d\u8981\u5ffd\u7565\u5f02\u5e38    - \u4e0d\u8981\u8fc7\u5ea6\u4f7f\u7528\u5f02\u5e38\u8fdb\u884c\u6d41\u7a0b\u63a7\u5236</li> </ol> <p>\u8bbe\u8ba1\u539f\u5219\uff1a\u5f02\u5e38\u5e94\u8be5\u7528\u4e8e\u5904\u7406\u771f\u6b63\u7684\u5f02\u5e38\u60c5\u51b5\uff0c\u800c\u4e0d\u662f\u6b63\u5e38\u7684\u7a0b\u5e8f\u6d41\u7a0b\u63a7\u5236\u3002\u597d\u7684\u5f02\u5e38\u5904\u7406\u80fd\u591f\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002</p>"},{"location":"cs_base/language/java/java-oop/","title":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b","text":""},{"location":"cs_base/language/java/java-oop/#_1","title":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b","text":"<p> \u7ea6 463 \u4e2a\u5b57  589 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p> <p>\u672c\u7ae0\u5185\u5bb9</p> <p>\u672c\u7ae0\u4ecb\u7ecd Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u6838\u5fc3\u6982\u5ff5\uff1a\u7c7b\u4e0e\u5bf9\u8c61\u3001\u7ee7\u627f\u3001\u591a\u6001\u3001\u5c01\u88c5\uff0c\u4ee5\u53ca\u8bbf\u95ee\u4fee\u9970\u7b26\u548c final \u5173\u952e\u5b57\u3002</p>"},{"location":"cs_base/language/java/java-oop/#_2","title":"\u4e00\u3001\u7c7b\u4e0e\u5bf9\u8c61","text":""},{"location":"cs_base/language/java/java-oop/#11","title":"1.1 \u7c7b\u7684\u5b9a\u4e49","text":"<p>\u7c7b\u662f\u5bf9\u8c61\u7684\u6a21\u677f\uff0c\u5b9a\u4e49\u4e86\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u884c\u4e3a\uff1a</p> Java<pre><code>public class Student {\n    // \u5c5e\u6027\uff08\u6210\u5458\u53d8\u91cf\uff09\n    private String name;\n    private int age;\n    private double score;\n\n    // \u6784\u9020\u65b9\u6cd5\n    public Student() {\n        // \u65e0\u53c2\u6784\u9020\u65b9\u6cd5\n    }\n\n    public Student(String name, int age, double score) {\n        this.name = name;\n        this.age = age;\n        this.score = score;\n    }\n\n    // \u65b9\u6cd5\uff08\u6210\u5458\u65b9\u6cd5\uff09\n    public void study() {\n        System.out.println(name + \"\u6b63\u5728\u5b66\u4e60\");\n    }\n\n    public void showInfo() {\n        System.out.println(\"\u59d3\u540d\uff1a\" + name + \"\uff0c\u5e74\u9f84\uff1a\" + age + \"\uff0c\u6210\u7ee9\uff1a\" + score);\n    }\n\n    // getter \u548c setter \u65b9\u6cd5\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        if (age &gt; 0 &amp;&amp; age &lt; 150) {\n            this.age = age;\n        }\n    }\n\n    public double getScore() {\n        return score;\n    }\n\n    public void setScore(double score) {\n        if (score &gt;= 0 &amp;&amp; score &lt;= 100) {\n            this.score = score;\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#12","title":"1.2 \u5bf9\u8c61\u7684\u521b\u5efa\u548c\u4f7f\u7528","text":"Java<pre><code>public class TestStudent {\n    public static void main(String[] args) {\n        // \u521b\u5efa\u5bf9\u8c61\n        Student student1 = new Student();\n        Student student2 = new Student(\"\u5f20\u4e09\", 20, 85.5);\n\n        // \u4f7f\u7528\u5bf9\u8c61\n        student1.setName(\"\u674e\u56db\");\n        student1.setAge(19);\n        student1.setScore(92.0);\n\n        student1.showInfo();\n        student1.study();\n\n        student2.showInfo();\n        student2.study();\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#13-this","title":"1.3 this \u5173\u952e\u5b57","text":"<p><code>this</code> \u5173\u952e\u5b57\u4ee3\u8868\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\uff1a</p> Java<pre><code>public class Person {\n    private String name;\n    private int age;\n\n    public Person(String name, int age) {\n        this.name = name;  // this.name \u6307\u5f53\u524d\u5bf9\u8c61\u7684 name \u5c5e\u6027\n        this.age = age;    // this.age \u6307\u5f53\u524d\u5bf9\u8c61\u7684 age \u5c5e\u6027\n    }\n\n    public void setName(String name) {\n        this.name = name;  // \u533a\u5206\u53c2\u6570 name \u548c\u5c5e\u6027 name\n    }\n\n    public Person getOlder(Person other) {\n        return this.age &gt; other.age ? this : other;\n    }\n\n    public void introduce() {\n        System.out.println(\"\u6211\u662f \" + this.name);  // this \u53ef\u4ee5\u7701\u7565\n        this.showAge();  // \u8c03\u7528\u5f53\u524d\u5bf9\u8c61\u7684\u65b9\u6cd5\n    }\n\n    private void showAge() {\n        System.out.println(\"\u6211\u4eca\u5e74 \" + age + \" \u5c81\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#encapsulation","title":"\u4e8c\u3001\u5c01\u88c5\uff08Encapsulation\uff09","text":""},{"location":"cs_base/language/java/java-oop/#21","title":"2.1 \u5c01\u88c5\u7684\u6982\u5ff5","text":"<p>\u5c01\u88c5\u662f\u5c06\u6570\u636e\u548c\u64cd\u4f5c\u6570\u636e\u7684\u65b9\u6cd5\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u5e76\u9690\u85cf\u5185\u90e8\u5b9e\u73b0\u7ec6\u8282\uff1a</p> Java<pre><code>public class BankAccount {\n    private double balance;  // \u79c1\u6709\u5c5e\u6027\uff0c\u5916\u90e8\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\n    private String accountNumber;\n\n    public BankAccount(String accountNumber, double initialBalance) {\n        this.accountNumber = accountNumber;\n        this.balance = initialBalance;\n    }\n\n    // \u63d0\u4f9b\u516c\u5171\u65b9\u6cd5\u6765\u64cd\u4f5c\u79c1\u6709\u6570\u636e\n    public void deposit(double amount) {\n        if (amount &gt; 0) {\n            balance += amount;\n            System.out.println(\"\u5b58\u6b3e\u6210\u529f\uff0c\u4f59\u989d\uff1a\" + balance);\n        } else {\n            System.out.println(\"\u5b58\u6b3e\u91d1\u989d\u5fc5\u987b\u5927\u4e8e0\");\n        }\n    }\n\n    public void withdraw(double amount) {\n        if (amount &gt; 0 &amp;&amp; amount &lt;= balance) {\n            balance -= amount;\n            System.out.println(\"\u53d6\u6b3e\u6210\u529f\uff0c\u4f59\u989d\uff1a\" + balance);\n        } else {\n            System.out.println(\"\u53d6\u6b3e\u5931\u8d25\uff1a\u91d1\u989d\u65e0\u6548\u6216\u4f59\u989d\u4e0d\u8db3\");\n        }\n    }\n\n    public double getBalance() {\n        return balance;  // \u53ea\u8bfb\u8bbf\u95ee\n    }\n\n    public String getAccountNumber() {\n        return accountNumber;\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#22","title":"2.2 \u8bbf\u95ee\u4fee\u9970\u7b26","text":"\u4fee\u9970\u7b26 \u540c\u4e00\u7c7b \u540c\u4e00\u5305 \u4e0d\u540c\u5305\u5b50\u7c7b \u4e0d\u540c\u5305\u975e\u5b50\u7c7b <code>private</code> \u2713 \u2717 \u2717 \u2717 \u9ed8\u8ba4\uff08\u5305\u8bbf\u95ee\uff09 \u2713 \u2713 \u2717 \u2717 <code>protected</code> \u2713 \u2713 \u2713 \u2717 <code>public</code> \u2713 \u2713 \u2713 \u2713 Java<pre><code>public class AccessExample {\n    private int privateField = 1;      // \u53ea\u80fd\u5728\u672c\u7c7b\u4e2d\u8bbf\u95ee\n    int packageField = 2;              // \u5305\u8bbf\u95ee\u6743\u9650\n    protected int protectedField = 3;   // \u53d7\u4fdd\u62a4\u8bbf\u95ee\u6743\u9650\n    public int publicField = 4;        // \u516c\u5171\u8bbf\u95ee\u6743\u9650\n\n    private void privateMethod() {\n        System.out.println(\"\u79c1\u6709\u65b9\u6cd5\");\n    }\n\n    void packageMethod() {\n        System.out.println(\"\u5305\u8bbf\u95ee\u65b9\u6cd5\");\n    }\n\n    protected void protectedMethod() {\n        System.out.println(\"\u53d7\u4fdd\u62a4\u65b9\u6cd5\");\n    }\n\n    public void publicMethod() {\n        System.out.println(\"\u516c\u5171\u65b9\u6cd5\");\n        privateMethod();  // \u5728\u540c\u4e00\u7c7b\u4e2d\u53ef\u4ee5\u8bbf\u95ee\u79c1\u6709\u65b9\u6cd5\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#inheritance","title":"\u4e09\u3001\u7ee7\u627f\uff08Inheritance\uff09","text":""},{"location":"cs_base/language/java/java-oop/#31","title":"3.1 \u7ee7\u627f\u7684\u57fa\u672c\u6982\u5ff5","text":"<p>\u7ee7\u627f\u5141\u8bb8\u4e00\u4e2a\u7c7b\u83b7\u5f97\u53e6\u4e00\u4e2a\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff1a</p> Java<pre><code>// \u7236\u7c7b\uff08\u57fa\u7c7b\u3001\u8d85\u7c7b\uff09\npublic class Animal {\n    protected String name;\n    protected int age;\n\n    public Animal(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public void eat() {\n        System.out.println(name + \"\u6b63\u5728\u5403\u4e1c\u897f\");\n    }\n\n    public void sleep() {\n        System.out.println(name + \"\u6b63\u5728\u7761\u89c9\");\n    }\n\n    public void showInfo() {\n        System.out.println(\"\u540d\u5b57\uff1a\" + name + \"\uff0c\u5e74\u9f84\uff1a\" + age);\n    }\n}\n\n// \u5b50\u7c7b\uff08\u6d3e\u751f\u7c7b\uff09\npublic class Dog extends Animal {\n    private String breed;  // \u5b50\u7c7b\u7279\u6709\u5c5e\u6027\n\n    public Dog(String name, int age, String breed) {\n        super(name, age);  // \u8c03\u7528\u7236\u7c7b\u6784\u9020\u65b9\u6cd5\n        this.breed = breed;\n    }\n\n    // \u5b50\u7c7b\u7279\u6709\u65b9\u6cd5\n    public void bark() {\n        System.out.println(name + \"\u6b63\u5728\u6c6a\u6c6a\u53eb\");\n    }\n\n    // \u91cd\u5199\u7236\u7c7b\u65b9\u6cd5\n    @Override\n    public void showInfo() {\n        super.showInfo();  // \u8c03\u7528\u7236\u7c7b\u65b9\u6cd5\n        System.out.println(\"\u54c1\u79cd\uff1a\" + breed);\n    }\n}\n\n// \u53e6\u4e00\u4e2a\u5b50\u7c7b\npublic class Cat extends Animal {\n    public Cat(String name, int age) {\n        super(name, age);\n    }\n\n    public void meow() {\n        System.out.println(name + \"\u6b63\u5728\u55b5\u55b5\u53eb\");\n    }\n\n    @Override\n    public void eat() {\n        System.out.println(name + \"\u6b63\u5728\u4f18\u96c5\u5730\u5403\u732b\u7cae\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#32-super","title":"3.2 super \u5173\u952e\u5b57","text":"<p><code>super</code> \u5173\u952e\u5b57\u7528\u4e8e\u8bbf\u95ee\u7236\u7c7b\u7684\u6210\u5458\uff1a</p> Java<pre><code>public class Vehicle {\n    protected String brand;\n    protected double speed;\n\n    public Vehicle(String brand) {\n        this.brand = brand;\n        this.speed = 0;\n    }\n\n    public void start() {\n        System.out.println(brand + \"\u542f\u52a8\u4e86\");\n    }\n\n    public void accelerate(double increment) {\n        speed += increment;\n        System.out.println(\"\u5f53\u524d\u901f\u5ea6\uff1a\" + speed + \" km/h\");\n    }\n}\n\npublic class Car extends Vehicle {\n    private int doors;\n\n    public Car(String brand, int doors) {\n        super(brand);  // \u8c03\u7528\u7236\u7c7b\u6784\u9020\u65b9\u6cd5\n        this.doors = doors;\n    }\n\n    @Override\n    public void start() {\n        super.start();  // \u8c03\u7528\u7236\u7c7b\u7684 start \u65b9\u6cd5\n        System.out.println(\"\u6c7d\u8f66\u51c6\u5907\u5c31\u7eea\");\n    }\n\n    @Override\n    public void accelerate(double increment) {\n        if (speed + increment &lt;= 200) {  // \u6c7d\u8f66\u9650\u901f\n            super.accelerate(increment);  // \u8c03\u7528\u7236\u7c7b\u65b9\u6cd5\n        } else {\n            System.out.println(\"\u8d85\u901f\u8b66\u544a\uff01\");\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#33-override","title":"3.3 \u65b9\u6cd5\u91cd\u5199\uff08Override\uff09","text":"<p>\u5b50\u7c7b\u53ef\u4ee5\u91cd\u5199\u7236\u7c7b\u7684\u65b9\u6cd5\u6765\u63d0\u4f9b\u7279\u5b9a\u7684\u5b9e\u73b0\uff1a</p> Java<pre><code>public class Shape {\n    protected double area;\n\n    public void calculateArea() {\n        System.out.println(\"\u8ba1\u7b97\u56fe\u5f62\u9762\u79ef\");\n    }\n\n    public void display() {\n        System.out.println(\"\u8fd9\u662f\u4e00\u4e2a\u56fe\u5f62\uff0c\u9762\u79ef\uff1a\" + area);\n    }\n}\n\npublic class Circle extends Shape {\n    private double radius;\n\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    @Override  // \u6ce8\u89e3\uff0c\u8868\u793a\u8fd9\u662f\u91cd\u5199\u7684\u65b9\u6cd5\n    public void calculateArea() {\n        area = Math.PI * radius * radius;\n        System.out.println(\"\u8ba1\u7b97\u5706\u5f62\u9762\u79ef\");\n    }\n\n    @Override\n    public void display() {\n        System.out.println(\"\u8fd9\u662f\u4e00\u4e2a\u5706\u5f62\uff0c\u534a\u5f84\uff1a\" + radius + \"\uff0c\u9762\u79ef\uff1a\" + area);\n    }\n}\n\npublic class Rectangle extends Shape {\n    private double width;\n    private double height;\n\n    public Rectangle(double width, double height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    @Override\n    public void calculateArea() {\n        area = width * height;\n        System.out.println(\"\u8ba1\u7b97\u77e9\u5f62\u9762\u79ef\");\n    }\n\n    @Override\n    public void display() {\n        System.out.println(\"\u8fd9\u662f\u4e00\u4e2a\u77e9\u5f62\uff0c\u5bbd\uff1a\" + width + \"\uff0c\u9ad8\uff1a\" + height + \"\uff0c\u9762\u79ef\uff1a\" + area);\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#polymorphism","title":"\u56db\u3001\u591a\u6001\uff08Polymorphism\uff09","text":""},{"location":"cs_base/language/java/java-oop/#41","title":"4.1 \u591a\u6001\u7684\u6982\u5ff5","text":"<p>\u591a\u6001\u5141\u8bb8\u4e0d\u540c\u7c7b\u7684\u5bf9\u8c61\u5bf9\u540c\u4e00\u6d88\u606f\u505a\u51fa\u4e0d\u540c\u7684\u54cd\u5e94\uff1a</p> Java<pre><code>public class PolymorphismDemo {\n    public static void main(String[] args) {\n        // \u591a\u6001\uff1a\u7236\u7c7b\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61\n        Animal animal1 = new Dog(\"\u65fa\u8d22\", 3, \"\u91d1\u6bdb\");\n        Animal animal2 = new Cat(\"\u54aa\u54aa\", 2);\n\n        // \u8c03\u7528\u91cd\u5199\u7684\u65b9\u6cd5\uff0c\u8868\u73b0\u51fa\u4e0d\u540c\u7684\u884c\u4e3a\n        animal1.eat();  // \u8f93\u51fa\uff1a\u65fa\u8d22\u6b63\u5728\u5403\u4e1c\u897f\n        animal2.eat();  // \u8f93\u51fa\uff1a\u54aa\u54aa\u6b63\u5728\u4f18\u96c5\u5730\u5403\u732b\u7cae\n\n        // \u591a\u6001\u6570\u7ec4\n        Animal[] animals = {\n            new Dog(\"\u5c0f\u9ed1\", 2, \"\u62c9\u5e03\u62c9\u591a\"),\n            new Cat(\"\u5c0f\u767d\", 1),\n            new Dog(\"\u5927\u9ec4\", 4, \"\u571f\u72d7\")\n        };\n\n        // \u7edf\u4e00\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\n        for (Animal animal : animals) {\n            animal.showInfo();\n            animal.eat();\n            System.out.println(\"---\");\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#42-instanceof","title":"4.2 instanceof \u8fd0\u7b97\u7b26","text":"<p>\u7528\u4e8e\u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u662f\u7279\u5b9a\u7c7b\u7684\u5b9e\u4f8b\uff1a</p> Java<pre><code>public class InstanceofDemo {\n    public static void processAnimal(Animal animal) {\n        animal.eat();  // \u591a\u6001\u8c03\u7528\n\n        // \u7c7b\u578b\u68c0\u67e5\u548c\u5411\u4e0b\u8f6c\u578b\n        if (animal instanceof Dog) {\n            Dog dog = (Dog) animal;  // \u5411\u4e0b\u8f6c\u578b\n            dog.bark();  // \u8c03\u7528\u5b50\u7c7b\u7279\u6709\u65b9\u6cd5\n        } else if (animal instanceof Cat) {\n            Cat cat = (Cat) animal;\n            cat.meow();\n        }\n    }\n\n    public static void main(String[] args) {\n        processAnimal(new Dog(\"\u65fa\u8d22\", 3, \"\u91d1\u6bdb\"));\n        processAnimal(new Cat(\"\u54aa\u54aa\", 2));\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#43","title":"4.3 \u62bd\u8c61\u65b9\u6cd5\u548c\u62bd\u8c61\u7c7b","text":"Java<pre><code>// \u62bd\u8c61\u7c7b\npublic abstract class Employee {\n    protected String name;\n    protected double baseSalary;\n\n    public Employee(String name, double baseSalary) {\n        this.name = name;\n        this.baseSalary = baseSalary;\n    }\n\n    // \u62bd\u8c61\u65b9\u6cd5\uff0c\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\n    public abstract double calculateSalary();\n\n    // \u5177\u4f53\u65b9\u6cd5\n    public void showInfo() {\n        System.out.println(\"\u5458\u5de5\uff1a\" + name + \"\uff0c\u5de5\u8d44\uff1a\" + calculateSalary());\n    }\n}\n\n// \u5177\u4f53\u5b50\u7c7b\npublic class FullTimeEmployee extends Employee {\n    private double bonus;\n\n    public FullTimeEmployee(String name, double baseSalary, double bonus) {\n        super(name, baseSalary);\n        this.bonus = bonus;\n    }\n\n    @Override\n    public double calculateSalary() {\n        return baseSalary + bonus;\n    }\n}\n\npublic class PartTimeEmployee extends Employee {\n    private int hoursWorked;\n    private double hourlyRate;\n\n    public PartTimeEmployee(String name, int hoursWorked, double hourlyRate) {\n        super(name, 0);  // \u517c\u804c\u5458\u5de5\u6ca1\u6709\u57fa\u672c\u5de5\u8d44\n        this.hoursWorked = hoursWorked;\n        this.hourlyRate = hourlyRate;\n    }\n\n    @Override\n    public double calculateSalary() {\n        return hoursWorked * hourlyRate;\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#final","title":"\u4e94\u3001final \u5173\u952e\u5b57","text":""},{"location":"cs_base/language/java/java-oop/#51-final","title":"5.1 final \u53d8\u91cf","text":"Java<pre><code>public class FinalVariableDemo {\n    // final \u5b9e\u4f8b\u53d8\u91cf\u5fc5\u987b\u521d\u59cb\u5316\n    private final String name = \"\u5f20\u4e09\";\n    private final int id;\n\n    // final \u9759\u6001\u53d8\u91cf\uff08\u5e38\u91cf\uff09\n    public static final double PI = 3.14159;\n    public static final String COMPANY_NAME = \"ABC\u516c\u53f8\";\n\n    public FinalVariableDemo(int id) {\n        this.id = id;  // \u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u521d\u59cb\u5316 final \u53d8\u91cf\n    }\n\n    public void method() {\n        final int localVar = 100;  // final \u5c40\u90e8\u53d8\u91cf\n        // localVar = 200;  // \u7f16\u8bd1\u9519\u8bef\uff1a\u65e0\u6cd5\u4fee\u6539 final \u53d8\u91cf\n\n        System.out.println(\"ID: \" + id + \", Name: \" + name);\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#52-final","title":"5.2 final \u65b9\u6cd5","text":"Java<pre><code>public class Parent {\n    // final \u65b9\u6cd5\u4e0d\u80fd\u88ab\u91cd\u5199\n    public final void finalMethod() {\n        System.out.println(\"\u8fd9\u662f\u4e00\u4e2a final \u65b9\u6cd5\");\n    }\n\n    public void normalMethod() {\n        System.out.println(\"\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u65b9\u6cd5\");\n    }\n}\n\npublic class Child extends Parent {\n    // @Override\n    // public void finalMethod() {  // \u7f16\u8bd1\u9519\u8bef\uff1a\u65e0\u6cd5\u91cd\u5199 final \u65b9\u6cd5\n    //     System.out.println(\"\u5c1d\u8bd5\u91cd\u5199 final \u65b9\u6cd5\");\n    // }\n\n    @Override\n    public void normalMethod() {\n        System.out.println(\"\u91cd\u5199\u666e\u901a\u65b9\u6cd5\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#53-final","title":"5.3 final \u7c7b","text":"Java<pre><code>// final \u7c7b\u4e0d\u80fd\u88ab\u7ee7\u627f\npublic final class FinalClass {\n    public void method() {\n        System.out.println(\"final \u7c7b\u7684\u65b9\u6cd5\");\n    }\n}\n\n// public class SubClass extends FinalClass {  // \u7f16\u8bd1\u9519\u8bef\uff1a\u65e0\u6cd5\u7ee7\u627f final \u7c7b\n// }\n\n// Java \u4e2d\u7684 final \u7c7b\u793a\u4f8b\n// String\u3001Integer\u3001Double \u7b49\u5305\u88c5\u7c7b\u90fd\u662f final \u7c7b\nString str = \"Hello\";  // String \u662f final \u7c7b\nInteger num = 100;     // Integer \u662f final \u7c7b\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#_3","title":"\u516d\u3001\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f","text":""},{"location":"cs_base/language/java/java-oop/#61","title":"6.1 \u5bf9\u8c61\u7684\u521b\u5efa\u8fc7\u7a0b","text":"Java<pre><code>public class ObjectLifecycle {\n    private String name;\n    private static int count = 0;\n\n    // \u9759\u6001\u4ee3\u7801\u5757\uff1a\u7c7b\u52a0\u8f7d\u65f6\u6267\u884c\n    static {\n        System.out.println(\"\u9759\u6001\u4ee3\u7801\u5757\u6267\u884c\");\n    }\n\n    // \u5b9e\u4f8b\u4ee3\u7801\u5757\uff1a\u6bcf\u6b21\u521b\u5efa\u5bf9\u8c61\u65f6\u6267\u884c\n    {\n        System.out.println(\"\u5b9e\u4f8b\u4ee3\u7801\u5757\u6267\u884c\");\n        count++;\n    }\n\n    // \u6784\u9020\u65b9\u6cd5\n    public ObjectLifecycle(String name) {\n        System.out.println(\"\u6784\u9020\u65b9\u6cd5\u6267\u884c\");\n        this.name = name;\n    }\n\n    public static int getCount() {\n        return count;\n    }\n}\n\n// \u6267\u884c\u987a\u5e8f\uff1a\u9759\u6001\u4ee3\u7801\u5757 \u2192 \u5b9e\u4f8b\u4ee3\u7801\u5757 \u2192 \u6784\u9020\u65b9\u6cd5\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#62","title":"6.2 \u5783\u573e\u56de\u6536","text":"Java<pre><code>public class GarbageCollectionDemo {\n    private String name;\n\n    public GarbageCollectionDemo(String name) {\n        this.name = name;\n    }\n\n    // finalize \u65b9\u6cd5\uff08\u4e0d\u63a8\u8350\u4f7f\u7528\uff09\n    @Override\n    protected void finalize() throws Throwable {\n        System.out.println(name + \" \u5bf9\u8c61\u88ab\u56de\u6536\");\n        super.finalize();\n    }\n\n    public static void main(String[] args) {\n        GarbageCollectionDemo obj1 = new GarbageCollectionDemo(\"\u5bf9\u8c611\");\n        GarbageCollectionDemo obj2 = new GarbageCollectionDemo(\"\u5bf9\u8c612\");\n\n        obj1 = null;  // \u53d6\u6d88\u5f15\u7528\n        obj2 = null;\n\n        System.gc();  // \u5efa\u8bae\u8fdb\u884c\u5783\u573e\u56de\u6536\uff08\u4e0d\u4fdd\u8bc1\u7acb\u5373\u6267\u884c\uff09\n\n        try {\n            Thread.sleep(1000);  // \u7b49\u5f85\u5783\u573e\u56de\u6536\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#_4","title":"\u4e03\u3001\u8bbe\u8ba1\u539f\u5219","text":""},{"location":"cs_base/language/java/java-oop/#71","title":"7.1 \u5355\u4e00\u804c\u8d23\u539f\u5219","text":"Java<pre><code>// \u4e0d\u597d\u7684\u8bbe\u8ba1\uff1a\u4e00\u4e2a\u7c7b\u627f\u62c5\u591a\u4e2a\u804c\u8d23\nclass BadEmployee {\n    private String name;\n    private double salary;\n\n    public void calculateSalary() { /* \u8ba1\u7b97\u5de5\u8d44 */ }\n    public void saveToDatabase() { /* \u4fdd\u5b58\u5230\u6570\u636e\u5e93 */ }\n    public void sendEmail() { /* \u53d1\u9001\u90ae\u4ef6 */ }\n}\n\n// \u597d\u7684\u8bbe\u8ba1\uff1a\u804c\u8d23\u5206\u79bb\nclass Employee {\n    private String name;\n    private double salary;\n\n    public void calculateSalary() { /* \u53ea\u8d1f\u8d23\u8ba1\u7b97\u5de5\u8d44 */ }\n    // getter \u548c setter \u65b9\u6cd5\n}\n\nclass EmployeeDAO {\n    public void save(Employee employee) { /* \u8d1f\u8d23\u6570\u636e\u6301\u4e45\u5316 */ }\n}\n\nclass EmailService {\n    public void sendEmail(Employee employee) { /* \u8d1f\u8d23\u53d1\u9001\u90ae\u4ef6 */ }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#72","title":"7.2 \u5f00\u95ed\u539f\u5219","text":"Java<pre><code>// \u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed\nabstract class Shape {\n    public abstract double calculateArea();\n}\n\nclass Circle extends Shape {\n    private double radius;\n\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    @Override\n    public double calculateArea() {\n        return Math.PI * radius * radius;\n    }\n}\n\nclass Rectangle extends Shape {\n    private double width, height;\n\n    public Rectangle(double width, double height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    @Override\n    public double calculateArea() {\n        return width * height;\n    }\n}\n\n// \u6dfb\u52a0\u65b0\u56fe\u5f62\u65f6\uff0c\u4e0d\u9700\u8981\u4fee\u6539\u73b0\u6709\u4ee3\u7801\nclass Triangle extends Shape {\n    private double base, height;\n\n    public Triangle(double base, double height) {\n        this.base = base;\n        this.height = height;\n    }\n\n    @Override\n    public double calculateArea() {\n        return 0.5 * base * height;\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-oop/#_5","title":"\u603b\u7ed3","text":"<p>\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u6838\u5fc3\u6982\u5ff5\uff1a</p> <ol> <li>\u5c01\u88c5\uff1a\u9690\u85cf\u5185\u90e8\u5b9e\u73b0\uff0c\u63d0\u4f9b\u516c\u5171\u63a5\u53e3</li> <li>\u7ee7\u627f\uff1a\u4ee3\u7801\u590d\u7528\uff0c\u5efa\u7acb\u7c7b\u4e4b\u95f4\u7684\u5c42\u6b21\u5173\u7cfb</li> <li>\u591a\u6001\uff1a\u540c\u4e00\u63a5\u53e3\uff0c\u4e0d\u540c\u5b9e\u73b0\uff0c\u63d0\u9ad8\u4ee3\u7801\u7075\u6d3b\u6027</li> <li>\u62bd\u8c61\uff1a\u63d0\u53d6\u5171\u540c\u7279\u5f81\uff0c\u5b9a\u4e49\u89c4\u8303</li> </ol> <p>\u8bbe\u8ba1\u539f\u5219\uff1a\u9ad8\u5185\u805a\u3001\u4f4e\u8026\u5408\uff0c\u9075\u5faa SOLID \u539f\u5219\uff0c\u7f16\u5199\u53ef\u7ef4\u62a4\u3001\u53ef\u6269\u5c55\u7684\u4ee3\u7801\u3002</p>"},{"location":"cs_base/language/java/java-reflection/","title":"Java \u53cd\u5c04\u673a\u5236","text":""},{"location":"cs_base/language/java/java-reflection/#java","title":"Java \u53cd\u5c04\u673a\u5236","text":"<p> \u7ea6 659 \u4e2a\u5b57  657 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p>"},{"location":"cs_base/language/java/java-reflection/#_1","title":"\u6982\u8ff0","text":"<p>Java\u53cd\u5c04\uff08Reflection\uff09\u662fJava\u8bed\u8a00\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u6027\uff0c\u5b83\u5141\u8bb8\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u548c\u64cd\u4f5c\u7c7b\u3001\u63a5\u53e3\u3001\u5b57\u6bb5\u548c\u65b9\u6cd5\u7684\u4fe1\u606f\u3002\u53cd\u5c04\u63d0\u4f9b\u4e86\u52a8\u6001\u83b7\u53d6\u7c7b\u4fe1\u606f\u548c\u52a8\u6001\u8c03\u7528\u5bf9\u8c61\u65b9\u6cd5\u7684\u80fd\u529b\uff0c\u662f\u8bb8\u591a\u6846\u67b6\uff08\u5982Spring\u3001Hibernate\uff09\u7684\u6838\u5fc3\u6280\u672f\u3002</p>"},{"location":"cs_base/language/java/java-reflection/#1","title":"1. \u53cd\u5c04\u57fa\u7840","text":""},{"location":"cs_base/language/java/java-reflection/#11","title":"1.1 \u4ec0\u4e48\u662f\u53cd\u5c04","text":"<p>\u53cd\u5c04\u662f\u6307\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u80fd\u591f\u83b7\u53d6\u81ea\u8eab\u7684\u4fe1\u606f\u3002\u5728Java\u4e2d\uff0c\u53cd\u5c04\u673a\u5236\u5141\u8bb8\u7a0b\u5e8f\u5728\u6267\u884c\u671f\u95f4\uff1a</p> <ul> <li>\u83b7\u53d6\u4efb\u610f\u4e00\u4e2a\u7c7b\u7684\u5185\u90e8\u4fe1\u606f</li> <li>\u83b7\u53d6\u4efb\u610f\u4e00\u4e2a\u5bf9\u8c61\u7684\u5b57\u6bb5\u548c\u65b9\u6cd5</li> <li>\u5728\u8fd0\u884c\u65f6\u521b\u5efa\u5bf9\u8c61\u548c\u8c03\u7528\u65b9\u6cd5</li> <li>\u5728\u8fd0\u884c\u65f6\u5904\u7406\u6ce8\u89e3</li> </ul>"},{"location":"cs_base/language/java/java-reflection/#12","title":"1.2 \u53cd\u5c04\u7684\u6838\u5fc3\u7c7b","text":"<ul> <li>Class\uff1a\u4ee3\u8868\u7c7b\u7684\u5b9e\u4f53\uff0c\u5728\u8fd0\u884c\u7684Java\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8868\u793a\u7c7b\u548c\u63a5\u53e3</li> <li>Field\uff1a\u4ee3\u8868\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff08\u5b57\u6bb5\uff09</li> <li>Method\uff1a\u4ee3\u8868\u7c7b\u7684\u65b9\u6cd5</li> <li>Constructor\uff1a\u4ee3\u8868\u7c7b\u7684\u6784\u9020\u65b9\u6cd5</li> </ul>"},{"location":"cs_base/language/java/java-reflection/#2-class","title":"2. Class\u5bf9\u8c61\u64cd\u4f5c","text":""},{"location":"cs_base/language/java/java-reflection/#21-class","title":"2.1 \u83b7\u53d6Class\u5bf9\u8c61\u7684\u65b9\u5f0f","text":"Java<pre><code>public class ClassExample {\n    public static void main(String[] args) throws ClassNotFoundException {\n        // \u65b9\u5f0f1\uff1a\u901a\u8fc7\u5bf9\u8c61\u7684getClass()\u65b9\u6cd5\n        String str = \"Hello\";\n        Class&lt;?&gt; clazz1 = str.getClass();\n        System.out.println(\"\u65b9\u5f0f1: \" + clazz1.getName());\n\n        // \u65b9\u5f0f2\uff1a\u901a\u8fc7\u7c7b\u7684.class\u5c5e\u6027\n        Class&lt;?&gt; clazz2 = String.class;\n        System.out.println(\"\u65b9\u5f0f2: \" + clazz2.getName());\n\n        // \u65b9\u5f0f3\uff1a\u901a\u8fc7Class.forName()\u65b9\u6cd5\n        Class&lt;?&gt; clazz3 = Class.forName(\"java.lang.String\");\n        System.out.println(\"\u65b9\u5f0f3: \" + clazz3.getName());\n\n        // \u9a8c\u8bc1\u4e09\u79cd\u65b9\u5f0f\u83b7\u53d6\u7684\u662f\u540c\u4e00\u4e2aClass\u5bf9\u8c61\n        System.out.println(\"clazz1 == clazz2: \" + (clazz1 == clazz2));\n        System.out.println(\"clazz2 == clazz3: \" + (clazz2 == clazz3));\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#22-class","title":"2.2 Class\u5bf9\u8c61\u7684\u5e38\u7528\u65b9\u6cd5","text":"Java<pre><code>import java.lang.reflect.*;\nimport java.util.Arrays;\n\npublic class ClassMethodsExample {\n    public static void main(String[] args) {\n        Class&lt;?&gt; clazz = String.class;\n\n        // \u83b7\u53d6\u7c7b\u540d\n        System.out.println(\"\u7c7b\u540d: \" + clazz.getName());\n        System.out.println(\"\u7b80\u5355\u7c7b\u540d: \" + clazz.getSimpleName());\n\n        // \u83b7\u53d6\u5305\u4fe1\u606f\n        System.out.println(\"\u5305\u540d: \" + clazz.getPackage().getName());\n\n        // \u83b7\u53d6\u7236\u7c7b\n        System.out.println(\"\u7236\u7c7b: \" + clazz.getSuperclass().getName());\n\n        // \u83b7\u53d6\u5b9e\u73b0\u7684\u63a5\u53e3\n        Class&lt;?&gt;[] interfaces = clazz.getInterfaces();\n        System.out.println(\"\u5b9e\u73b0\u7684\u63a5\u53e3: \" + Arrays.toString(interfaces));\n\n        // \u83b7\u53d6\u4fee\u9970\u7b26\n        int modifiers = clazz.getModifiers();\n        System.out.println(\"\u662f\u5426\u4e3apublic: \" + Modifier.isPublic(modifiers));\n        System.out.println(\"\u662f\u5426\u4e3afinal: \" + Modifier.isFinal(modifiers));\n\n        // \u5224\u65ad\u7c7b\u578b\n        System.out.println(\"\u662f\u5426\u4e3a\u63a5\u53e3: \" + clazz.isInterface());\n        System.out.println(\"\u662f\u5426\u4e3a\u6570\u7ec4: \" + clazz.isArray());\n        System.out.println(\"\u662f\u5426\u4e3a\u679a\u4e3e: \" + clazz.isEnum());\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#3","title":"3. \u5b57\u6bb5\u64cd\u4f5c","text":""},{"location":"cs_base/language/java/java-reflection/#31","title":"3.1 \u83b7\u53d6\u5b57\u6bb5\u4fe1\u606f","text":"Java<pre><code>import java.lang.reflect.Field;\n\nclass Person {\n    public String name;\n    private int age;\n    protected String address;\n    static String country = \"China\";\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n}\n\npublic class FieldExample {\n    public static void main(String[] args) throws Exception {\n        Class&lt;?&gt; clazz = Person.class;\n\n        System.out.println(\"=== \u83b7\u53d6\u6240\u6709public\u5b57\u6bb5 ===\");\n        Field[] publicFields = clazz.getFields();\n        for (Field field : publicFields) {\n            System.out.println(field.getName() + \" - \" + field.getType().getName());\n        }\n\n        System.out.println(\"\\n=== \u83b7\u53d6\u6240\u6709\u58f0\u660e\u7684\u5b57\u6bb5 ===\");\n        Field[] declaredFields = clazz.getDeclaredFields();\n        for (Field field : declaredFields) {\n            System.out.println(field.getName() + \" - \" + field.getType().getName() + \n                \" - \" + Modifier.toString(field.getModifiers()));\n        }\n\n        System.out.println(\"\\n=== \u83b7\u53d6\u7279\u5b9a\u5b57\u6bb5 ===\");\n        Field nameField = clazz.getField(\"name\");\n        System.out.println(\"name\u5b57\u6bb5: \" + nameField);\n\n        Field ageField = clazz.getDeclaredField(\"age\");\n        System.out.println(\"age\u5b57\u6bb5: \" + ageField);\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#32","title":"3.2 \u5b57\u6bb5\u503c\u7684\u8bfb\u53d6\u548c\u8bbe\u7f6e","text":"Java<pre><code>import java.lang.reflect.Field;\n\npublic class FieldAccessExample {\n    public static void main(String[] args) throws Exception {\n        Person person = new Person(\"\u5f20\u4e09\", 25);\n        Class&lt;?&gt; clazz = person.getClass();\n\n        // \u8bbf\u95eepublic\u5b57\u6bb5\n        Field nameField = clazz.getField(\"name\");\n        System.out.println(\"\u539f\u59cbname: \" + nameField.get(person));\n        nameField.set(person, \"\u674e\u56db\");\n        System.out.println(\"\u4fee\u6539\u540ename: \" + nameField.get(person));\n\n        // \u8bbf\u95eeprivate\u5b57\u6bb5\n        Field ageField = clazz.getDeclaredField(\"age\");\n        ageField.setAccessible(true); // \u8bbe\u7f6e\u53ef\u8bbf\u95ee\n        System.out.println(\"\u539f\u59cbage: \" + ageField.get(person));\n        ageField.set(person, 30);\n        System.out.println(\"\u4fee\u6539\u540eage: \" + ageField.get(person));\n\n        // \u8bbf\u95eestatic\u5b57\u6bb5\n        Field countryField = clazz.getDeclaredField(\"country\");\n        System.out.println(\"\u9759\u6001\u5b57\u6bb5country: \" + countryField.get(null));\n        countryField.set(null, \"USA\");\n        System.out.println(\"\u4fee\u6539\u540ecountry: \" + countryField.get(null));\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#4","title":"4. \u65b9\u6cd5\u64cd\u4f5c","text":""},{"location":"cs_base/language/java/java-reflection/#41","title":"4.1 \u83b7\u53d6\u65b9\u6cd5\u4fe1\u606f","text":"Java<pre><code>import java.lang.reflect.Method;\nimport java.util.Arrays;\n\nclass Calculator {\n    public int add(int a, int b) {\n        return a + b;\n    }\n\n    private int subtract(int a, int b) {\n        return a - b;\n    }\n\n    public static int multiply(int a, int b) {\n        return a * b;\n    }\n\n    public void printResult(String operation, int result) {\n        System.out.println(operation + \" = \" + result);\n    }\n}\n\npublic class MethodExample {\n    public static void main(String[] args) throws Exception {\n        Class&lt;?&gt; clazz = Calculator.class;\n\n        System.out.println(\"=== \u83b7\u53d6\u6240\u6709public\u65b9\u6cd5 ===\");\n        Method[] publicMethods = clazz.getMethods();\n        for (Method method : publicMethods) {\n            if (method.getDeclaringClass() == clazz) { // \u53ea\u663e\u793a\u5f53\u524d\u7c7b\u7684\u65b9\u6cd5\n                System.out.println(method.getName() + \" - \u53c2\u6570: \" + \n                    Arrays.toString(method.getParameterTypes()) + \n                    \" - \u8fd4\u56de\u7c7b\u578b: \" + method.getReturnType().getName());\n            }\n        }\n\n        System.out.println(\"\\n=== \u83b7\u53d6\u6240\u6709\u58f0\u660e\u7684\u65b9\u6cd5 ===\");\n        Method[] declaredMethods = clazz.getDeclaredMethods();\n        for (Method method : declaredMethods) {\n            System.out.println(method.getName() + \" - \" + \n                Modifier.toString(method.getModifiers()) + \n                \" - \u53c2\u6570: \" + Arrays.toString(method.getParameterTypes()));\n        }\n\n        System.out.println(\"\\n=== \u83b7\u53d6\u7279\u5b9a\u65b9\u6cd5 ===\");\n        Method addMethod = clazz.getMethod(\"add\", int.class, int.class);\n        System.out.println(\"add\u65b9\u6cd5: \" + addMethod);\n\n        Method subtractMethod = clazz.getDeclaredMethod(\"subtract\", int.class, int.class);\n        System.out.println(\"subtract\u65b9\u6cd5: \" + subtractMethod);\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#42","title":"4.2 \u52a8\u6001\u8c03\u7528\u65b9\u6cd5","text":"Java<pre><code>import java.lang.reflect.Method;\n\npublic class MethodInvokeExample {\n    public static void main(String[] args) throws Exception {\n        Calculator calculator = new Calculator();\n        Class&lt;?&gt; clazz = calculator.getClass();\n\n        // \u8c03\u7528\u5b9e\u4f8b\u65b9\u6cd5\n        Method addMethod = clazz.getMethod(\"add\", int.class, int.class);\n        Object result = addMethod.invoke(calculator, 10, 5);\n        System.out.println(\"add(10, 5) = \" + result);\n\n        // \u8c03\u7528private\u65b9\u6cd5\n        Method subtractMethod = clazz.getDeclaredMethod(\"subtract\", int.class, int.class);\n        subtractMethod.setAccessible(true);\n        Object result2 = subtractMethod.invoke(calculator, 10, 5);\n        System.out.println(\"subtract(10, 5) = \" + result2);\n\n        // \u8c03\u7528static\u65b9\u6cd5\n        Method multiplyMethod = clazz.getMethod(\"multiply\", int.class, int.class);\n        Object result3 = multiplyMethod.invoke(null, 10, 5);\n        System.out.println(\"multiply(10, 5) = \" + result3);\n\n        // \u8c03\u7528void\u65b9\u6cd5\n        Method printMethod = clazz.getMethod(\"printResult\", String.class, int.class);\n        printMethod.invoke(calculator, \"10 + 5\", 15);\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#5","title":"5. \u6784\u9020\u65b9\u6cd5\u64cd\u4f5c","text":""},{"location":"cs_base/language/java/java-reflection/#51","title":"5.1 \u83b7\u53d6\u548c\u4f7f\u7528\u6784\u9020\u65b9\u6cd5","text":"Java<pre><code>import java.lang.reflect.Constructor;\nimport java.util.Arrays;\n\nclass Student {\n    private String name;\n    private int age;\n    private String major;\n\n    public Student() {\n        this.name = \"Unknown\";\n        this.age = 0;\n    }\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    private Student(String name, int age, String major) {\n        this.name = name;\n        this.age = age;\n        this.major = major;\n    }\n\n    @Override\n    public String toString() {\n        return \"Student{name='\" + name + \"', age=\" + age + \", major='\" + major + \"'}\";\n    }\n}\n\npublic class ConstructorExample {\n    public static void main(String[] args) throws Exception {\n        Class&lt;?&gt; clazz = Student.class;\n\n        System.out.println(\"=== \u83b7\u53d6\u6240\u6709public\u6784\u9020\u65b9\u6cd5 ===\");\n        Constructor&lt;?&gt;[] publicConstructors = clazz.getConstructors();\n        for (Constructor&lt;?&gt; constructor : publicConstructors) {\n            System.out.println(\"\u53c2\u6570\u7c7b\u578b: \" + Arrays.toString(constructor.getParameterTypes()));\n        }\n\n        System.out.println(\"\\n=== \u83b7\u53d6\u6240\u6709\u58f0\u660e\u7684\u6784\u9020\u65b9\u6cd5 ===\");\n        Constructor&lt;?&gt;[] declaredConstructors = clazz.getDeclaredConstructors();\n        for (Constructor&lt;?&gt; constructor : declaredConstructors) {\n            System.out.println(Modifier.toString(constructor.getModifiers()) + \n                \" - \u53c2\u6570\u7c7b\u578b: \" + Arrays.toString(constructor.getParameterTypes()));\n        }\n\n        System.out.println(\"\\n=== \u4f7f\u7528\u6784\u9020\u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61 ===\");\n\n        // \u4f7f\u7528\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\n        Constructor&lt;?&gt; defaultConstructor = clazz.getConstructor();\n        Object student1 = defaultConstructor.newInstance();\n        System.out.println(\"\u65e0\u53c2\u6784\u9020: \" + student1);\n\n        // \u4f7f\u7528\u6709\u53c2\u6784\u9020\u65b9\u6cd5\n        Constructor&lt;?&gt; paramConstructor = clazz.getConstructor(String.class, int.class);\n        Object student2 = paramConstructor.newInstance(\"\u5f20\u4e09\", 20);\n        System.out.println(\"\u6709\u53c2\u6784\u9020: \" + student2);\n\n        // \u4f7f\u7528private\u6784\u9020\u65b9\u6cd5\n        Constructor&lt;?&gt; privateConstructor = clazz.getDeclaredConstructor(\n            String.class, int.class, String.class);\n        privateConstructor.setAccessible(true);\n        Object student3 = privateConstructor.newInstance(\"\u674e\u56db\", 22, \"\u8ba1\u7b97\u673a\u79d1\u5b66\");\n        System.out.println(\"\u79c1\u6709\u6784\u9020: \" + student3);\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#6","title":"6. \u6570\u7ec4\u64cd\u4f5c","text":""},{"location":"cs_base/language/java/java-reflection/#61","title":"6.1 \u52a8\u6001\u521b\u5efa\u548c\u64cd\u4f5c\u6570\u7ec4","text":"Java<pre><code>import java.lang.reflect.Array;\n\npublic class ArrayReflectionExample {\n    public static void main(String[] args) {\n        // \u521b\u5efa\u4e00\u7ef4\u6570\u7ec4\n        Object intArray = Array.newInstance(int.class, 5);\n\n        // \u8bbe\u7f6e\u6570\u7ec4\u5143\u7d20\n        for (int i = 0; i &lt; 5; i++) {\n            Array.set(intArray, i, i * 10);\n        }\n\n        // \u83b7\u53d6\u6570\u7ec4\u5143\u7d20\n        System.out.println(\"\u4e00\u7ef4\u6570\u7ec4:\");\n        for (int i = 0; i &lt; Array.getLength(intArray); i++) {\n            System.out.println(\"intArray[\" + i + \"] = \" + Array.get(intArray, i));\n        }\n\n        // \u521b\u5efa\u4e8c\u7ef4\u6570\u7ec4\n        Object stringArray2D = Array.newInstance(String.class, 3, 2);\n\n        // \u8bbe\u7f6e\u4e8c\u7ef4\u6570\u7ec4\u5143\u7d20\n        for (int i = 0; i &lt; 3; i++) {\n            Object row = Array.get(stringArray2D, i);\n            for (int j = 0; j &lt; 2; j++) {\n                Array.set(row, j, \"(\" + i + \",\" + j + \")\");\n            }\n        }\n\n        // \u83b7\u53d6\u4e8c\u7ef4\u6570\u7ec4\u5143\u7d20\n        System.out.println(\"\\n\u4e8c\u7ef4\u6570\u7ec4:\");\n        for (int i = 0; i &lt; Array.getLength(stringArray2D); i++) {\n            Object row = Array.get(stringArray2D, i);\n            for (int j = 0; j &lt; Array.getLength(row); j++) {\n                System.out.print(Array.get(row, j) + \" \");\n            }\n            System.out.println();\n        }\n\n        // \u83b7\u53d6\u6570\u7ec4\u7c7b\u578b\u4fe1\u606f\n        Class&lt;?&gt; arrayClass = intArray.getClass();\n        System.out.println(\"\\n\u6570\u7ec4\u7c7b\u578b\u4fe1\u606f:\");\n        System.out.println(\"\u662f\u5426\u4e3a\u6570\u7ec4: \" + arrayClass.isArray());\n        System.out.println(\"\u7ec4\u4ef6\u7c7b\u578b: \" + arrayClass.getComponentType());\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#7","title":"7. \u6ce8\u89e3\u5904\u7406","text":""},{"location":"cs_base/language/java/java-reflection/#71","title":"7.1 \u81ea\u5b9a\u4e49\u6ce8\u89e3","text":"Java<pre><code>import java.lang.annotation.*;\n\n// \u5b9a\u4e49\u6ce8\u89e3\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD})\n@interface MyAnnotation {\n    String value() default \"\";\n    int priority() default 0;\n}\n\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.FIELD)\n@interface FieldInfo {\n    String description();\n    boolean required() default false;\n}\n\n// \u4f7f\u7528\u6ce8\u89e3\u7684\u7c7b\n@MyAnnotation(value = \"\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\", priority = 1)\nclass AnnotatedClass {\n    @FieldInfo(description = \"\u7528\u6237\u540d\", required = true)\n    private String username;\n\n    @FieldInfo(description = \"\u5e74\u9f84\")\n    private int age;\n\n    @MyAnnotation(\"\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\")\n    public void testMethod() {\n        System.out.println(\"\u6d4b\u8bd5\u65b9\u6cd5\u6267\u884c\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#72","title":"7.2 \u8bfb\u53d6\u6ce8\u89e3\u4fe1\u606f","text":"Java<pre><code>import java.lang.reflect.Field;\nimport java.lang.reflect.Method;\n\npublic class AnnotationExample {\n    public static void main(String[] args) throws Exception {\n        Class&lt;?&gt; clazz = AnnotatedClass.class;\n\n        // \u8bfb\u53d6\u7c7b\u4e0a\u7684\u6ce8\u89e3\n        System.out.println(\"=== \u7c7b\u6ce8\u89e3 ===\");\n        if (clazz.isAnnotationPresent(MyAnnotation.class)) {\n            MyAnnotation classAnnotation = clazz.getAnnotation(MyAnnotation.class);\n            System.out.println(\"\u7c7b\u6ce8\u89e3\u503c: \" + classAnnotation.value());\n            System.out.println(\"\u7c7b\u6ce8\u89e3\u4f18\u5148\u7ea7: \" + classAnnotation.priority());\n        }\n\n        // \u8bfb\u53d6\u5b57\u6bb5\u4e0a\u7684\u6ce8\u89e3\n        System.out.println(\"\\n=== \u5b57\u6bb5\u6ce8\u89e3 ===\");\n        Field[] fields = clazz.getDeclaredFields();\n        for (Field field : fields) {\n            if (field.isAnnotationPresent(FieldInfo.class)) {\n                FieldInfo fieldInfo = field.getAnnotation(FieldInfo.class);\n                System.out.println(\"\u5b57\u6bb5: \" + field.getName());\n                System.out.println(\"  \u63cf\u8ff0: \" + fieldInfo.description());\n                System.out.println(\"  \u5fc5\u9700: \" + fieldInfo.required());\n            }\n        }\n\n        // \u8bfb\u53d6\u65b9\u6cd5\u4e0a\u7684\u6ce8\u89e3\n        System.out.println(\"\\n=== \u65b9\u6cd5\u6ce8\u89e3 ===\");\n        Method[] methods = clazz.getDeclaredMethods();\n        for (Method method : methods) {\n            if (method.isAnnotationPresent(MyAnnotation.class)) {\n                MyAnnotation methodAnnotation = method.getAnnotation(MyAnnotation.class);\n                System.out.println(\"\u65b9\u6cd5: \" + method.getName());\n                System.out.println(\"  \u6ce8\u89e3\u503c: \" + methodAnnotation.value());\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#8","title":"8. \u53cd\u5c04\u7684\u5e94\u7528\u573a\u666f","text":""},{"location":"cs_base/language/java/java-reflection/#81","title":"8.1 \u7b80\u5355\u7684\u4f9d\u8d56\u6ce8\u5165\u6846\u67b6","text":"Java<pre><code>import java.lang.annotation.*;\nimport java.lang.reflect.Field;\nimport java.util.HashMap;\nimport java.util.Map;\n\n// \u4f9d\u8d56\u6ce8\u5165\u6ce8\u89e3\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.FIELD)\n@interface Inject {\n}\n\n// \u670d\u52a1\u63a5\u53e3\u548c\u5b9e\u73b0\ninterface UserService {\n    void saveUser(String username);\n}\n\nclass UserServiceImpl implements UserService {\n    @Override\n    public void saveUser(String username) {\n        System.out.println(\"\u4fdd\u5b58\u7528\u6237: \" + username);\n    }\n}\n\n// \u63a7\u5236\u5668\u7c7b\nclass UserController {\n    @Inject\n    private UserService userService;\n\n    public void createUser(String username) {\n        if (userService != null) {\n            userService.saveUser(username);\n        } else {\n            System.out.println(\"UserService\u672a\u6ce8\u5165\");\n        }\n    }\n}\n\n// \u7b80\u5355\u7684\u4f9d\u8d56\u6ce8\u5165\u5bb9\u5668\nclass SimpleContainer {\n    private Map&lt;Class&lt;?&gt;, Object&gt; instances = new HashMap&lt;&gt;();\n\n    public void register(Class&lt;?&gt; interfaceClass, Object implementation) {\n        instances.put(interfaceClass, implementation);\n    }\n\n    public &lt;T&gt; T getInstance(Class&lt;T&gt; clazz) throws Exception {\n        T instance = clazz.getDeclaredConstructor().newInstance();\n        injectDependencies(instance);\n        return instance;\n    }\n\n    private void injectDependencies(Object instance) throws Exception {\n        Class&lt;?&gt; clazz = instance.getClass();\n        Field[] fields = clazz.getDeclaredFields();\n\n        for (Field field : fields) {\n            if (field.isAnnotationPresent(Inject.class)) {\n                Class&lt;?&gt; fieldType = field.getType();\n                Object dependency = instances.get(fieldType);\n\n                if (dependency != null) {\n                    field.setAccessible(true);\n                    field.set(instance, dependency);\n                }\n            }\n        }\n    }\n}\n\npublic class DIExample {\n    public static void main(String[] args) throws Exception {\n        // \u521b\u5efa\u5bb9\u5668\u5e76\u6ce8\u518c\u670d\u52a1\n        SimpleContainer container = new SimpleContainer();\n        container.register(UserService.class, new UserServiceImpl());\n\n        // \u83b7\u53d6\u63a7\u5236\u5668\u5b9e\u4f8b\uff08\u81ea\u52a8\u6ce8\u5165\u4f9d\u8d56\uff09\n        UserController controller = container.getInstance(UserController.class);\n        controller.createUser(\"\u5f20\u4e09\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#82","title":"8.2 \u5bf9\u8c61\u5e8f\u5217\u5316\u5de5\u5177","text":"Java<pre><code>import java.lang.reflect.Field;\nimport java.util.HashMap;\nimport java.util.Map;\n\nclass Person2 {\n    private String name;\n    private int age;\n    private String email;\n\n    public Person2(String name, int age, String email) {\n        this.name = name;\n        this.age = age;\n        this.email = email;\n    }\n\n    // getter\u548csetter\u65b9\u6cd5\u7701\u7565\n}\n\nclass ObjectSerializer {\n    public static Map&lt;String, Object&gt; toMap(Object obj) throws Exception {\n        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n        Class&lt;?&gt; clazz = obj.getClass();\n\n        Field[] fields = clazz.getDeclaredFields();\n        for (Field field : fields) {\n            field.setAccessible(true);\n            Object value = field.get(obj);\n            map.put(field.getName(), value);\n        }\n\n        return map;\n    }\n\n    public static &lt;T&gt; T fromMap(Map&lt;String, Object&gt; map, Class&lt;T&gt; clazz) throws Exception {\n        T instance = clazz.getDeclaredConstructor().newInstance();\n\n        Field[] fields = clazz.getDeclaredFields();\n        for (Field field : fields) {\n            field.setAccessible(true);\n            Object value = map.get(field.getName());\n            if (value != null) {\n                field.set(instance, value);\n            }\n        }\n\n        return instance;\n    }\n}\n\npublic class SerializationExample {\n    public static void main(String[] args) throws Exception {\n        Person2 person = new Person2(\"\u5f20\u4e09\", 25, \"zhangsan@example.com\");\n\n        // \u5bf9\u8c61\u8f6cMap\n        Map&lt;String, Object&gt; map = ObjectSerializer.toMap(person);\n        System.out.println(\"\u5bf9\u8c61\u8f6cMap: \" + map);\n\n        // Map\u8f6c\u5bf9\u8c61\n        Person2 newPerson = ObjectSerializer.fromMap(map, Person2.class);\n        System.out.println(\"Map\u8f6c\u5bf9\u8c61\u6210\u529f\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#9","title":"9. \u53cd\u5c04\u7684\u6027\u80fd\u8003\u8651","text":""},{"location":"cs_base/language/java/java-reflection/#91","title":"9.1 \u6027\u80fd\u6d4b\u8bd5","text":"Java<pre><code>import java.lang.reflect.Method;\n\nclass PerformanceTest {\n    public int add(int a, int b) {\n        return a + b;\n    }\n}\n\npublic class ReflectionPerformanceExample {\n    public static void main(String[] args) throws Exception {\n        PerformanceTest test = new PerformanceTest();\n        Method addMethod = test.getClass().getMethod(\"add\", int.class, int.class);\n\n        int iterations = 1000000;\n\n        // \u76f4\u63a5\u8c03\u7528\u6027\u80fd\u6d4b\u8bd5\n        long startTime = System.currentTimeMillis();\n        for (int i = 0; i &lt; iterations; i++) {\n            test.add(1, 2);\n        }\n        long directTime = System.currentTimeMillis() - startTime;\n\n        // \u53cd\u5c04\u8c03\u7528\u6027\u80fd\u6d4b\u8bd5\n        startTime = System.currentTimeMillis();\n        for (int i = 0; i &lt; iterations; i++) {\n            addMethod.invoke(test, 1, 2);\n        }\n        long reflectionTime = System.currentTimeMillis() - startTime;\n\n        System.out.println(\"\u76f4\u63a5\u8c03\u7528\u65f6\u95f4: \" + directTime + \"ms\");\n        System.out.println(\"\u53cd\u5c04\u8c03\u7528\u65f6\u95f4: \" + reflectionTime + \"ms\");\n        System.out.println(\"\u6027\u80fd\u5dee\u5f02: \" + (reflectionTime / (double) directTime) + \"\u500d\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#92","title":"9.2 \u6027\u80fd\u4f18\u5316\u5efa\u8bae","text":"Java<pre><code>import java.lang.reflect.Method;\nimport java.util.concurrent.ConcurrentHashMap;\n\n// \u7f13\u5b58\u53cd\u5c04\u5bf9\u8c61\nclass ReflectionCache {\n    private static final ConcurrentHashMap&lt;String, Method&gt; methodCache = \n        new ConcurrentHashMap&lt;&gt;();\n\n    public static Method getMethod(Class&lt;?&gt; clazz, String methodName, Class&lt;?&gt;... paramTypes) \n            throws NoSuchMethodException {\n        String key = clazz.getName() + \".\" + methodName;\n        return methodCache.computeIfAbsent(key, k -&gt; {\n            try {\n                return clazz.getMethod(methodName, paramTypes);\n            } catch (NoSuchMethodException e) {\n                throw new RuntimeException(e);\n            }\n        });\n    }\n}\n\npublic class ReflectionOptimizationExample {\n    public static void main(String[] args) throws Exception {\n        PerformanceTest test = new PerformanceTest();\n\n        int iterations = 1000000;\n\n        // \u672a\u7f13\u5b58\u7684\u53cd\u5c04\u8c03\u7528\n        long startTime = System.currentTimeMillis();\n        for (int i = 0; i &lt; iterations; i++) {\n            Method method = test.getClass().getMethod(\"add\", int.class, int.class);\n            method.invoke(test, 1, 2);\n        }\n        long uncachedTime = System.currentTimeMillis() - startTime;\n\n        // \u7f13\u5b58\u7684\u53cd\u5c04\u8c03\u7528\n        startTime = System.currentTimeMillis();\n        for (int i = 0; i &lt; iterations; i++) {\n            Method method = ReflectionCache.getMethod(test.getClass(), \"add\", int.class, int.class);\n            method.invoke(test, 1, 2);\n        }\n        long cachedTime = System.currentTimeMillis() - startTime;\n\n        System.out.println(\"\u672a\u7f13\u5b58\u53cd\u5c04\u65f6\u95f4: \" + uncachedTime + \"ms\");\n        System.out.println(\"\u7f13\u5b58\u53cd\u5c04\u65f6\u95f4: \" + cachedTime + \"ms\");\n        System.out.println(\"\u6027\u80fd\u63d0\u5347: \" + (uncachedTime / (double) cachedTime) + \"\u500d\");\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#10","title":"10. \u53cd\u5c04\u7684\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"cs_base/language/java/java-reflection/#101","title":"10.1 \u5b89\u5168\u6027\u8003\u8651","text":"Java<pre><code>import java.lang.reflect.Field;\n\npublic class SecurityExample {\n    private static final String SENSITIVE_DATA = \"\u654f\u611f\u4fe1\u606f\";\n\n    public static void safeReflectionAccess(Object obj, String fieldName) {\n        try {\n            Class&lt;?&gt; clazz = obj.getClass();\n            Field field = clazz.getDeclaredField(fieldName);\n\n            // \u68c0\u67e5\u5b89\u5168\u6027\n            if (field.getName().contains(\"password\") || \n                field.getName().contains(\"secret\")) {\n                System.out.println(\"\u62d2\u7edd\u8bbf\u95ee\u654f\u611f\u5b57\u6bb5: \" + fieldName);\n                return;\n            }\n\n            field.setAccessible(true);\n            Object value = field.get(obj);\n            System.out.println(fieldName + \": \" + value);\n\n        } catch (Exception e) {\n            System.out.println(\"\u8bbf\u95ee\u5b57\u6bb5\u5931\u8d25: \" + e.getMessage());\n        }\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#102","title":"10.2 \u5f02\u5e38\u5904\u7406","text":"Java<pre><code>import java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Method;\n\npublic class ExceptionHandlingExample {\n    public static Object safeInvoke(Object obj, String methodName, Object... args) {\n        try {\n            Class&lt;?&gt; clazz = obj.getClass();\n            Class&lt;?&gt;[] paramTypes = new Class[args.length];\n            for (int i = 0; i &lt; args.length; i++) {\n                paramTypes[i] = args[i].getClass();\n            }\n\n            Method method = clazz.getMethod(methodName, paramTypes);\n            return method.invoke(obj, args);\n\n        } catch (NoSuchMethodException e) {\n            System.err.println(\"\u65b9\u6cd5\u4e0d\u5b58\u5728: \" + methodName);\n        } catch (IllegalAccessException e) {\n            System.err.println(\"\u65b9\u6cd5\u8bbf\u95ee\u6743\u9650\u4e0d\u8db3: \" + methodName);\n        } catch (InvocationTargetException e) {\n            System.err.println(\"\u65b9\u6cd5\u6267\u884c\u5f02\u5e38: \" + e.getCause().getMessage());\n        } catch (Exception e) {\n            System.err.println(\"\u53cd\u5c04\u8c03\u7528\u5f02\u5e38: \" + e.getMessage());\n        }\n        return null;\n    }\n}\n</code></pre>"},{"location":"cs_base/language/java/java-reflection/#_2","title":"\u603b\u7ed3","text":"<p>Java\u53cd\u5c04\u673a\u5236\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u7279\u6027\uff0c\u5b83\u63d0\u4f9b\u4e86\u8fd0\u884c\u65f6\u68c0\u67e5\u548c\u64cd\u4f5c\u7c7b\u3001\u5b57\u6bb5\u3001\u65b9\u6cd5\u7684\u80fd\u529b\u3002\u638c\u63e1\u4ee5\u4e0b\u8981\u70b9\uff1a</p>"},{"location":"cs_base/language/java/java-reflection/#_3","title":"\u6838\u5fc3\u6982\u5ff5","text":"<ol> <li>Class\u5bf9\u8c61\uff1a\u53cd\u5c04\u7684\u5165\u53e3\u70b9\uff0c\u4ee3\u8868\u7c7b\u7684\u5143\u4fe1\u606f</li> <li>Field\u3001Method\u3001Constructor\uff1a\u5206\u522b\u4ee3\u8868\u5b57\u6bb5\u3001\u65b9\u6cd5\u548c\u6784\u9020\u5668</li> <li>\u52a8\u6001\u64cd\u4f5c\uff1a\u8fd0\u884c\u65f6\u521b\u5efa\u5bf9\u8c61\u3001\u8c03\u7528\u65b9\u6cd5\u3001\u8bbf\u95ee\u5b57\u6bb5</li> </ol>"},{"location":"cs_base/language/java/java-reflection/#_4","title":"\u4e3b\u8981\u7528\u9014","text":"<ol> <li>\u6846\u67b6\u5f00\u53d1\uff1aSpring\u3001Hibernate\u7b49\u6846\u67b6\u7684\u6838\u5fc3\u6280\u672f</li> <li>\u914d\u7f6e\u9a71\u52a8\uff1a\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u52a8\u6001\u521b\u5efa\u5bf9\u8c61</li> <li>\u6ce8\u89e3\u5904\u7406\uff1a\u8bfb\u53d6\u548c\u5904\u7406\u6ce8\u89e3\u4fe1\u606f</li> <li>\u5e8f\u5217\u5316\uff1a\u5bf9\u8c61\u4e0e\u5176\u4ed6\u683c\u5f0f\u7684\u8f6c\u6362</li> </ol>"},{"location":"cs_base/language/java/java-reflection/#_5","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u6027\u80fd\u5f71\u54cd\uff1a\u53cd\u5c04\u6bd4\u76f4\u63a5\u8c03\u7528\u6162\uff0c\u9700\u8981\u5408\u7406\u4f7f\u7528</li> <li>\u5b89\u5168\u6027\uff1a\u53ef\u80fd\u7834\u574f\u5c01\u88c5\u6027\uff0c\u9700\u8981\u8c28\u614e\u5904\u7406</li> <li>\u5f02\u5e38\u5904\u7406\uff1a\u53cd\u5c04\u64cd\u4f5c\u53ef\u80fd\u629b\u51fa\u591a\u79cd\u5f02\u5e38</li> <li>\u7f13\u5b58\u4f18\u5316\uff1a\u7f13\u5b58\u53cd\u5c04\u5bf9\u8c61\u4ee5\u63d0\u9ad8\u6027\u80fd</li> </ol> <p>\u53cd\u5c04\u662fJava\u9ad8\u7ea7\u7279\u6027\u4e4b\u4e00\uff0c\u5408\u7406\u4f7f\u7528\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u7a0b\u5e8f\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002</p>"}]}