# .github/workflows/ci.yml
name: Deploy MkDocs
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache MkDocs
        uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip list

      - name: Install additional plugins
        run: |
          # Try to install from TonyCrane's toolchain first, fallback to PyPI
          git clone --recursive https://github.com/TonyCrane/mkdocs-toolchain || true
          if [ -d "mkdocs-toolchain" ]; then
            cd mkdocs-toolchain
            git submodule update --init --recursive || true
            # Install plugins that exist
            [ -d "mkdocs-encryptcontent-plugin" ] && pip install -e ./mkdocs-encryptcontent-plugin || pip install mkdocs-encryptcontent-plugin
            [ -d "mkdocs-git-revision-date-localized-plugin" ] && pip install -e ./mkdocs-git-revision-date-localized-plugin || pip install mkdocs-git-revision-date-localized-plugin
            [ -d "mkdocs-rss-plugin" ] && pip install -e ./mkdocs-rss-plugin || pip install mkdocs-rss-plugin
            [ -d "mkdocs-heti-plugin" ] && pip install -e ./mkdocs-heti-plugin || true
            [ -d "mkdocs-statistics-plugin" ] && pip install -e ./mkdocs-statistics-plugin || pip install mkdocs-statistics-plugin
            cd ..
            rm -rf mkdocs-toolchain
          else
            # Fallback to PyPI installation
            pip install mkdocs-encryptcontent-plugin
            pip install mkdocs-git-revision-date-localized-plugin
            pip install mkdocs-rss-plugin
            pip install mkdocs-statistics-plugin
          fi

      # mkdocs-statistics-plugin is already installed from mkdocs-toolchain
      # - name: Install modified mkdocs-statistics-plugin
      #   run: |
      #     git clone https://github.com/KinnariyaMamaTanha/mkdocs-statistics-plugin
      #     pip install ./mkdocs-statistics-plugin
      #     rm -rf mkdocs-statistics-plugin

      - name: Debug Info
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "Python version:"
          python --version
          echo "MkDocs version:"
          mkdocs --version
          echo "Config file contents:"
          cat mkdocs.yml
          pip list

      - name: Build and Deploy
        run: |
          mkdocs build --verbose
          mkdocs gh-deploy --force --verbose
